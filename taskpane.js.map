{"version":3,"file":"taskpane.js","mappings":"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","sources":["webpack://office-addin-taskpane-js/./node_modules/html-loader/dist/runtime/getUrl.js","webpack://office-addin-taskpane-js/webpack/bootstrap","webpack://office-addin-taskpane-js/webpack/runtime/compat get default export","webpack://office-addin-taskpane-js/webpack/runtime/define property getters","webpack://office-addin-taskpane-js/webpack/runtime/global","webpack://office-addin-taskpane-js/webpack/runtime/hasOwnProperty shorthand","webpack://office-addin-taskpane-js/webpack/runtime/publicPath","webpack://office-addin-taskpane-js/webpack/runtime/jsonp chunk loading","webpack://office-addin-taskpane-js/./src/taskpane/taskpane.js","webpack://office-addin-taskpane-js/./src/taskpane/taskpane.html"],"sourcesContent":["\"use strict\";\n\nmodule.exports = function (url, options) {\n  if (!options) {\n    // eslint-disable-next-line no-param-reassign\n    options = {};\n  }\n  if (!url) {\n    return url;\n  }\n\n  // eslint-disable-next-line no-underscore-dangle, no-param-reassign\n  url = String(url.__esModule ? url.default : url);\n  if (options.hash) {\n    // eslint-disable-next-line no-param-reassign\n    url += options.hash;\n  }\n  if (options.maybeNeedQuotes && /[\\t\\n\\f\\r \"'=<>`]/.test(url)) {\n    return \"\\\"\".concat(url, \"\\\"\");\n  }\n  return url;\n};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t926: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","function getPrompts() {\r\n    return JSON.parse(localStorage.getItem('prompts') || '[]');\r\n}\r\n\r\nfunction savePrompts(prompts) {\r\n    localStorage.setItem('prompts', JSON.stringify(prompts));\r\n}\r\n\r\nfunction getLastSelectedPromptIndex() {\r\n    return parseInt(localStorage.getItem('lastSelectedPromptIndex') || '-1', 10);\r\n}\r\n\r\nfunction saveLastSelectedPromptIndex(index) {\r\n    localStorage.setItem('lastSelectedPromptIndex', index.toString());\r\n}\r\n\r\n\r\n\r\nfunction initSettings() {\r\n    const settingsTab = document.getElementById('settings');\r\n    settingsTab.innerHTML = `\r\n        <div class=\"mt-3\">\r\n            <label for=\"api-key\" class=\"form-label\">API Ключ:</label>\r\n            <input type=\"password\" id=\"api-key\" class=\"form-control\">\r\n        </div>\r\n        <div class=\"mt-3\">\r\n            <label for=\"formatting-model\" class=\"form-label\">Модель для форматирования:</label>\r\n            <select id=\"formatting-model\" class=\"form-select\"></select>\r\n        </div>\r\n        <div class=\"mt-3 form-check\">\r\n            <input type=\"checkbox\" class=\"form-check-input\" id=\"apply-formatting\">\r\n            <label class=\"form-check-label\" for=\"apply-formatting\">Применять форматирование</label>\r\n        </div>\r\n    `;\r\n\r\n    document.getElementById('api-key').onchange = saveApiKey;\r\n    document.getElementById('formatting-model').onchange = saveFormattingModel;\r\n    document.getElementById('apply-formatting').onchange = saveApplyFormatting;\r\n    loadModels();\r\n    loadSettings();\r\n\r\n    // Инициализируем Select2 для выбора модели форматирования\r\n    $('#formatting-model').select2({\r\n        width: '100%',\r\n        placeholder: 'Выберите модель для форматирования',\r\n    }).on('select2:opening', function() {\r\n        setTimeout(() => {\r\n            $('.select2-search__field').get(0).focus();\r\n        }, 0);\r\n    });\r\n}\r\n\r\n\r\nfunction saveFormattingModel() {\r\n    const formattingModel = document.getElementById('formatting-model').value;\r\n    localStorage.setItem('formattingModel', formattingModel);\r\n}\r\n\r\nfunction saveApplyFormatting() {\r\n    const applyFormatting = document.getElementById('apply-formatting').checked;\r\n    localStorage.setItem('applyFormatting', applyFormatting);\r\n}\r\n\r\nfunction loadSettings() {\r\n    const apiKey = localStorage.getItem('apiKey') || '';\r\n    const formattingModel = localStorage.getItem('formattingModel') || 'openai/gpt-4-mini';\r\n    const applyFormatting = localStorage.getItem('applyFormatting') === 'true';\r\n\r\n    document.getElementById('api-key').value = apiKey;\r\n    $('#formatting-model').val(formattingModel).trigger('change');\r\n    document.getElementById('apply-formatting').checked = applyFormatting;\r\n}\r\n\r\n\r\n\r\nfunction populateModelSelectt(models) {\r\n    const promptModelSelect = $('#prompt-model');\r\n    const formattingModelSelect = $('#formatting-model');\r\n\r\n    [promptModelSelect, formattingModelSelect].forEach(select => {\r\n        select.empty();\r\n        models.forEach(model => {\r\n            const option = new Option(model.name, model.id, false, false);\r\n            select.append(option);\r\n        });\r\n        select.trigger('change');\r\n    });\r\n\r\n    // Устанавливаем значение по умолчанию для formatting-model\r\n    const defaultModel = models.find(model => model.id === 'openai/gpt-4-mini') || models[0];\r\n    if (defaultModel) {\r\n        formattingModelSelect.val(defaultModel.id).trigger('change');\r\n    }\r\n\r\n    // Загружаем сохраненное значение, если оно есть\r\n    const savedModel = localStorage.getItem('formattingModel');\r\n    if (savedModel && models.some(model => model.id === savedModel)) {\r\n        formattingModelSelect.val(savedModel).trigger('change');\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction saveApiKey() {\r\n    const apiKey = document.getElementById('api-key').value;\r\n    localStorage.setItem('apiKey', apiKey);\r\n}\r\n\r\n\r\n\r\n\r\nconst OPENROUTER_BASE_URL = \"https://openrouter.ai/api/v1\";\r\n\r\nasync function loadModels() {\r\n    try {\r\n        const response = await axios.get(`${OPENROUTER_BASE_URL}/models`);\r\n        const models = response.data.data;\r\n        localStorage.setItem('models', JSON.stringify(models));\r\n        populateModelSelectt(models);\r\n    } catch (error) {\r\n        console.error('Error loading models:', error);\r\n    }\r\n}\r\n\r\nasync function generateTextWithAI(systemPrompt, userPrompt, model, signal) {\r\n    const apiKey = localStorage.getItem('apiKey');\r\n\r\n    try {\r\n        const response = await fetch(`${OPENROUTER_BASE_URL}/chat/completions`, {\r\n            method: 'POST',\r\n            signal,\r\n            headers: {\r\n                'Authorization': `Bearer ${apiKey}`,\r\n                'Content-Type': 'application/json',\r\n                'HTTP-Referer': 'https://www.office.com',\r\n                'X-Title': 'Word AI Assistant',\r\n            },\r\n            body: JSON.stringify({\r\n                model: model,\r\n                messages: [\r\n                    { role: \"system\", content: systemPrompt },\r\n                    { role: \"user\", content: userPrompt }\r\n                ],\r\n            }),\r\n        });\r\n\r\n        if (!response.ok) {\r\n            throw new Error(`HTTP error! status: ${response.status}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n        return data.choices[0].message.content.trim();\r\n    } catch (error) {\r\n        console.error('Error in generateTextWithAI:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\nasync function generateTextWithAIFormat(systemPrompt, userPrompt, model, signal) {\r\n    const apiKey = localStorage.getItem('apiKey');\r\n\r\n    try {\r\n        const response = await fetch(`${OPENROUTER_BASE_URL}/chat/completions`, {\r\n            method: 'POST',\r\n            signal,\r\n            headers: {\r\n                'Authorization': `Bearer ${apiKey}`,\r\n                'Content-Type': 'application/json',\r\n                'HTTP-Referer': 'https://www.office.com',\r\n                'X-Title': 'Word AI Assistant',\r\n            },\r\n            body: JSON.stringify({\r\n                model: model,\r\n                messages: [\r\n                    { role: \"system\", content: systemPrompt },\r\n                    { role: \"user\", content: userPrompt }\r\n                ],\r\n            }),\r\n        });\r\n\r\n        if (!response.ok) {\r\n            throw new Error(`HTTP error! status: ${response.status}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n        return data.choices[0].message.content.trim();\r\n    } catch (error) {\r\n        console.error('Error in generateTextWithAI:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\n\r\n\r\nlet originalText = \"\";\r\nlet currentController = null;\r\nlet lastSelectedPrompt = null;\r\n\r\nfunction initHome() {\r\n  const homeTab = document.getElementById('home');\r\n  homeTab.innerHTML = `\r\n      <select id=\"prompt-select\" class=\"form-select mt-3\"></select>\r\n      <div id=\"selected-model\" class=\"mt-2\"></div>\r\n      <button id=\"replace-text\" class=\"btn btn-primary mt-3\" disabled>Заменить выделенный текст</button>\r\n      <button id=\"cancel-request\" class=\"btn btn-secondary mt-3\" style=\"display: none;\">Отменить запрос</button>\r\n      <button id=\"show-selected-text\" class=\"btn btn-info mt-3\">Показать информацию о выделенном тексте</button>\r\n      <!-- <button id=\"apply-tricks\" class=\"btn btn-warning mt-3\">Применить приколы</button>\r\n      <button id=\"repeat-styles\" class=\"btn btn-primary mt-3\">Повтор стилей</button> -->\r\n      <div id=\"selected-text-info\" class=\"mt-3\"></div>\r\n  `;\r\n\r\n  $('#prompt-select').select2({\r\n      width: '100%',\r\n      placeholder: 'Выберите промпт',\r\n      templateResult: formatPrompt,\r\n      templateSelection: formatPromptSelection,\r\n  });\r\n\r\n  document.getElementById(\"replace-text\").onclick = replaceSelectedText;\r\n  document.getElementById(\"cancel-request\").onclick = cancelRequest;\r\n  document.getElementById(\"show-selected-text\").onclick = showSelectedText;\r\n  // document.getElementById(\"apply-tricks\").onclick = applyTricks;\r\n  // document.getElementById(\"repeat-styles\").onclick = repeatStyles;\r\n\r\n  updatePromptSelect();\r\n  setInterval(checkSelection, 1000);\r\n}\r\n\r\nfunction formatPrompt(prompt) {\r\n    if (!prompt.id) {\r\n        return prompt.text;\r\n    }\r\n    const prompts = getPrompts();\r\n    const promptData = prompts[prompt.id];\r\n    return $(`<span>${promptData.name} (${promptData.model})</span>`);\r\n}\r\n\r\nfunction formatPromptSelection(prompt) {\r\n    if (!prompt.id) {\r\n        return prompt.text;\r\n    }\r\n    const prompts = getPrompts();\r\n    const promptData = prompts[prompt.id];\r\n    return promptData.name;\r\n}\r\n\r\nfunction updatePromptSelect() {\r\n    const select = $('#prompt-select');\r\n    const modelDiv = document.getElementById('selected-model');\r\n    const prompts = getPrompts();\r\n    select.empty();\r\n    select.append(new Option('Выберите промпт', '', true, true));\r\n    const lastSelectedPromptIndex = getLastSelectedPromptIndex();\r\n    prompts.forEach((prompt, index) => {\r\n        const option = new Option(prompt.name, index, false, index === lastSelectedPromptIndex);\r\n        select.append(option);\r\n    });\r\n    select.trigger('change');\r\n    const promptIndex = lastSelectedPromptIndex >= 0 && lastSelectedPromptIndex < prompts.length ? lastSelectedPromptIndex : null;\r\n    lastSelectedPrompt = promptIndex !== null ? prompts[promptIndex] : null;\r\n    modelDiv.textContent = lastSelectedPrompt ? `Модель: ${lastSelectedPrompt.model}` : '';\r\n    document.getElementById(\"replace-text\").disabled = !lastSelectedPrompt;\r\n    select.on('change', function() {\r\n        const newPromptIndex = $(this).val();\r\n        lastSelectedPrompt = newPromptIndex ? prompts[newPromptIndex] : null;\r\n        saveLastSelectedPromptIndex(newPromptIndex || -1);\r\n        modelDiv.textContent = lastSelectedPrompt ? `Модель: ${lastSelectedPrompt.model}` : '';\r\n        document.getElementById(\"replace-text\").disabled = !lastSelectedPrompt;\r\n    });\r\n}\r\n\r\nfunction checkSelection() {\r\n    Word.run(async (context) => {\r\n        const selection = context.document.getSelection();\r\n        selection.load(\"text\");\r\n        await context.sync();\r\n\r\n        const replaceButton = document.getElementById(\"replace-text\");\r\n        if (selection.text.trim().length > 0) {\r\n            replaceButton.disabled = false;\r\n        } else {\r\n            replaceButton.disabled = true;\r\n        }\r\n    });\r\n}\r\n\r\nasync function replaceSelectedText() {\r\n  Word.run(async (context) => {\r\n      const selection = context.document.getSelection();\r\n      selection.load(\"text\");\r\n      await context.sync();\r\n\r\n      originalText = selection.text;\r\n\r\n      if (!lastSelectedPrompt) return;\r\n\r\n      document.getElementById(\"replace-text\").style.display = \"none\";\r\n      document.getElementById(\"cancel-request\").style.display = \"inline-block\";\r\n\r\n      try {\r\n          currentController = new AbortController();\r\n\r\n          const applyFormatting = localStorage.getItem('applyFormatting') === 'true';\r\n          const formattingModel = localStorage.getItem('formattingModel') || 'openai/gpt-4-mini';\r\n          let formattingInfo = [];\r\n\r\n          if (applyFormatting) {\r\n              formattingInfo = await getWordsInfo(context, selection);\r\n          }\r\n\r\n          const systemPrompt = `You are an AI assistant specialized in text processing and formatting. Your task is to generate text based on user prompts and, when required, update formatting information for the generated text. Always provide responses in the requested format.`;\r\n\r\n          const userPrompt = `${lastSelectedPrompt.text}\\n\\nUser provided the following text: \"${originalText}\"${applyFormatting ? `\\n\\nFormatting information: ${JSON.stringify(formattingInfo)}` : ''}`;\r\n\r\n          const generatedText = await generateTextWithAI(systemPrompt, userPrompt, lastSelectedPrompt.model, currentController.signal);\r\n\r\n          if (applyFormatting) {\r\n              const secondSystemPrompt = `You are an AI assistant specialized in text formatting. Your task is to update formatting information for modified text while preserving the original styles as much as possible. Always return your response as a valid JSON array.`;\r\n\r\n              const secondUserPrompt = `\r\nOriginal text: \"${originalText}\"\r\nModified text: \"${generatedText}\"\r\nOriginal formatting information: ${JSON.stringify(formattingInfo)}\r\n\r\nTask: Update the formatting information to match the new text while preserving the original styles and formats. Return ONLY the updated formatting information array in valid JSON format.\r\n\r\nInstructions:\r\n1. Analyze the original and modified texts.\r\n2. Create a new array of formatting information for the modified text.\r\n3. Preserve the original formatting styles as much as possible.\r\n4. Ensure the number of elements in the array matches the number of words in the modified text.\r\n5. Return ONLY the JSON array, without any additional text or explanation.\r\n\r\nThe JSON array should contain objects with the following possible properties:\r\n- text: string (required) - the word from the modified text\r\n- bold: boolean\r\n- italic: boolean\r\n- underline: boolean\r\n- color: string (e.g., \"#FF0000\" for red)\r\n- highlightColor: string (e.g., \"yellow\")\r\n- size: number\r\n- fontName: string\r\n- hyperlink: string (URL)\r\n- footnoteText: string\r\n\r\nExample of a valid response:\r\n[\r\n{\"text\": \"This\", \"bold\": true, \"color\": \"#0000FF\"},\r\n{\"text\": \"is\", \"italic\": true},\r\n{\"text\": \"an\", \"underline\": true},\r\n{\"text\": \"example\", \"size\": 14, \"fontName\": \"Arial\"},\r\n{\"text\": \"with\", \"highlightColor\": \"yellow\"},\r\n{\"text\": \"formatting\", \"hyperlink\": \"https://example.com\"},\r\n{\"text\": \"applied\", \"footnoteText\": \"This is a footnote example\"}\r\n]\r\n\r\nEnsure your response is a valid JSON array and includes formatting information for all words in the modified text.`;\r\n\r\n              let updatedFormattingInfo;\r\n              try {\r\n                  const formattingResponse = await generateTextWithAIFormat(secondSystemPrompt, secondUserPrompt, formattingModel, currentController.signal);\r\n                  updatedFormattingInfo = JSON.parse(formattingResponse);\r\n\r\n                  if (!Array.isArray(updatedFormattingInfo)) {\r\n                      throw new Error(\"Response is not an array\");\r\n                  }\r\n              } catch (error) {\r\n                  console.error(\"Error parsing formatting information:\", error);\r\n                  selection.insertText(generatedText, Word.InsertLocation.replace);\r\n                  return;\r\n              }\r\n\r\n              await applyFormattedText(context, selection, generatedText, updatedFormattingInfo);\r\n          } else {\r\n              selection.insertText(generatedText, Word.InsertLocation.replace);\r\n          }\r\n      } catch (error) {\r\n          if (error.name !== 'AbortError') {\r\n              console.error('Error:', error);\r\n          }\r\n      } finally {\r\n          document.getElementById(\"cancel-request\").style.display = \"none\";\r\n          document.getElementById(\"replace-text\").style.display = \"inline-block\";\r\n          currentController = null;\r\n      }\r\n  });\r\n}\r\n\r\n\r\nasync function applyFormattedText(context, selection, newText, formattingInfo) {\r\n  selection.clear();\r\n  await context.sync();\r\n\r\n  const words = newText.split(/\\s+/);\r\n  let wordIndex = 0;\r\n\r\n  for (let i = 0; i < words.length; i++) {\r\n      let word = words[i];\r\n      let range = selection.insertText(word, Word.InsertLocation.end);\r\n\r\n      if (wordIndex < formattingInfo.length) {\r\n          const wordInfo = formattingInfo[wordIndex];\r\n\r\n          if (wordInfo.bold !== undefined) range.font.bold = wordInfo.bold;\r\n          if (wordInfo.italic !== undefined) range.font.italic = wordInfo.italic;\r\n          if (wordInfo.color) range.font.color = wordInfo.color;\r\n          if (wordInfo.highlightColor) range.font.highlightColor = wordInfo.highlightColor;\r\n          if (wordInfo.size) range.font.size = wordInfo.size;\r\n\r\n          if (wordInfo.hyperlink) {\r\n              range.hyperlink = wordInfo.hyperlink;\r\n          }\r\n\r\n          if (wordInfo.footnoteText) {\r\n              let newFootnote = range.insertFootnote();\r\n              newFootnote.body.insertText(wordInfo.footnoteText, Word.InsertLocation.start);\r\n          }\r\n\r\n          wordIndex++;\r\n      }\r\n\r\n      if (i < words.length - 1) {\r\n          selection.insertText(\" \", Word.InsertLocation.end);\r\n      }\r\n\r\n      await context.sync();\r\n  }\r\n}\r\n\r\n\r\nfunction cancelRequest() {\r\n    if (currentController) {\r\n        currentController.abort();\r\n        document.getElementById(\"cancel-request\").style.display = \"none\";\r\n        document.getElementById(\"replace-text\").style.display = \"inline-block\";\r\n    }\r\n}\r\n\r\nasync function applyTricks() {\r\n  await Word.run(async (context) => {\r\n    const selection = context.document.getSelection();\r\n    selection.load(\"text\");\r\n    await context.sync();\r\n\r\n    const words = selection.text.trim().split(/\\s+/);\r\n    if (words.length < 4) {\r\n      console.log(\"Выделите минимум 4 слова\");\r\n      return;\r\n    }\r\n\r\n    const range = selection.getRange();\r\n    range.clear();\r\n    await context.sync();\r\n\r\n    for (let i = 0; i < words.length; i++) {\r\n      const word = words[i];\r\n      let wordRange = range.insertText(word + \" \", Word.InsertLocation.end);\r\n\r\n      wordRange.font.bold = false;\r\n      wordRange.font.italic = false;\r\n      wordRange.font.color = 'black';\r\n      wordRange.font.highlightColor = \"white\";\r\n      wordRange.font.size = 11;\r\n\r\n      if (i === 0) {\r\n        wordRange.font.bold = true;\r\n      }\r\n\r\n      if (i === 1) {\r\n        wordRange.font.italic = true;\r\n      }\r\n\r\n      if (i === 2) {\r\n        wordRange.hyperlink = \"https://www.example.com\";\r\n      }\r\n\r\n      if (i === 3) {\r\n        wordRange.font.color = 'red';\r\n      }\r\n\r\n      if (i === 4) {\r\n        wordRange.font.highlightColor = 'yellow';\r\n      }\r\n\r\n      if (i === 5) {\r\n        wordRange.font.size = 16;\r\n      }\r\n\r\n      if (i === words.length - 1) {\r\n        let footnote = wordRange.insertFootnote();\r\n        footnote.body.insertText(\"Это пример сноски\", Word.InsertLocation.start);\r\n      }\r\n\r\n      await context.sync();\r\n    }\r\n  });\r\n}\r\n\r\nfunction formatSpecialWords(wordsInfo, baseColor, baseFont, baseSize) {\r\n  let formattedText = [];\r\n  let footnotes = [];\r\n\r\n  wordsInfo.forEach((word, index) => {\r\n    let wordData = { text: word.text };\r\n    let hasSpecialFormatting = false;\r\n\r\n    let formatting = {};\r\n\r\n    if (word.bold === true || word.bold === null) {\r\n      formatting.bold = true;\r\n      hasSpecialFormatting = true;\r\n    }\r\n    if (word.italic) {\r\n      formatting.italic = true;\r\n      hasSpecialFormatting = true;\r\n    }\r\n    if (word.underline) {\r\n      formatting.underline = true;\r\n      hasSpecialFormatting = true;\r\n    }\r\n    if (word.color !== baseColor && word.color !== \"\") {\r\n      formatting.color = word.color;\r\n      hasSpecialFormatting = true;\r\n    }\r\n    if (word.highlightColor && word.highlightColor !== null) {\r\n      formatting.highlight = word.highlightColor;\r\n      hasSpecialFormatting = true;\r\n    }\r\n    if (word.fontName !== baseFont && word.fontName !== \"\") {\r\n      formatting.font = word.fontName;\r\n      hasSpecialFormatting = true;\r\n    }\r\n    if (word.fontSize != baseSize && word.fontSize !== \"\" && word.fontSize !== null) {\r\n      formatting.size = word.fontSize;\r\n      hasSpecialFormatting = true;\r\n    }\r\n    if (word.hyperlink) {\r\n      formatting.hyperlink = word.hyperlink;\r\n      hasSpecialFormatting = true;\r\n    }\r\n\r\n    if (Object.keys(formatting).length > 0) {\r\n      wordData.formatting = formatting;\r\n    }\r\n\r\n    if (word.hasFootnote) {\r\n      wordData.footnoteId = index + 1;\r\n      footnotes.push({\r\n        id: index + 1,\r\n        text: word.footnoteText,\r\n        relatedWordIndex: formattedText.length\r\n      });\r\n      hasSpecialFormatting = true;\r\n    }\r\n\r\n    if (hasSpecialFormatting) {\r\n      formattedText.push(wordData);\r\n    }\r\n  });\r\n\r\n  return {\r\n    formattedText: formattedText,\r\n    footnotes: footnotes,\r\n    baseFormatting: {\r\n      color: baseColor,\r\n      font: baseFont,\r\n      size: baseSize\r\n    }\r\n  };\r\n}\r\n\r\nasync function showSelectedText() {\r\n  await Word.run(async (context) => {\r\n    const selection = context.document.getSelection();\r\n    const ranges = selection.getTextRanges([\" \"], false);\r\n    ranges.load(\"items\");\r\n\r\n    await context.sync();\r\n\r\n    let wordsInfo = [];\r\n    let colorCounts = {};\r\n    let fontCounts = {};\r\n    let sizeCounts = {};\r\n\r\n    for (let i = 0; i < ranges.items.length; i++) {\r\n      const range = ranges.items[i];\r\n      range.load(\"text, hyperlink\");\r\n      range.font.load(\"bold, italic, underline, color, highlightColor, name, size\");\r\n\r\n      const footnotes = range.footnotes;\r\n      footnotes.load(\"items\");\r\n\r\n      await context.sync();\r\n\r\n      if (range.text.trim()) {\r\n        const color = range.font.color || \"default\";\r\n        const font = range.font.name || \"default\";\r\n        const size = range.font.size || \"default\";\r\n\r\n        colorCounts[color] = (colorCounts[color] || 0) + 1;\r\n        fontCounts[font] = (fontCounts[font] || 0) + 1;\r\n        sizeCounts[size] = (sizeCounts[size] || 0) + 1;\r\n\r\n        let footnoteText = \"\";\r\n        if (footnotes.items.length > 0) {\r\n          const footnote = footnotes.items[0];\r\n          footnote.body.load(\"text\");\r\n          await context.sync();\r\n          footnoteText = footnote.body.text;\r\n        }\r\n\r\n        wordsInfo.push({\r\n          text: range.text.trim(),\r\n          bold: range.font.bold,\r\n          italic: range.font.italic,\r\n          underline: range.font.underline !== \"None\",\r\n          color: color,\r\n          highlightColor: range.font.highlightColor,\r\n          hasFootnote: footnotes.items.length > 0,\r\n          footnoteText: footnoteText,\r\n          fontName: font,\r\n          fontSize: size,\r\n          hyperlink: range.hyperlink ? range.hyperlink.address : null,\r\n          isFirstWord: i === 0,\r\n          isSecondWord: i === 1,\r\n          isThirdWord: i === 2,\r\n          isLastWord: i === ranges.items.length - 1\r\n        });\r\n      }\r\n    }\r\n\r\n    const baseColor = Object.entries(colorCounts).reduce((a, b) => a[1] > b[1] ? a : b)[0];\r\n    const baseFont = Object.entries(fontCounts).reduce((a, b) => a[1] > b[1] ? a : b)[0];\r\n    const baseSize = Object.entries(sizeCounts).reduce((a, b) => a[1] > b[1] ? a : b)[0];\r\n\r\n    displayWordsInfo(wordsInfo, baseColor, baseFont, baseSize);\r\n    const formattedMassive = formatSpecialWords(wordsInfo, baseColor, baseFont, baseSize);\r\n    console.log(formattedMassive);\r\n  });\r\n}\r\n\r\nfunction displayWordsInfo(wordsInfo, baseColor, baseFont, baseSize) {\r\n  const infoDiv = document.getElementById(\"selected-text-info\");\r\n  let html = \"<h3>Анализ выделенного текста:</h3>\";\r\n\r\n  wordsInfo.forEach((word, index) => {\r\n    html += `<h4>Слово ${index + 1}: ${word.text}</h4>`;\r\n    html += `<p>\r\n      ${word.bold ? \"✅\" : \"❌\"} Жирный${word.isFirstWord ? \" (Первое слово)\" : \"\"}<br>\r\n      ${word.italic ? \"✅\" : \"❌\"} Курсив${word.isSecondWord ? \" (Второе слово)\" : \"\"}<br>\r\n      ${word.underline ? \"✅\" : \"❌\"} Подчеркнутый<br>\r\n      ${word.color !== baseColor && word.color !== \"default\" ? `✅ Особый цвет: ${word.color}` : \"❌ Основной цвет\"}<br>\r\n      ${word.highlightColor ? `✅ Выделение: ${word.highlightColor}` : \"❌ Без выделения\"}<br>\r\n      ${word.hasFootnote ? `✅ Есть сноска: ${word.footnoteText}${word.isLastWord ? \" (Последнее слово)\" : \"\"}` : \"❌ Без сноски\"}<br>\r\n      ${word.fontName !== baseFont && word.fontName !== \"default\" ? `✅ Особый шрифт: ${word.fontName}` : `❌ Основной шрифт: ${baseFont}`}<br>\r\n      ${word.fontSize != baseSize && word.fontSize !== \"default\" ? `✅ Особый размер: ${word.fontSize}` : `❌ Основной размер: ${baseSize}`}<br>\r\n      ${word.hyperlink ? `✅ Ссылка: ${word.hyperlink}${word.isThirdWord ? \" (Третье слово)\" : \"\"}` : \"❌ Без ссылки\"}\r\n    </p>`;\r\n  });\r\n\r\n  infoDiv.innerHTML = html;\r\n}\r\n\r\nasync function repeatStyles() {\r\n  await Word.run(async (context) => {\r\n    const selection = context.document.getSelection();\r\n    selection.load(\"text\");\r\n    await context.sync();\r\n\r\n    const originalText = selection.text;\r\n    let wordsInfo = await getWordsInfo(context, selection);\r\n\r\n    const baseFormatting = getBaseFormatting(wordsInfo);\r\n    wordsInfo = optimizeWordsInfo(wordsInfo, baseFormatting);\r\n    wordsInfo = wordsInfo.filter(wordInfo => Object.keys(wordInfo).length > 1);\r\n\r\n    console.log(wordsInfo);\r\n    console.log(\"Base formatting:\", baseFormatting);\r\n\r\n    selection.clear();\r\n    await context.sync();\r\n\r\n    const words = originalText.split(/\\s+/);\r\n    let wordIndex = 0;\r\n\r\n    for (let i = 0; i < words.length; i++) {\r\n      let word = words[i];\r\n\r\n      // if (word == \"\u0002\") {\r\n      //   word = \" \"\r\n      // }\r\n\r\n      let range = selection.insertText(word, Word.InsertLocation.end);\r\n\r\n      // Применяем базовое форматирование\r\n      range.font.bold = baseFormatting.bold;\r\n      range.font.italic = baseFormatting.italic;\r\n      range.font.color = baseFormatting.color;\r\n      range.font.highlightColor = baseFormatting.highlightColor;\r\n      range.font.size = baseFormatting.size;\r\n\r\n      if (wordIndex < wordsInfo.length && wordsInfo[wordIndex].text === word) {\r\n        const wordInfo = wordsInfo[wordIndex];\r\n\r\n        if (wordInfo.bold !== undefined) range.font.bold = wordInfo.bold;\r\n        if (wordInfo.italic !== undefined) range.font.italic = wordInfo.italic;\r\n        if (wordInfo.color) range.font.color = wordInfo.color;\r\n        if (wordInfo.highlightColor) range.font.highlightColor = wordInfo.highlightColor;\r\n        if (wordInfo.size) range.font.size = wordInfo.size;\r\n\r\n        if (wordInfo.hyperlink) {\r\n          range.hyperlink = wordInfo.hyperlink;\r\n        }\r\n\r\n        if (wordInfo.footnoteText) {\r\n          let newFootnote = range.insertFootnote(wordInfo.footnoteText.replace(\"\u0002\", ' '), Word.InsertLocation.start);\r\n          // newFootnote.body.insertText(wordInfo.footnoteText.replace(\"\u0002\", ''), Word.InsertLocation.start);\r\n          word = word.replace(\"\u0002\", ' ');\r\n        }\r\n\r\n\r\n\r\n        wordIndex++;\r\n      }\r\n\r\n      if (i < words.length - 1) {\r\n        selection.insertText(\" \", Word.InsertLocation.end);\r\n      }\r\n\r\n      await context.sync();\r\n    }\r\n  });\r\n}\r\n\r\nfunction getBaseFormatting(wordsInfo) {\r\n  return {\r\n    bold: getMostCommonValue(wordsInfo, 'bold'),\r\n    italic: getMostCommonValue(wordsInfo, 'italic'),\r\n    color: getMostCommonValue(wordsInfo, 'color'),\r\n    highlightColor: getMostCommonValue(wordsInfo, 'highlightColor'),\r\n    size: getMostCommonValue(wordsInfo, 'size')\r\n  };\r\n}\r\n\r\nfunction optimizeWordsInfo(wordsInfo, baseFormatting) {\r\n  return wordsInfo.map(word => {\r\n    const optimizedWord = { text: word.text };\r\n\r\n    if (word.bold !== baseFormatting.bold) optimizedWord.bold = word.bold;\r\n    if (word.italic !== baseFormatting.italic) optimizedWord.italic = word.italic;\r\n    if (word.color !== baseFormatting.color) optimizedWord.color = word.color;\r\n    if (word.highlightColor !== baseFormatting.highlightColor) optimizedWord.highlightColor = word.highlightColor;\r\n    if (word.size !== baseFormatting.size) optimizedWord.size = word.size;\r\n\r\n    if (word.hasFootnote) optimizedWord.footnoteText = word.footnoteText;\r\n    if (word.hyperlink) optimizedWord.hyperlink = word.hyperlink;\r\n\r\n    return optimizedWord;\r\n  });\r\n}\r\n\r\n\r\n\r\n\r\nasync function getWordsInfo(context, selection) {\r\n  const ranges = selection.getTextRanges([\" \"], false);\r\n  ranges.load(\"items\");\r\n  await context.sync();\r\n\r\n  let wordsInfo = [];\r\n\r\n  for (let range of ranges.items) {\r\n    range.load(\"text, hyperlink\");\r\n    range.font.load(\"bold, italic, color, highlightColor, size\");\r\n    const footnotes = range.footnotes;\r\n    footnotes.load(\"items\");\r\n\r\n    await context.sync();\r\n\r\n    if (range.text.trim()) {\r\n      let footnoteText = \"\";\r\n      if (footnotes.items.length > 0) {\r\n        const footnote = footnotes.items[0];\r\n        footnote.body.load(\"text\");\r\n        await context.sync();\r\n        footnoteText = footnote.body.text;\r\n      }\r\n\r\n      wordsInfo.push({\r\n        text: range.text.trim(),\r\n        bold: range.font.bold,\r\n        italic: range.font.italic,\r\n        color: range.font.color || \"black\",\r\n        highlightColor: range.font.highlightColor || \"white\",\r\n        size: range.font.size || \"11\",\r\n        hasFootnote: footnotes.items.length > 0,\r\n        footnoteText: footnoteText,\r\n        hyperlink: range.hyperlink ? range.hyperlink : null\r\n      });\r\n    }\r\n  }\r\n\r\n  return wordsInfo;\r\n}\r\n\r\n\r\nfunction getMostCommonValue(array, property) {\r\n  const counts = {};\r\n  let maxCount = 0;\r\n  let mostCommonValue;\r\n\r\n  array.forEach(item => {\r\n    const value = item[property];\r\n    counts[value] = (counts[value] || 0) + 1;\r\n    if (counts[value] > maxCount) {\r\n      maxCount = counts[value];\r\n      mostCommonValue = value;\r\n    }\r\n  });\r\n\r\n  return mostCommonValue;\r\n}\r\n\r\n\r\n\r\n\r\n\r\nfunction initPrompts() {\r\n    const promptsTab = document.getElementById('prompts');\r\n    promptsTab.innerHTML = `\r\n        <div class=\"mt-3\">\r\n            <input type=\"text\" id=\"prompt-name\" class=\"form-control\" placeholder=\"Название промпта\">\r\n            <select id=\"prompt-model\" class=\"form-select mt-2\"></select>\r\n            <textarea id=\"prompt-text\" class=\"form-control mt-2\" rows=\"5\" placeholder=\"Текст промпта\"></textarea>\r\n            <button id=\"save-prompt\" class=\"btn btn-primary mt-2\">Сохранить промпт</button>\r\n        </div>\r\n        <div id=\"prompt-list\" class=\"mt-3\"></div>\r\n    `;\r\n\r\n    $('#prompt-model').select2({\r\n        width: '100%',\r\n        placeholder: 'Выберите модель',\r\n    }).on('select2:opening', function() {\r\n        setTimeout(() => {\r\n            $('.select2-search__field').get(0).focus();\r\n        }, 0);\r\n    });\r\n\r\n    document.getElementById(\"save-prompt\").onclick = savePrompt;\r\n    updatePromptList();\r\n    populateModelSelect();\r\n}\r\n\r\nfunction populateModelSelect() {\r\n    const select = $('#prompt-model');\r\n    const models = JSON.parse(localStorage.getItem('models') || '[]');\r\n    models.forEach(model => {\r\n        const option = new Option(model.name, model.id, false, false);\r\n        select.append(option);\r\n    });\r\n    select.trigger('change');\r\n}\r\n\r\nfunction savePrompt() {\r\n    const name = document.getElementById('prompt-name').value;\r\n    const model = $('#prompt-model').val();\r\n    const text = document.getElementById('prompt-text').value;\r\n    if (name && model && text) {\r\n        const prompts = getPrompts();\r\n        prompts.push({ name, model, text });\r\n        savePrompts(prompts);\r\n        updatePromptList();\r\n        updatePromptSelect();\r\n        document.getElementById('prompt-name').value = '';\r\n        $('#prompt-model').val(null).trigger('change');\r\n        document.getElementById('prompt-text').value = '';\r\n    }\r\n}\r\n\r\nfunction updatePromptList() {\r\n    const list = document.getElementById('prompt-list');\r\n    const prompts = getPrompts();\r\n    list.innerHTML = '';\r\n    prompts.forEach((prompt, index) => {\r\n        const div = document.createElement('div');\r\n        div.className = 'mt-2';\r\n        div.innerHTML = `\r\n            <strong>${prompt.name}</strong> (${prompt.model})\r\n            <button class=\"btn btn-sm btn-primary edit-prompt\" data-index=\"${index}\">Редактировать</button>\r\n            <button class=\"btn btn-sm btn-info duplicate-prompt\" data-index=\"${index}\">Дубликат</button>\r\n            <button class=\"btn btn-sm btn-danger delete-prompt\" data-index=\"${index}\">Удалить</button>\r\n        `;\r\n        list.appendChild(div);\r\n    });\r\n\r\n    list.querySelectorAll('.delete-prompt').forEach(button => {\r\n        button.onclick = () => deletePrompt(button.dataset.index);\r\n    });\r\n\r\n    list.querySelectorAll('.edit-prompt').forEach(button => {\r\n        button.onclick = () => editPrompt(button.dataset.index);\r\n    });\r\n\r\n    list.querySelectorAll('.duplicate-prompt').forEach(button => {\r\n        button.onclick = () => duplicatePrompt(button.dataset.index);\r\n    });\r\n}\r\n\r\nfunction deletePrompt(index) {\r\n    const prompts = getPrompts();\r\n    prompts.splice(index, 1);\r\n    savePrompts(prompts);\r\n    updatePromptList();\r\n    updatePromptSelect();\r\n}\r\n\r\nfunction editPrompt(index) {\r\n    const prompts = getPrompts();\r\n    const prompt = prompts[index];\r\n    document.getElementById('prompt-name').value = prompt.name;\r\n    $('#prompt-model').val(prompt.model).trigger('change');\r\n    document.getElementById('prompt-text').value = prompt.text;\r\n    document.getElementById('save-prompt').textContent = 'Обновить промпт';\r\n    document.getElementById('save-prompt').onclick = () => {\r\n        updatePrompt(index);\r\n        document.getElementById('save-prompt').textContent = 'Сохранить промпт';\r\n        document.getElementById('save-prompt').onclick = savePrompt;\r\n    };\r\n}\r\n\r\nfunction updatePrompt(index) {\r\n    const name = document.getElementById('prompt-name').value;\r\n    const model = $('#prompt-model').val();\r\n    const text = document.getElementById('prompt-text').value;\r\n    if (name && model && text) {\r\n        const prompts = getPrompts();\r\n        prompts[index] = { name, model, text };\r\n        savePrompts(prompts);\r\n        updatePromptList();\r\n        updatePromptSelect();\r\n        document.getElementById('prompt-name').value = '';\r\n        $('#prompt-model').val(null).trigger('change');\r\n        document.getElementById('prompt-text').value = '';\r\n    }\r\n}\r\n\r\nfunction duplicatePrompt(index) {\r\n    const prompts = getPrompts();\r\n    const prompt = prompts[index];\r\n    document.getElementById('prompt-name').value = prompt.name + ' (копия)';\r\n    $('#prompt-model').val(null).trigger('change');\r\n    document.getElementById('prompt-text').value = prompt.text;\r\n    document.getElementById('save-prompt').textContent = 'Сохранить промпт';\r\n    document.getElementById('save-prompt').onclick = savePrompt;\r\n}\r\n\r\nfunction initGrammar() {\r\n    const grammarTab = document.getElementById('grammar');\r\n    grammarTab.innerHTML = `\r\n        <div class=\"mt-3\">\r\n            <!-- Инструкция по использованию -->\r\n            <div class=\"alert alert-info\">\r\n                <strong>Инструкция:</strong>\r\n                <ul>\r\n                    <li>В основных настройках выберите модель и тип проверок которые выхотите применить к тексу</li>\r\n                    <li>Выделите текст, который хотите проверить. ( от 1 до 4 абзацев )</li>\r\n                    <li>Нажмите кнопку \"Проверить\".</li>\r\n                </ul>\r\n            </div>\r\n            <!-- Настройки -->\r\n            <div class=\"accordion\" id=\"mainAccordion\">\r\n                <!-- Первый аккордеон -->\r\n                <div class=\"card\">\r\n                    <div class=\"card-header\" id=\"settingsHeading\">\r\n                        <h2 class=\"mb-0\">\r\n                            <button class=\"btn btn-link\" type=\"button\" data-toggle=\"collapse\" data-target=\"#settingsCollapse\" aria-expanded=\"true\" aria-controls=\"settingsCollapse\">\r\n                                Настройки проверки\r\n                            </button>\r\n                        </h2>\r\n                    </div>\r\n                    <div id=\"settingsCollapse\" class=\"collapse show\" aria-labelledby=\"settingsHeading\" data-parent=\"#mainAccordion\">\r\n                        <div class=\"card-body\">\r\n                            <!-- Модель для проверки -->\r\n                            <div class=\"form-group\">\r\n                                <label for=\"grammar-model\">Модель для проверки:</label>\r\n                                <select id=\"grammar-model\" class=\"form-control\" title=\"Выберите модель нейросети для проверки текста\"></select>\r\n                            </div>\r\n                            <!-- Типы проверок -->\r\n                            <div class=\"form-group\">\r\n                                <label>Типы проверок:</label>\r\n                                <div class=\"form-check\">\r\n                                    <input class=\"form-check-input\" type=\"checkbox\" id=\"check-grammatical\">\r\n                                    <label class=\"form-check-label\" for=\"check-grammatical\" title=\"Проверка на грамматические ошибки\">\r\n                                        Грамматические (Beta)\r\n                                    </label>\r\n                                </div>\r\n                                <div class=\"form-check\">\r\n                                    <input class=\"form-check-input\" type=\"checkbox\" id=\"check-syntactic\">\r\n                                    <label class=\"form-check-label\" for=\"check-syntactic\" title=\"Проверка на синтаксические ошибки\">\r\n                                        Синтаксические (Beta)\r\n                                    </label>\r\n                                </div>\r\n                                <div class=\"form-check\">\r\n                                    <input class=\"form-check-input\" type=\"checkbox\" id=\"check-stylistic\" checked>\r\n                                    <label class=\"form-check-label\" for=\"check-stylistic\" title=\"Проверка на стилистические ошибки\">\r\n                                        Стилистические\r\n                                    </label>\r\n                                </div>\r\n                                <div class=\"form-check\">\r\n                                    <input class=\"form-check-input\" type=\"checkbox\" id=\"check-logical\" checked>\r\n                                    <label class=\"form-check-label\" for=\"check-logical\" title=\"Проверка на логические ошибки\">\r\n                                        Логические\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                            <!-- Дополнительные опции -->\r\n                            <div class=\"form-group\">\r\n                                <label>Дополнительные опции:</label>\r\n                                <div class=\"form-check\">\r\n                                    <input class=\"form-check-input\" type=\"checkbox\" id=\"highlight-checkbox\" checked>\r\n                                    <label class=\"form-check-label\" for=\"highlight-checkbox\" title=\"Выделить проблемный текст в документе\">\r\n                                        Выделять проблемный текст\r\n                                    </label>\r\n                                </div>\r\n                                <div class=\"form-check mt-2\">\r\n                                    <input class=\"form-check-input\" type=\"checkbox\" id=\"comment-checkbox\">\r\n                                    <label class=\"form-check-label\" for=\"comment-checkbox\" title=\"Добавить комментарии к проблемному тексту\">\r\n                                        Добавлять комментарии к проблемному тексту\r\n                                    </label>\r\n                                </div>\r\n                                <!-- Добавляем опцию для изменения цвета исправленного текста -->\r\n                                <div class=\"form-check mt-2\">\r\n                                    <input class=\"form-check-input\" type=\"checkbox\" id=\"highlight-corrected-checkbox\" checked>\r\n                                    <label class=\"form-check-label\" for=\"highlight-corrected-checkbox\" title=\"Изменять цвет исправленного текста\">\r\n                                        Изменять цвет исправленного текста\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <!-- Второй аккордеон -->\r\n                <div class=\"card\">\r\n                    <div class=\"card-header\" id=\"advancedSettingsHeading\">\r\n                        <h2 class=\"mb-0\">\r\n                            <button class=\"btn btn-link collapsed\" type=\"button\" data-toggle=\"collapse\" data-target=\"#advancedSettingsCollapse\" aria-expanded=\"false\" aria-controls=\"advancedSettingsCollapse\">\r\n                                Дополнительные опции (продвинутый пользователь)\r\n                            </button>\r\n                        </h2>\r\n                    </div>\r\n                    <div id=\"advancedSettingsCollapse\" class=\"collapse\" aria-labelledby=\"advancedSettingsHeading\" data-parent=\"#mainAccordion\">\r\n                        <div class=\"card-body\">\r\n                            <!-- Подаккордеон для группировки настроек -->\r\n                            <div class=\"accordion\" id=\"advancedSettingsSubAccordion\">\r\n                                <!-- Группа: Настройки обработки текста -->\r\n                                <div class=\"card\">\r\n                                    <div class=\"card-header\" id=\"textProcessingSettingsHeading\">\r\n                                        <h2 class=\"mb-0\">\r\n                                            <button class=\"btn btn-link\" type=\"button\" data-toggle=\"collapse\" data-target=\"#textProcessingSettingsCollapse\" aria-expanded=\"true\" aria-controls=\"textProcessingSettingsCollapse\">\r\n                                                Настройки обработки текста\r\n                                            </button>\r\n                                        </h2>\r\n                                    </div>\r\n                                    <div id=\"textProcessingSettingsCollapse\" class=\"collapse show\" aria-labelledby=\"textProcessingSettingsHeading\" data-parent=\"#advancedSettingsSubAccordion\">\r\n                                        <div class=\"card-body\">\r\n                                            <!-- Максимальное количество символов -->\r\n                                            <div class=\"form-group\">\r\n                                                <label for=\"max-chars\">Максимальное количество символов для проверки (0 для без лимита):</label>\r\n                                                <input type=\"number\" id=\"max-chars\" class=\"form-control\" value=\"2000\" min=\"0\">\r\n                                            </div>\r\n                                            <!-- Опция разбивать текст на чанки -->\r\n                                            <div class=\"form-check mt-2\">\r\n                                                <input class=\"form-check-input\" type=\"checkbox\" id=\"split-into-chunks-checkbox\">\r\n                                                <label class=\"form-check-label\" for=\"split-into-chunks-checkbox\">\r\n                                                    Разбивать текст на чанки\r\n                                                </label>\r\n                                            </div>\r\n                                            <!-- Размер чанка -->\r\n                                            <div class=\"form-group mt-2\">\r\n                                                <label for=\"chunk-size\">Размер чанка (в предложениях):</label>\r\n                                                <input type=\"number\" id=\"chunk-size\" class=\"form-control\" value=\"8\" min=\"1\">\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <!-- Группа: Настройки модели -->\r\n                                <div class=\"card\">\r\n                                    <div class=\"card-header\" id=\"modelSettingsHeading\">\r\n                                        <h2 class=\"mb-0\">\r\n                                            <button class=\"btn btn-link collapsed\" type=\"button\" data-toggle=\"collapse\" data-target=\"#modelSettingsCollapse\" aria-expanded=\"false\" aria-controls=\"modelSettingsCollapse\">\r\n                                                Настройки модели\r\n                                            </button>\r\n                                        </h2>\r\n                                    </div>\r\n                                    <div id=\"modelSettingsCollapse\" class=\"collapse\" aria-labelledby=\"modelSettingsHeading\" data-parent=\"#advancedSettingsSubAccordion\">\r\n                                        <div class=\"card-body\">\r\n                                            <!-- Температура -->\r\n                                            <div class=\"form-group\">\r\n                                                <label for=\"temperature\">Температура (0.0 - 1.0):</label>\r\n                                                <input type=\"number\" id=\"temperature\" class=\"form-control\" value=\"0.1\" min=\"0.0\" max=\"1.0\" step=\"0.1\">\r\n                                            </div>\r\n                                            <!-- Максимальное количество токенов -->\r\n                                            <div class=\"form-group\">\r\n                                                <label for=\"max-tokens\">Максимальное количество токенов:</label>\r\n                                                <input type=\"number\" id=\"max-tokens\" class=\"form-control\" value=\"4000\" min=\"1\">\r\n                                            </div>\r\n                                            <!-- Опция включения response_format -->\r\n                                            <div class=\"form-check mt-2\">\r\n                                                <input class=\"form-check-input\" type=\"checkbox\" id=\"response-format-checkbox\">\r\n                                                <label class=\"form-check-label\" for=\"response-format-checkbox\">\r\n                                                    Использовать response_format: {\"type\": \"json_object\"}\r\n                                                </label>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <!-- Группа: Настройки ошибок -->\r\n                                <div class=\"card\">\r\n                                    <div class=\"card-header\" id=\"errorSettingsHeading\">\r\n                                        <h2 class=\"mb-0\">\r\n                                            <button class=\"btn btn-link collapsed\" type=\"button\" data-toggle=\"collapse\" data-target=\"#errorSettingsCollapse\" aria-expanded=\"false\" aria-controls=\"errorSettingsCollapse\">\r\n                                                Настройки ошибок\r\n                                            </button>\r\n                                        </h2>\r\n                                    </div>\r\n                                    <div id=\"errorSettingsCollapse\" class=\"collapse\" aria-labelledby=\"errorSettingsHeading\" data-parent=\"#advancedSettingsSubAccordion\">\r\n                                        <div class=\"card-body\">\r\n                                            <!-- Повторить в случае ошибки -->\r\n                                            <div class=\"form-check mt-2\">\r\n                                                <input class=\"form-check-input\" type=\"checkbox\" id=\"retry-on-error-checkbox\" checked>\r\n                                                <label class=\"form-check-label\" for=\"retry-on-error-checkbox\">\r\n                                                    Повторить в случае ошибки\r\n                                                </label>\r\n                                            </div>\r\n                                            <!-- Количество повторов -->\r\n                                            <div class=\"form-group mt-2\">\r\n                                                <label for=\"retry-count\">Количество повторов при ошибке:</label>\r\n                                                <input type=\"number\" id=\"retry-count\" class=\"form-control\" value=\"3\" min=\"1\">\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <!-- Группа: Настройки промптов -->\r\n                                <div class=\"card\">\r\n                                    <div class=\"card-header\" id=\"promptSettingsHeading\">\r\n                                        <h2 class=\"mb-0\">\r\n                                            <button class=\"btn btn-link collapsed\" type=\"button\" data-toggle=\"collapse\" data-target=\"#promptSettingsCollapse\" aria-expanded=\"false\" aria-controls=\"promptSettingsCollapse\">\r\n                                                Настройки промптов\r\n                                            </button>\r\n                                        </h2>\r\n                                    </div>\r\n                                    <div id=\"promptSettingsCollapse\" class=\"collapse\" aria-labelledby=\"promptSettingsHeading\" data-parent=\"#advancedSettingsSubAccordion\">\r\n                                        <div class=\"card-body\">\r\n                                            <!-- Опция редактирования промптов -->\r\n                                            <div class=\"form-check mt-3\">\r\n                                                <input class=\"form-check-input\" type=\"checkbox\" id=\"edit-prompts-checkbox\" checked>\r\n                                                <label class=\"form-check-label\" for=\"edit-prompts-checkbox\">\r\n                                                    Редактировать системные промпты\r\n                                                </label>\r\n                                            </div>\r\n                                            <!-- Аккордеон для редактирования промптов -->\r\n                                            <div id=\"prompts-accordion\" class=\"mt-3\">\r\n                                                <div class=\"accordion\" id=\"promptsAccordion\">\r\n                                                    <!-- Промпт роли -->\r\n                                                    <div class=\"card\">\r\n                                                        <div class=\"card-header\" id=\"headingRolePrompt\">\r\n                                                            <h2 class=\"mb-0\">\r\n                                                                <button class=\"btn btn-link\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapseRolePrompt\" aria-expanded=\"true\" aria-controls=\"collapseRolePrompt\">\r\n                                                                    Промпт роли\r\n                                                                </button>\r\n                                                            </h2>\r\n                                                        </div>\r\n                                                        <div id=\"collapseRolePrompt\" class=\"collapse\" aria-labelledby=\"headingRolePrompt\" data-parent=\"#promptsAccordion\">\r\n                                                            <div class=\"card-body\">\r\n                                                                <textarea id=\"prompt-role\" class=\"form-control\" rows=\"3\" placeholder=\"Например: Ты - опытный редактор и лингвист.\"></textarea>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <!-- Грамматические ошибки -->\r\n                                                    <div class=\"card\">\r\n                                                        <div class=\"card-header\" id=\"headingGrammar\">\r\n                                                            <h2 class=\"mb-0\">\r\n                                                                <button class=\"btn btn-link collapsed\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapseGrammar\" aria-expanded=\"false\" aria-controls=\"collapseGrammar\">\r\n                                                                    Грамматические ошибки\r\n                                                                </button>\r\n                                                            </h2>\r\n                                                        </div>\r\n                                                        <div id=\"collapseGrammar\" class=\"collapse\" aria-labelledby=\"headingGrammar\" data-parent=\"#promptsAccordion\">\r\n                                                            <div class=\"card-body\">\r\n                                                                <textarea id=\"prompt-grammatical\" class=\"form-control\" rows=\"5\"></textarea>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <!-- Синтаксические ошибки -->\r\n                                                    <div class=\"card\">\r\n                                                        <div class=\"card-header\" id=\"headingSyntactic\">\r\n                                                            <h2 class=\"mb-0\">\r\n                                                                <button class=\"btn btn-link collapsed\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapseSyntactic\" aria-expanded=\"false\" aria-controls=\"collapseSyntactic\">\r\n                                                                    Синтаксические ошибки\r\n                                                                </button>\r\n                                                            </h2>\r\n                                                        </div>\r\n                                                        <div id=\"collapseSyntactic\" class=\"collapse\" aria-labelledby=\"headingSyntactic\" data-parent=\"#promptsAccordion\">\r\n                                                            <div class=\"card-body\">\r\n                                                                <textarea id=\"prompt-syntactic\" class=\"form-control\" rows=\"5\"></textarea>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <!-- Стилистические ошибки -->\r\n                                                    <div class=\"card\">\r\n                                                        <div class=\"card-header\" id=\"headingStylistic\">\r\n                                                            <h2 class=\"mb-0\">\r\n                                                                <button class=\"btn btn-link collapsed\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapseStylistic\" aria-expanded=\"false\" aria-controls=\"collapseStylistic\">\r\n                                                                    Стилистические ошибки\r\n                                                                </button>\r\n                                                            </h2>\r\n                                                        </div>\r\n                                                        <div id=\"collapseStylistic\" class=\"collapse\" aria-labelledby=\"headingStylistic\" data-parent=\"#promptsAccordion\">\r\n                                                            <div class=\"card-body\">\r\n                                                                <textarea id=\"prompt-stylistic\" class=\"form-control\" rows=\"5\"></textarea>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <!-- Логические ошибки -->\r\n                                                    <div class=\"card\">\r\n                                                        <div class=\"card-header\" id=\"headingLogical\">\r\n                                                            <h2 class=\"mb-0\">\r\n                                                                <button class=\"btn btn-link collapsed\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapseLogical\" aria-expanded=\"false\" aria-controls=\"collapseLogical\">\r\n                                                                    Логические ошибки\r\n                                                                </button>\r\n                                                            </h2>\r\n                                                        </div>\r\n                                                        <div id=\"collapseLogical\" class=\"collapse\" aria-labelledby=\"headingLogical\" data-parent=\"#promptsAccordion\">\r\n                                                            <div class=\"card-body\">\r\n                                                                <textarea id=\"prompt-logical\" class=\"form-control\" rows=\"5\"></textarea>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <!-- Примечание о проверяемом тексте -->\r\n                                                    <div class=\"card\">\r\n                                                        <div class=\"card-header\" id=\"headingTextNote\">\r\n                                                            <h2 class=\"mb-0\">\r\n                                                                <button class=\"btn btn-link collapsed\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapseTextNote\" aria-expanded=\"false\" aria-controls=\"collapseTextNote\">\r\n                                                                    Примечание о проверяемом тексте\r\n                                                                </button>\r\n                                                            </h2>\r\n                                                        </div>\r\n                                                        <div id=\"collapseTextNote\" class=\"collapse\" aria-labelledby=\"headingTextNote\" data-parent=\"#promptsAccordion\">\r\n                                                            <div class=\"card-body\">\r\n                                                                <textarea id=\"prompt-text-note\" class=\"form-control\" rows=\"3\" placeholder=\"Например: Текст является научной статьей по физике.\"></textarea>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <!-- Кнопка сброса промптов -->\r\n                                                <button id=\"reset-prompts\" class=\"btn btn-secondary mt-3\">Сбросить промпты</button>\r\n                                                <div id=\"prompt-message\" class=\"mt-2\"></div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <!-- Конец подаккордеона -->\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <!-- Кнопка Проверить -->\r\n            <button id=\"check-grammar\" class=\"btn btn-primary mt-3\">Проверить</button>\r\n            <!-- Кнопка сброса настроек -->\r\n            <button id=\"reset-settings\" class=\"btn btn-secondary mt-3\">Сбросить настройки</button>\r\n            <!-- Message area -->\r\n            <div id=\"message\" class=\"mt-3\"></div>\r\n            <!-- Загрузчик и кнопка Отменить -->\r\n            <div id=\"loading\" class=\"mt-3 text-center\" style=\"display: none;\">\r\n                <div id=\"progress-container\" style=\"display: none;\">\r\n                    <div class=\"progress\">\r\n                        <div id=\"progress-bar\" class=\"progress-bar\" role=\"progressbar\" style=\"width: 0%;\">0%</div>\r\n                    </div>\r\n                    <div id=\"progress-text\" class=\"mt-2\">Обработано 0 из 0 чанков</div>\r\n                </div>\r\n                <div id=\"spinner\" style=\"display: none;\">\r\n                    <div class=\"spinner-border text-primary\" role=\"status\">\r\n                        <span class=\"sr-only\">Загрузка...</span>\r\n                    </div>\r\n                </div>\r\n                <div class=\"mt-3\">\r\n                    <button id=\"cancel-check\" class=\"btn btn-secondary\">Отменить</button>\r\n                </div>\r\n            </div>\r\n            <!-- Фильтр результатов -->\r\n            <div id=\"filter-container\" class=\"mt-3\" style=\"display: none;\">\r\n                <label for=\"filter-select\">Фильтр результатов:</label>\r\n                <select id=\"filter-select\" class=\"form-control\">\r\n                    <option value=\"all\">Все ошибки</option>\r\n                    <option value=\"can_edit\">Только исправляемые</option>\r\n                    <option value=\"cannot_edit\">Только не исправляемые</option>\r\n                </select>\r\n            </div>\r\n            <div id=\"grammar-results\" class=\"mt-3\"></div>\r\n        </div>\r\n    `;\r\n\r\n    initializeGrammarModelSelect();\r\n\r\n    // Загрузка сохраненных настроек\r\n    loadGrammarSettings();\r\n    loadGrammarPrompts();\r\n\r\n    // Обработчики событий для настроек\r\n    document.getElementById('check-grammar').onclick = checkGrammar;\r\n    document.getElementById('highlight-checkbox').onchange = saveSettings;\r\n    document.getElementById('comment-checkbox').onchange = saveSettings;\r\n    document.getElementById('highlight-corrected-checkbox').onchange = saveSettings;\r\n    document.getElementById('check-grammatical').onchange = saveSettings;\r\n    document.getElementById('check-syntactic').onchange = saveSettings;\r\n    document.getElementById('check-stylistic').onchange = saveSettings;\r\n    document.getElementById('check-logical').onchange = saveSettings;\r\n    document.getElementById('split-into-chunks-checkbox').onchange = saveSettings;\r\n    document.getElementById('chunk-size').onchange = saveSettings;\r\n    document.getElementById('max-chars').onchange = saveSettings;\r\n    document.getElementById('temperature').onchange = saveSettings;\r\n    document.getElementById('max-tokens').onchange = saveSettings;\r\n    document.getElementById('response-format-checkbox').onchange = saveSettings;\r\n    document.getElementById('retry-on-error-checkbox').onchange = saveSettings;\r\n    document.getElementById('retry-count').onchange = saveSettings;\r\n    document.getElementById('edit-prompts-checkbox').onchange = togglePromptsEditor;\r\n\r\n    // Обработчики для промптов\r\n    document.getElementById('prompt-role').addEventListener('input', saveGrammarPrompts);\r\n    document.getElementById('prompt-grammatical').addEventListener('input', saveGrammarPrompts);\r\n    document.getElementById('prompt-syntactic').addEventListener('input', saveGrammarPrompts);\r\n    document.getElementById('prompt-stylistic').addEventListener('input', saveGrammarPrompts);\r\n    document.getElementById('prompt-logical').addEventListener('input', saveGrammarPrompts);\r\n    document.getElementById('prompt-text-note').addEventListener('input', saveGrammarPrompts);\r\n\r\n    // Обработчик для кнопки сброса промптов\r\n    document.getElementById('reset-prompts').onclick = resetPrompts;\r\n\r\n    // Обработчик для кнопки сброса настроек\r\n    document.getElementById('reset-settings').onclick = resetSettings;\r\n\r\n    // Обработчик события для кнопки \"Отменить\"\r\n    document.getElementById('cancel-check').onclick = cancelCheck;\r\n\r\n    // Обработчик для фильтра результатов\r\n    document.getElementById('filter-select').onchange = () => displayResults(window.grammarResults);\r\n\r\n    // Переменная для хранения контроллера отмены\r\n    window.abortController = null;\r\n}\r\n\r\nfunction initializeGrammarModelSelect() {\r\n    $('#grammar-model').select2({\r\n        width: '100%',\r\n        placeholder: 'Выберите модель для проверки',\r\n    }).on('select2:opening', function () {\r\n        setTimeout(() => {\r\n            $('.select2-search__field').get(0).focus();\r\n        }, 0);\r\n    }).on('change', function () {\r\n        const selectedModel = $(this).val();\r\n        localStorage.setItem('grammarModel', selectedModel);\r\n    });\r\n\r\n    populateGrammarModelSelect();\r\n}\r\n\r\nfunction populateGrammarModelSelect() {\r\n    const select = $('#grammar-model');\r\n    const models = JSON.parse(localStorage.getItem('models') || '[]');\r\n    select.empty();\r\n    let defaultModelId = null;\r\n    models.forEach(model => {\r\n        const option = new Option(model.name, model.id, false, false);\r\n        select.append(option);\r\n        if (model.name === 'Anthropic: Claude 3.5 Sonnet (self-moderated)') {\r\n            defaultModelId = model.id;\r\n        }\r\n    });\r\n\r\n    const savedModel = localStorage.getItem('grammarModel');\r\n    if (savedModel && models.some(model => model.id === savedModel)) {\r\n        select.val(savedModel).trigger('change');\r\n    } else if (defaultModelId) {\r\n        select.val(defaultModelId).trigger('change');\r\n    } else if (models.length > 0) {\r\n        select.val(models[0].id).trigger('change');\r\n    }\r\n}\r\n\r\nfunction getBooleanSetting(key, defaultValue) {\r\n    const value = localStorage.getItem(key);\r\n    if (value === null || value === undefined) {\r\n        return defaultValue;\r\n    }\r\n    return (value === 'true');\r\n}\r\n\r\nfunction getNumericSetting(key, defaultValue) {\r\n    const value = localStorage.getItem(key);\r\n    if (value === null || value === undefined) {\r\n        return defaultValue;\r\n    }\r\n    const num = parseFloat(value);\r\n    return isNaN(num) ? defaultValue : num;\r\n}\r\n\r\nfunction loadGrammarSettings() {\r\n    const highlight = getBooleanSetting('highlightErrors', true);\r\n    document.getElementById('highlight-checkbox').checked = highlight;\r\n\r\n    const addComments = getBooleanSetting('addComments', false);\r\n    document.getElementById('comment-checkbox').checked = addComments;\r\n\r\n    const highlightCorrected = getBooleanSetting('highlightCorrected', true);\r\n    document.getElementById('highlight-corrected-checkbox').checked = highlightCorrected;\r\n\r\n    const checkGrammatical = getBooleanSetting('checkGrammatical', false);\r\n    const checkSyntactic = getBooleanSetting('checkSyntactic', false);\r\n    const checkStylistic = getBooleanSetting('checkStylistic', true);\r\n    const checkLogical = getBooleanSetting('checkLogical', true);\r\n\r\n    document.getElementById('check-grammatical').checked = checkGrammatical;\r\n    document.getElementById('check-syntactic').checked = checkSyntactic;\r\n    document.getElementById('check-stylistic').checked = checkStylistic;\r\n    document.getElementById('check-logical').checked = checkLogical;\r\n\r\n    const splitIntoChunks = getBooleanSetting('splitIntoChunks', false);\r\n    document.getElementById('split-into-chunks-checkbox').checked = splitIntoChunks;\r\n\r\n    const chunkSize = getNumericSetting('chunkSize', 8);\r\n    document.getElementById('chunk-size').value = chunkSize;\r\n\r\n    const maxChars = getNumericSetting('maxChars', 2000);\r\n    document.getElementById('max-chars').value = maxChars;\r\n\r\n    const temperature = getNumericSetting('temperature', 0.1);\r\n    document.getElementById('temperature').value = temperature;\r\n\r\n    const maxTokens = getNumericSetting('maxTokens', 4000);\r\n    document.getElementById('max-tokens').value = maxTokens;\r\n\r\n    const responseFormat = getBooleanSetting('responseFormat', false);\r\n    document.getElementById('response-format-checkbox').checked = responseFormat;\r\n\r\n    const retryOnError = getBooleanSetting('retryOnError', true);\r\n    document.getElementById('retry-on-error-checkbox').checked = retryOnError;\r\n\r\n    const retryCount = getNumericSetting('retryCount', 3);\r\n    document.getElementById('retry-count').value = retryCount;\r\n\r\n    const editPrompts = getBooleanSetting('editPrompts', true);\r\n    document.getElementById('edit-prompts-checkbox').checked = editPrompts;\r\n    togglePromptsEditor();\r\n}\r\n\r\nfunction saveSettings() {\r\n    const highlight = document.getElementById('highlight-checkbox').checked;\r\n    localStorage.setItem('highlightErrors', highlight);\r\n\r\n    const addComments = document.getElementById('comment-checkbox').checked;\r\n    localStorage.setItem('addComments', addComments);\r\n\r\n    const highlightCorrected = document.getElementById('highlight-corrected-checkbox').checked;\r\n    localStorage.setItem('highlightCorrected', highlightCorrected);\r\n\r\n    const checkGrammatical = document.getElementById('check-grammatical').checked;\r\n    const checkSyntactic = document.getElementById('check-syntactic').checked;\r\n    const checkStylistic = document.getElementById('check-stylistic').checked;\r\n    const checkLogical = document.getElementById('check-logical').checked;\r\n\r\n    localStorage.setItem('checkGrammatical', checkGrammatical);\r\n    localStorage.setItem('checkSyntactic', checkSyntactic);\r\n    localStorage.setItem('checkStylistic', checkStylistic);\r\n    localStorage.setItem('checkLogical', checkLogical);\r\n\r\n    const splitIntoChunks = document.getElementById('split-into-chunks-checkbox').checked;\r\n    localStorage.setItem('splitIntoChunks', splitIntoChunks);\r\n\r\n    const chunkSize = document.getElementById('chunk-size').value;\r\n    localStorage.setItem('chunkSize', chunkSize);\r\n\r\n    const maxChars = document.getElementById('max-chars').value;\r\n    localStorage.setItem('maxChars', maxChars);\r\n\r\n    const temperature = parseFloat(document.getElementById('temperature').value);\r\n    localStorage.setItem('temperature', temperature);\r\n\r\n    const maxTokens = parseInt(document.getElementById('max-tokens').value, 10);\r\n    localStorage.setItem('maxTokens', maxTokens);\r\n\r\n    const responseFormat = document.getElementById('response-format-checkbox').checked;\r\n    localStorage.setItem('responseFormat', responseFormat);\r\n\r\n    const retryOnError = document.getElementById('retry-on-error-checkbox').checked;\r\n    localStorage.setItem('retryOnError', retryOnError);\r\n\r\n    const retryCount = parseInt(document.getElementById('retry-count').value, 10);\r\n    localStorage.setItem('retryCount', retryCount);\r\n\r\n    const editPrompts = document.getElementById('edit-prompts-checkbox').checked;\r\n    localStorage.setItem('editPrompts', editPrompts);\r\n    togglePromptsEditor();\r\n}\r\n\r\nfunction resetSettings() {\r\n    // Очистка настроек из localStorage\r\n    localStorage.removeItem('highlightErrors');\r\n    localStorage.removeItem('addComments');\r\n    localStorage.removeItem('highlightCorrected');\r\n    localStorage.removeItem('checkGrammatical');\r\n    localStorage.removeItem('checkSyntactic');\r\n    localStorage.removeItem('checkStylistic');\r\n    localStorage.removeItem('checkLogical');\r\n    localStorage.removeItem('splitIntoChunks');\r\n    localStorage.removeItem('chunkSize');\r\n    localStorage.removeItem('maxChars');\r\n    localStorage.removeItem('temperature');\r\n    localStorage.removeItem('maxTokens');\r\n    localStorage.removeItem('responseFormat');\r\n    localStorage.removeItem('retryOnError');\r\n    localStorage.removeItem('retryCount');\r\n    localStorage.removeItem('editPrompts');\r\n    localStorage.removeItem('promptRole');\r\n    localStorage.removeItem('promptGrammatical');\r\n    localStorage.removeItem('promptSyntactic');\r\n    localStorage.removeItem('promptStylistic');\r\n    localStorage.removeItem('promptLogical');\r\n    localStorage.removeItem('promptTextNote');\r\n    localStorage.removeItem('grammarModel');\r\n\r\n    // Перезагрузка настроек и промптов\r\n    loadGrammarSettings();\r\n    loadGrammarPrompts();\r\n\r\n    // Отображение сообщения об успешном сбросе настроек\r\n    displayPromptMessage('Настройки сброшены к значениям по умолчанию.');\r\n}\r\n\r\nfunction togglePromptsEditor() {\r\n    const editPrompts = document.getElementById('edit-prompts-checkbox').checked;\r\n    const promptsAccordion = document.getElementById('prompts-accordion');\r\n    promptsAccordion.style.display = editPrompts ? 'block' : 'none';\r\n}\r\n\r\nfunction loadGrammarPrompts() {\r\n    // Загружаем промпты из localStorage или используем значения по умолчанию\r\n    const defaultPrompts = getDefaultPrompts();\r\n\r\n    const promptRole = localStorage.getItem('promptRole') || defaultPrompts['role'];\r\n    const promptGrammatical = localStorage.getItem('promptGrammatical') || defaultPrompts['грамматическая'];\r\n    const promptSyntactic = localStorage.getItem('promptSyntactic') || defaultPrompts['синтаксическая'];\r\n    const promptStylistic = localStorage.getItem('promptStylistic') || defaultPrompts['стилистическая'];\r\n    const promptLogical = localStorage.getItem('promptLogical') || defaultPrompts['логическая'];\r\n    const promptTextNote = localStorage.getItem('promptTextNote') || '';\r\n\r\n    document.getElementById('prompt-role').value = promptRole;\r\n    document.getElementById('prompt-grammatical').value = promptGrammatical;\r\n    document.getElementById('prompt-syntactic').value = promptSyntactic;\r\n    document.getElementById('prompt-stylistic').value = promptStylistic;\r\n    document.getElementById('prompt-logical').value = promptLogical;\r\n    document.getElementById('prompt-text-note').value = promptTextNote;\r\n}\r\n\r\nfunction saveGrammarPrompts() {\r\n    const promptRole = document.getElementById('prompt-role').value;\r\n    const promptGrammatical = document.getElementById('prompt-grammatical').value;\r\n    const promptSyntactic = document.getElementById('prompt-syntactic').value;\r\n    const promptStylistic = document.getElementById('prompt-stylistic').value;\r\n    const promptLogical = document.getElementById('prompt-logical').value;\r\n    const promptTextNote = document.getElementById('prompt-text-note').value;\r\n\r\n    localStorage.setItem('promptRole', promptRole);\r\n    localStorage.setItem('promptGrammatical', promptGrammatical);\r\n    localStorage.setItem('promptSyntactic', promptSyntactic);\r\n    localStorage.setItem('promptStylistic', promptStylistic);\r\n    localStorage.setItem('promptLogical', promptLogical);\r\n    localStorage.setItem('promptTextNote', promptTextNote);\r\n\r\n    // Отображаем сообщение об успешном сохранении\r\n    displayPromptMessage('Промпты сохранены и будут применены при следующей проверке.');\r\n}\r\n\r\nfunction resetPrompts() {\r\n    const defaultPrompts = getDefaultPrompts();\r\n    document.getElementById('prompt-role').value = defaultPrompts['role'];\r\n    document.getElementById('prompt-grammatical').value = defaultPrompts['грамматическая'];\r\n    document.getElementById('prompt-syntactic').value = defaultPrompts['синтаксическая'];\r\n    document.getElementById('prompt-stylistic').value = defaultPrompts['стилистическая'];\r\n    document.getElementById('prompt-logical').value = defaultPrompts['логическая'];\r\n    document.getElementById('prompt-text-note').value = '';\r\n\r\n    saveGrammarPrompts();\r\n\r\n    // Отображаем сообщение об успешном сбросе\r\n    displayPromptMessage('Промпты сброшены к значениям по умолчанию.');\r\n}\r\n\r\nfunction displayPromptMessage(message) {\r\n    const messageDiv = document.getElementById('prompt-message');\r\n    messageDiv.innerHTML = `<div class=\"alert alert-info\">${message}</div>`;\r\n    setTimeout(() => {\r\n        messageDiv.innerHTML = '';\r\n    }, 3000);\r\n}\r\n\r\nasync function checkGrammar() {\r\n    try {\r\n        const splitIntoChunks = document.getElementById('split-into-chunks-checkbox').checked;\r\n        const chunkSize = parseInt(document.getElementById('chunk-size').value, 10) || 5;\r\n\r\n        // Сбрасываем прогресс бар и список ошибок\r\n        document.getElementById('grammar-results').innerHTML = '';\r\n        resetProgressBar();\r\n\r\n        showLoading(true, splitIntoChunks);\r\n\r\n        // Показываем фильтр результатов\r\n        document.getElementById('filter-container').style.display = 'none';\r\n\r\n        // Создаем новый AbortController для возможности отмены\r\n        window.abortController = new AbortController();\r\n\r\n        // Получаем выделенный текст\r\n        const selectionText = await Word.run(async (context) => {\r\n            const selection = context.document.getSelection();\r\n            selection.load(\"text\");\r\n            await context.sync();\r\n            return selection.text.trim();\r\n        });\r\n\r\n        const maxChars = parseInt(document.getElementById('max-chars').value, 10) || 100;\r\n\r\n        if (selectionText.length > 0) {\r\n            if (!splitIntoChunks && maxChars > 0 && selectionText.length > maxChars) {\r\n                document.getElementById('grammar-results').innerHTML = `<p class=\"text-warning\">Выделенный текст слишком длинный (${selectionText.length} символов). Пожалуйста, выделите меньше ${maxChars} символов или измените ограничение в настройках.</p>`;\r\n                showLoading(false);\r\n                return;\r\n            }\r\n\r\n            const model = $('#grammar-model').val();\r\n            let result = [];\r\n\r\n            if (splitIntoChunks) {\r\n                const chunks = splitTextIntoChunks(selectionText, chunkSize);\r\n                const totalChunks = chunks.length;\r\n                const progressBar = document.getElementById('progress-bar');\r\n                const progressText = document.getElementById('progress-text');\r\n\r\n                // Инициализируем прогресс бар с общим количеством чанков\r\n                progressText.innerText = `Обработано 0 из ${totalChunks} чанков`;\r\n\r\n                for (let i = 0; i < chunks.length; i++) {\r\n                    const chunkResult = await analyzeTextWithRetry(chunks[i], model, window.abortController.signal);\r\n                    result = result.concat(chunkResult);\r\n\r\n                    // Обновляем прогресс бар\r\n                    const progressPercent = Math.round(((i + 1) / totalChunks) * 100);\r\n                    progressBar.style.width = `${progressPercent}%`;\r\n                    progressBar.innerText = `${progressPercent}%`;\r\n                    progressText.innerText = `Обработано ${i + 1} из ${totalChunks} чанков`;\r\n                }\r\n            } else {\r\n                const chunkResult = await analyzeTextWithRetry(selectionText, model, window.abortController.signal);\r\n                result = result.concat(chunkResult);\r\n            }\r\n\r\n            // Сохраняем результаты в переменной для дальнейшего использования\r\n            window.grammarResults = result;\r\n\r\n            displayResults(result);\r\n            await highlightText(result);\r\n\r\n            // Показываем фильтр результатов, если есть ошибки\r\n            if (result.length > 0) {\r\n                document.getElementById('filter-container').style.display = 'block';\r\n            }\r\n        } else {\r\n            console.log(\"Текст не выделен\");\r\n            document.getElementById('grammar-results').innerHTML = '<p class=\"text-warning\">Пожалуйста, выделите текст для проверки.</p>';\r\n            showLoading(false); // Отключаем загрузчик, если нет выделенного текста\r\n        }\r\n    } catch (error) {\r\n        if (error.name === 'AbortError') {\r\n            console.log('Проверка отменена пользователем.');\r\n            document.getElementById('grammar-results').innerHTML = '<p class=\"text-info\">Проверка отменена.</p>';\r\n        } else {\r\n            console.error('Error in checkGrammar:', error);\r\n            document.getElementById('grammar-results').innerHTML = '<p class=\"text-danger\">Произошла ошибка при проверке. Пожалуйста, попробуйте еще раз.</p>';\r\n        }\r\n    } finally {\r\n        showLoading(false);\r\n        window.abortController = null;\r\n    }\r\n}\r\n\r\nfunction cancelCheck() {\r\n    if (window.abortController) {\r\n        window.abortController.abort();\r\n        showLoading(false);\r\n        window.abortController = null;\r\n    }\r\n}\r\n\r\nfunction resetProgressBar() {\r\n    const progressBar = document.getElementById('progress-bar');\r\n    const progressText = document.getElementById('progress-text');\r\n    if (progressBar) {\r\n        progressBar.style.width = '0%';\r\n        progressBar.innerText = '0%';\r\n    }\r\n    if (progressText) {\r\n        progressText.innerText = 'Обработано 0 из 0 чанков';\r\n    }\r\n}\r\n\r\nfunction splitTextIntoChunks(text, chunkSize) {\r\n    const sentences = text.match(/[^.!?]+[.!?]+(\\s|$)|[^.!?]+$/g) || [text];\r\n    const chunks = [];\r\n    for (let i = 0; i < sentences.length; i += chunkSize) {\r\n        const chunk = sentences.slice(i, i + chunkSize).join(' ').trim();\r\n        chunks.push(chunk);\r\n    }\r\n    return chunks;\r\n}\r\n\r\nasync function analyzeTextWithRetry(text, model, signal) {\r\n    const retryOnError = document.getElementById('retry-on-error-checkbox').checked;\r\n    const retryCount = parseInt(document.getElementById('retry-count').value, 10) || 1;\r\n\r\n    let attempts = 0;\r\n    let lastError = null;\r\n\r\n    while (attempts < retryCount) {\r\n        try {\r\n            const result = await analyzeText(text, model, signal);\r\n            return result;\r\n        } catch (error) {\r\n            lastError = error;\r\n            attempts++;\r\n            if (!retryOnError || attempts >= retryCount) {\r\n                throw error;\r\n            } else {\r\n                console.warn(`Попытка ${attempts} не удалась. Повторяем...`);\r\n            }\r\n        }\r\n    }\r\n\r\n    throw lastError;\r\n}\r\n\r\nasync function analyzeText(text, model, signal) {\r\n    const apiKey = localStorage.getItem('apiKey');\r\n\r\n    // Получаем выбранные типы ошибок\r\n    const errorTypes = [];\r\n    const errorTypesMap = {};\r\n\r\n    const prompts = {};\r\n    const defaultPrompts = getDefaultPrompts();\r\n\r\n    if (document.getElementById('check-grammatical').checked) {\r\n        errorTypes.push('грамматические');\r\n        errorTypesMap['грамматическая'] = true;\r\n        prompts['грамматическая'] = document.getElementById('prompt-grammatical').value || defaultPrompts['грамматическая'];\r\n    }\r\n    if (document.getElementById('check-syntactic').checked) {\r\n        errorTypes.push('синтаксические');\r\n        errorTypesMap['синтаксическая'] = true;\r\n        prompts['синтаксическая'] = document.getElementById('prompt-syntactic').value || defaultPrompts['синтаксическая'];\r\n    }\r\n    if (document.getElementById('check-stylistic').checked) {\r\n        errorTypes.push('стилистические');\r\n        errorTypesMap['стилистическая'] = true;\r\n        prompts['стилистическая'] = document.getElementById('prompt-stylistic').value || defaultPrompts['стилистическая'];\r\n    }\r\n    if (document.getElementById('check-logical').checked) {\r\n        errorTypes.push('логические');\r\n        errorTypesMap['логическая'] = true;\r\n        prompts['логическая'] = document.getElementById('prompt-logical').value || defaultPrompts['логическая'];\r\n    }\r\n\r\n    if (errorTypes.length === 0) {\r\n        throw new Error('Не выбраны типы проверок');\r\n    }\r\n\r\n    const errorTypesString = errorTypes.join(', ');\r\n\r\n    // Получаем примечание о проверяемом тексте\r\n    const promptTextNote = document.getElementById('prompt-text-note').value || '';\r\n\r\n    // Получаем промпт роли\r\n    const defaultPromptsForRole = getDefaultPrompts();\r\n    const promptRole = document.getElementById('prompt-role').value || defaultPromptsForRole['role'];\r\n\r\n    // Получаем настройки модели\r\n    const temperature = parseFloat(document.getElementById('temperature').value) || 0.1;\r\n    const maxTokens = parseInt(document.getElementById('max-tokens').value, 10) || 8000;\r\n    const responseFormat = document.getElementById('response-format-checkbox').checked;\r\n\r\n    // Формируем системный промпт\r\n    const systemPrompt = `${promptRole} Твоя задача - проанализировать предоставленный текст и найти только следующие типы ошибок: ${errorTypesString}.\r\n\r\n${promptTextNote ? `Дополнительная информация о тексте: ${promptTextNote}\\n` : ''}\r\n\r\n${Object.keys(prompts).map(type => `Инструкция для \"${type}\" ошибок:\\n${prompts[type]}\\n`).join('\\n')}\r\n\r\nТвои инструкции:\r\n\r\n- Анализируй текст на уровне предложений и отдельных слов.\r\n\r\n- Ищи только указанные типы ошибок.\r\n\r\n- Игнорируй другие типы ошибок.\r\n\r\n- Если исправление можно внести напрямую в текст и оно не добавляет новой информации, установи \"can_edit\": true и предоставь поле \"text_to_change\" с исправленным текстом.\r\n\r\n- Если исправление невозможно внести напрямую в текст или добавляет новую информацию, установи \"can_edit\": false, предоставь поле \"suggestion\" с рекомендациями по улучшению и добавь поле \"example\" с примером улучшенного текста.\r\n\r\n- Убедись, что все строки в JSON корректно экранированы. В частности, любые двойные кавычки внутри значений строк должны быть экранированы обратным слешем (\\\\\").\r\n\r\n- Возвращай результат в формате JSON-массива, где каждый элемент содержит:\r\n  1. \"text\": проблемный фрагмент текста (слово, фраза или предложение).\r\n  2. \"comment\": объяснение проблемы.\r\n  3. \"errorType\": тип ошибки (${Object.keys(errorTypesMap).map(type => `\"${type}\"`).join(', ')}).\r\n  4. \"can_edit\": true или false (указывает, можно ли внести исправление напрямую в текст).\r\n  5. Если \"can_edit\" равно true, добавь поле \"text_to_change\" с исправленным текстом.\r\n  6. Если \"can_edit\" равно false, добавь поле \"suggestion\" с рекомендациями по улучшению и поле \"example\" с примером улучшенного текста.\r\n\r\nПример ответа:\r\n\r\n${getExampleErrors(Object.keys(errorTypesMap))}\r\n\r\nВажно:\r\n\r\n- Возвращай *только* JSON-массив без дополнительных пояснений или предисловий.\r\n\r\n- Убедись, что все строки в JSON корректно экранированы. В частности, любые двойные кавычки внутри значений строк должны быть экранированы обратным слешем (\\\").\r\n\r\n- Если ошибок нет, верни пустой массив: [];\r\n`;\r\n\r\n    const userPrompt = `Пожалуйста, проанализируй следующий текст:\r\n\r\n\"${text}\";\r\n`;\r\n\r\n    try {\r\n        const requestBody = {\r\n            model: model,\r\n            messages: [\r\n                { role: \"system\", content: systemPrompt },\r\n                { role: \"user\", content: userPrompt }\r\n            ],\r\n            temperature: temperature,\r\n            max_tokens: maxTokens,\r\n        };\r\n\r\n        if (responseFormat) {\r\n            requestBody.response_format = { \"type\": \"json_object\" };\r\n        }\r\n\r\n        const response = await fetch(\"https://openrouter.ai/api/v1/chat/completions\", {\r\n            method: 'POST',\r\n            headers: {\r\n                'Authorization': `Bearer ${apiKey}`,\r\n                'Content-Type': 'application/json',\r\n                'HTTP-Referer': 'https://www.office.com',\r\n                'X-Title': 'Word Grammar Checker',\r\n            },\r\n            body: JSON.stringify(requestBody),\r\n            signal: signal, // Передаем сигнал для возможности отмены\r\n        });\r\n\r\n        if (!response.ok) {\r\n            throw new Error(`HTTP error! status: ${response.status}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n        console.log('Ответ от сервера:', data.choices[0].message.content.trim());\r\n\r\n        // Обработка потенциальных ошибок в JSON\r\n        const jsonResponse = safeJsonParse(data.choices[0].message.content.trim());\r\n        return jsonResponse;\r\n    } catch (error) {\r\n        if (error.name === 'AbortError') {\r\n            console.log('Запрос был отменен.');\r\n            throw error;\r\n        } else {\r\n            console.error('Error in analyzeText:', error);\r\n            throw error;\r\n        }\r\n    }\r\n}\r\n\r\n// Функция для безопасного парсинга JSON\r\nfunction safeJsonParse(str) {\r\n    try {\r\n        return JSON.parse(str);\r\n    } catch (error) {\r\n        // Попытка исправить возможные ошибки экранирования\r\n        const fixedStr = str.replace(/\\\\?\"/g, '\\\\\"').replace(/\\\\\\\\\"/g, '\\\\\\\"');\r\n        try {\r\n            return JSON.parse(fixedStr);\r\n        } catch (innerError) {\r\n            console.error('Failed to parse JSON after fixing:', innerError);\r\n            throw innerError;\r\n        }\r\n    }\r\n}\r\n\r\nfunction getDefaultPrompts() {\r\n    return {\r\n        'role': 'Ты - опытный редактор и лингвист.',\r\n        'грамматическая': '- Ищи грамматические ошибки, связанные с неправильным употреблением частей речи, склонений и спряжений.',\r\n        'синтаксическая': '- Ищи синтаксические ошибки, связанные с неправильным построением предложений.',\r\n        'стилистическая': '- Ищи стилистические ошибки, связанные с использованием некорректных или неуместных выражений.',\r\n        'логическая': '- Ищи логические ошибки, связанные с противоречиями и несоответствиями в тексте.',\r\n    };\r\n}\r\n\r\nfunction getExampleErrors(selectedErrorTypes) {\r\n    const examples = [];\r\n\r\n    if (selectedErrorTypes.includes('грамматическая')) {\r\n        // Примеры с can_edit: true\r\n        examples.push(`{\r\n    \"text\": \"Она сказал\",\r\n    \"comment\": \"Неправильное согласование рода в глаголе.\",\r\n    \"errorType\": \"грамматическая\",\r\n    \"can_edit\": true,\r\n    \"text_to_change\": \"Она сказала\"\r\n}`);\r\n        examples.push(`{\r\n    \"text\": \"Я иду в школу завтра.\",\r\n    \"comment\": \"Неправильное использование времени глагола.\",\r\n    \"errorType\": \"грамматическая\",\r\n    \"can_edit\": true,\r\n    \"text_to_change\": \"Я пойду в школу завтра.\"\r\n}`);\r\n        examples.push(`{\r\n    \"text\": \"У него есть две собаки и три кошка.\",\r\n    \"comment\": \"Неправильное согласование числительного и существительного.\",\r\n    \"errorType\": \"грамматическая\",\r\n    \"can_edit\": true,\r\n    \"text_to_change\": \"У него есть две собаки и три кошки.\"\r\n}`);\r\n\r\n        // Примеры с can_edit: false\r\n        examples.push(`{\r\n    \"text\": \"Бегу по дороге быстро.\",\r\n    \"comment\": \"Отсутствует подлежащее в предложении.\",\r\n    \"errorType\": \"грамматическая\",\r\n    \"can_edit\": false,\r\n    \"suggestion\": \"Добавить подлежащее для ясности.\",\r\n    \"example\": \"Я бегу по дороге быстро.\"\r\n}`);\r\n        examples.push(`{\r\n    \"text\": \"Придя домой, было тихо.\",\r\n    \"comment\": \"Неправильное употребление деепричастного оборота без подлежащего.\",\r\n    \"errorType\": \"грамматическая\",\r\n    \"can_edit\": false,\r\n    \"suggestion\": \"Переписать предложение, указав, кто пришел домой.\",\r\n    \"example\": \"Когда я пришёл домой, было тихо.\"\r\n}`);\r\n        examples.push(`{\r\n    \"text\": \"Книга, которую я читаю интересная.\",\r\n    \"comment\": \"Отсутствует запятая перед придаточным предложением.\",\r\n    \"errorType\": \"грамматическая\",\r\n    \"can_edit\": false,\r\n    \"suggestion\": \"Добавить запятую для правильной пунктуации.\",\r\n    \"example\": \"Книга, которую я читаю, интересная.\"\r\n}`);\r\n    }\r\n\r\n    if (selectedErrorTypes.includes('синтаксическая')) {\r\n        // Примеры с can_edit: true\r\n        examples.push(`{\r\n    \"text\": \"Я люблю читать книги смотреть фильмы.\",\r\n    \"comment\": \"Отсутствует союз между однородными членами предложения.\",\r\n    \"errorType\": \"синтаксическая\",\r\n    \"can_edit\": true,\r\n    \"text_to_change\": \"Я люблю читать книги и смотреть фильмы.\"\r\n}`);\r\n        examples.push(`{\r\n    \"text\": \"Она сказала что придет позже.\",\r\n    \"comment\": \"Отсутствует запятая перед придаточным предложением.\",\r\n    \"errorType\": \"синтаксическая\",\r\n    \"can_edit\": true,\r\n    \"text_to_change\": \"Она сказала, что придет позже.\"\r\n}`);\r\n        examples.push(`{\r\n    \"text\": \"После дождя дорога была скользкая она упала.\",\r\n    \"comment\": \"Отсутствует разделение на предложения или союз.\",\r\n    \"errorType\": \"синтаксическая\",\r\n    \"can_edit\": true,\r\n    \"text_to_change\": \"После дождя дорога была скользкая, и она упала.\"\r\n}`);\r\n\r\n        // Примеры с can_edit: false\r\n        examples.push(`{\r\n    \"text\": \"Мы приносим свои искренние извинения всем,кого могли забыть упомянуть здесь.\",\r\n    \"comment\": \"Синтаксическая ошибка: отсутствует пробел после запятой.\",\r\n    \"errorType\": \"синтаксическая\",\r\n    \"can_edit\": false,\r\n    \"suggestion\": \"Добавить пробел после запятой.\",\r\n    \"example\": \"Мы приносим свои искренние извинения всем, кого могли забыть упомянуть здесь.\"\r\n}`);\r\n        examples.push(`{\r\n    \"text\": \"Из-за того что шел дождь.\",\r\n    \"comment\": \"Неполное предложение: отсутствует главная часть.\",\r\n    \"errorType\": \"синтаксическая\",\r\n    \"can_edit\": false,\r\n    \"suggestion\": \"Добавить главную часть предложения для завершенности.\",\r\n    \"example\": \"Из-за того что шел дождь, мы остались дома.\"\r\n}`);\r\n        examples.push(`{\r\n    \"text\": \"Планируя поездку, была куплена карта.\",\r\n    \"comment\": \"Неясно, кто планировал поездку; неправильно построен деепричастный оборот.\",\r\n    \"errorType\": \"синтаксическая\",\r\n    \"can_edit\": false,\r\n    \"suggestion\": \"Переписать предложение для ясности.\",\r\n    \"example\": \"Планируя поездку, мы купили карту.\"\r\n}`);\r\n    }\r\n\r\n    if (selectedErrorTypes.includes('стилистическая')) {\r\n        // Примеры с can_edit: true\r\n        examples.push(`{\r\n    \"text\": \"Он встал рано утром, чтобы пойти на работку.\",\r\n    \"comment\": \"Нежелательное использование уменьшительно-ласкательного суффикса.\",\r\n    \"errorType\": \"стилистическая\",\r\n    \"can_edit\": true,\r\n    \"text_to_change\": \"Он встал рано утром, чтобы пойти на работу.\"\r\n}`);\r\n        examples.push(`{\r\n    \"text\": \"Она сказала ему, что это офигенно.\",\r\n    \"comment\": \"Нежелательное использование разговорного выражения.\",\r\n    \"errorType\": \"стилистическая\",\r\n    \"can_edit\": true,\r\n    \"text_to_change\": \"Она сказала ему, что это великолепно.\"\r\n}`);\r\n        examples.push(`{\r\n    \"text\": \"В результате он потерпел фиаско.\",\r\n    \"comment\": \"Стилистическая неточность: использование заимствованного слова, которое может быть заменено более подходящим.\",\r\n    \"errorType\": \"стилистическая\",\r\n    \"can_edit\": true,\r\n    \"text_to_change\": \"В результате он потерпел неудачу.\"\r\n}`);\r\n\r\n        // Примеры с can_edit: false\r\n        examples.push(`{\r\n    \"text\": \"Нам повезло, что мы получили отличную поддержку.\",\r\n    \"comment\": \"Стилистическая неточность: слово 'повезло' может преуменьшать усилия тех, кто оказал поддержку.\",\r\n    \"errorType\": \"стилистическая\",\r\n    \"can_edit\": false,\r\n    \"suggestion\": \"Заменить выражение на более признательное.\",\r\n    \"example\": \"Мы благодарны за отличную поддержку, которую получили.\"\r\n}`);\r\n        examples.push(`{\r\n    \"text\": \"Доклад был ничего так, слушатели остались довольны.\",\r\n    \"comment\": \"Неофициальный стиль изложения в формальном контексте.\",\r\n    \"errorType\": \"стилистическая\",\r\n    \"can_edit\": false,\r\n    \"suggestion\": \"Исправить выражение на более формальное.\",\r\n    \"example\": \"Доклад был информативным, и слушатели остались довольны.\"\r\n}`);\r\n        examples.push(`{\r\n    \"text\": \"Он сделал это быстрее всех, потому что он крутой.\",\r\n    \"comment\": \"Использование жаргонного слова в официальном тексте.\",\r\n    \"errorType\": \"стилистическая\",\r\n    \"can_edit\": false,\r\n    \"suggestion\": \"Заменить жаргонное слово на более подходящее.\",\r\n    \"example\": \"Он сделал это быстрее всех благодаря своим навыкам.\"\r\n}`);\r\n    }\r\n\r\n    if (selectedErrorTypes.includes('логическая')) {\r\n        // Примеры с can_edit: true\r\n        examples.push(`{\r\n    \"text\": \"Она родилась в 2000 году и в 1990 году окончила университет.\",\r\n    \"comment\": \"Логическая ошибка: невозможно окончить университет до рождения.\",\r\n    \"errorType\": \"логическая\",\r\n    \"can_edit\": true,\r\n    \"text_to_change\": \"Она родилась в 1970 году и в 1990 году окончила университет.\"\r\n}`);\r\n        examples.push(`{\r\n    \"text\": \"Он съел обед перед завтраком.\",\r\n    \"comment\": \"Логическая несостыковка во времени приема пищи.\",\r\n    \"errorType\": \"логическая\",\r\n    \"can_edit\": true,\r\n    \"text_to_change\": \"Он съел завтрак перед обедом.\"\r\n}`);\r\n        examples.push(`{\r\n    \"text\": \"Вода замерзает при 100 градусах Цельсия.\",\r\n    \"comment\": \"Неправильная температура замерзания воды.\",\r\n    \"errorType\": \"логическая\",\r\n    \"can_edit\": true,\r\n    \"text_to_change\": \"Вода замерзает при 0 градусах Цельсия.\"\r\n}`);\r\n\r\n        // Примеры с can_edit: false\r\n        examples.push(`{\r\n    \"text\": \"Этот квадрат имеет три стороны.\",\r\n    \"comment\": \"Логическое противоречие: квадрат не может иметь три стороны.\",\r\n    \"errorType\": \"логическая\",\r\n    \"can_edit\": false,\r\n    \"suggestion\": \"Уточнить форму или количество сторон фигуры.\",\r\n    \"example\": \"Этот треугольник имеет три стороны.\"\r\n}`);\r\n        examples.push(`{\r\n    \"text\": \"Он продал больше книг, чем любой другой автор, включая себя.\",\r\n    \"comment\": \"Логическая ошибка: некорректное сравнение с самим собой.\",\r\n    \"errorType\": \"логическая\",\r\n    \"can_edit\": false,\r\n    \"suggestion\": \"Пересмотреть формулировку сравнения.\",\r\n    \"example\": \"Он продал больше книг, чем любой другой автор.\"\r\n}`);\r\n        examples.push(`{\r\n    \"text\": \"Она всегда говорит правду, но ей нельзя доверять.\",\r\n    \"comment\": \"Логическое противоречие в характеристике.\",\r\n    \"errorType\": \"логическая\",\r\n    \"can_edit\": false,\r\n    \"suggestion\": \"Уточнить описание для устранения противоречия.\",\r\n    \"example\": \"Она часто обманывает, поэтому ей нельзя доверять.\"\r\n}`);\r\n    }\r\n\r\n    return `[\r\n  ${examples.join(',\\n  ')}\r\n]`;\r\n}\r\n\r\nfunction displayResults(results) {\r\n    const resultsDiv = document.getElementById('grammar-results');\r\n    resultsDiv.innerHTML = '';\r\n\r\n    if (results.length === 0) {\r\n        resultsDiv.innerHTML = '<p class=\"text-success\">Ошибок не найдено. Текст выглядит хорошо!</p>';\r\n        return;\r\n    }\r\n\r\n    const filterValue = document.getElementById('filter-select').value;\r\n\r\n    // Группируем ошибки по типам\r\n    const groupedResults = {};\r\n    results.forEach((result, index) => {\r\n        const type = result.errorType || 'Другие';\r\n        if (!groupedResults[type]) {\r\n            groupedResults[type] = [];\r\n        }\r\n        // Добавляем индекс ошибки для идентификации\r\n        result.index = index;\r\n\r\n        // Фильтрация по can_edit\r\n        if (filterValue === 'can_edit' && !result.can_edit) {\r\n            return;\r\n        }\r\n        if (filterValue === 'cannot_edit' && result.can_edit) {\r\n            return;\r\n        }\r\n\r\n        groupedResults[type].push(result);\r\n    });\r\n\r\n    // Удаляем категории без ошибок\r\n    Object.keys(groupedResults).forEach(type => {\r\n        if (groupedResults[type].length === 0) {\r\n            delete groupedResults[type];\r\n        }\r\n    });\r\n\r\n    // Проверяем, есть ли результаты после фильтрации\r\n    if (Object.keys(groupedResults).length === 0) {\r\n        resultsDiv.innerHTML = '<p class=\"text-info\">Нет ошибок для отображения по выбранному фильтру.</p>';\r\n        return;\r\n    }\r\n\r\n    // Отображаем ошибки в аккордеонах с разделением\r\n    const accordionId = 'grammarAccordion';\r\n    let accordionHTML = `<div class=\"accordion\" id=\"${accordionId}\">`;\r\n\r\n    Object.keys(groupedResults).forEach((type, index) => {\r\n        const errors = groupedResults[type];\r\n        const collapseId = `collapse${index}`;\r\n        accordionHTML += `\r\n            <div class=\"card\">\r\n                <div class=\"card-header\" id=\"heading${index}\">\r\n                    <h2 class=\"mb-0\">\r\n                        <button class=\"btn btn-link ${index === 0 ? '' : 'collapsed'}\" type=\"button\" data-toggle=\"collapse\" data-target=\"#${collapseId}\" aria-expanded=\"${index === 0 ? 'true' : 'false'}\" aria-controls=\"${collapseId}\">\r\n                            ${type.charAt(0).toUpperCase() + type.slice(1)} ошибки (<span class=\"error-count\">${errors.length}</span>)\r\n                        </button>\r\n                    </h2>\r\n                </div>\r\n                <div id=\"${collapseId}\" class=\"collapse ${index === 0 ? 'show' : ''}\" aria-labelledby=\"heading${index}\" data-parent=\"#${accordionId}\">\r\n                    <div class=\"card-body\">\r\n                        ${errors.map((error, errorIndex) => `\r\n                            <div class=\"mb-3 p-3 border error-card ${errorIndex < errors.length - 1 ? 'border-bottom' : ''}\" data-error-index=\"${error.index}\" data-error-type=\"${type}\">\r\n                                <p><strong>Проблемный текст:</strong> <span class=\"text-danger\">${error.text}</span></p>\r\n                                <p><strong>Комментарий:</strong> ${error.comment}</p>\r\n                                ${error.can_edit ? \r\n                                `<p><strong>Исправление:</strong> <span class=\"text-success\">${error.text_to_change}</span></p>\r\n                                <button class=\"btn btn-sm btn-primary apply-suggestion\" data-error-index=\"${error.index}\">Применить исправление</button>`\r\n                                 : \r\n                                `<p><strong>Рекомендации:</strong> ${error.suggestion}</p>\r\n                                <p><strong>Пример улучшенного текста:</strong> <span class=\"text-info\">${error.example}</span></p>\r\n                                <p><em>Исправление невозможно применить напрямую.</em></p>`\r\n                                }\r\n                            </div>\r\n                        `).join('')}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        `;\r\n    });\r\n\r\n    accordionHTML += '</div>';\r\n    resultsDiv.innerHTML = accordionHTML;\r\n\r\n    // Добавляем обработчики для кнопок \"Применить исправление\"\r\n    const buttons = document.getElementsByClassName('apply-suggestion');\r\n    for (let button of buttons) {\r\n        button.addEventListener('click', function () {\r\n            const errorIndex = parseInt(this.dataset.errorIndex, 10);\r\n            applySuggestion(errorIndex, window.grammarResults, this);\r\n        });\r\n    }\r\n}\r\n\r\nasync function applySuggestion(errorIndex, results, buttonElement) {\r\n    const error = results[errorIndex];\r\n    if (!error) return;\r\n\r\n    // Проверяем, можно ли применить исправление\r\n    if (!error.can_edit) {\r\n        displayErrorMessage(buttonElement, 'Это исправление не может быть применено напрямую.');\r\n        return;\r\n    }\r\n\r\n    // Проверяем, не содержит ли исправление дополнительной информации\r\n    if (!isSimpleReplacement(error.text, error.text_to_change)) {\r\n        displayErrorMessage(buttonElement, 'Исправление содержит дополнительную информацию и не может быть применено напрямую.');\r\n        return;\r\n    }\r\n\r\n    await Word.run(async (context) => {\r\n        const selection = context.document.getSelection();\r\n        const ranges = selection.search(error.text, { matchCase: true, matchWholeWord: false });\r\n        ranges.load(\"items\");\r\n        context.trackedObjects.add(ranges);\r\n        await context.sync();\r\n\r\n        if (ranges.items.length > 0) {\r\n            for (let range of ranges.items) {\r\n                range.insertText(error.text_to_change, Word.InsertLocation.replace);\r\n\r\n                // Проверяем, нужно ли выделить исправленный текст\r\n                const highlightCorrected = document.getElementById('highlight-corrected-checkbox').checked;\r\n                if (highlightCorrected) {\r\n                    range.font.highlightColor = 'lightgreen';\r\n                }\r\n            }\r\n            await context.sync();\r\n\r\n            // Удаляем ошибку из массива результатов\r\n            results.splice(errorIndex, 1);\r\n\r\n            // Перерисовываем список ошибок\r\n            displayResults(results);\r\n\r\n            // Проверяем, остались ли ошибки\r\n            checkIfNoErrorsLeft();\r\n        } else {\r\n            displayErrorMessage(buttonElement, 'Не удалось найти текст для замены. Убедитесь, что выделили правильный текст.');\r\n        }\r\n\r\n        context.trackedObjects.remove(ranges);\r\n    }).catch(function (error) {\r\n        console.log('Error:', error);\r\n    });\r\n}\r\n\r\nfunction isSimpleReplacement(originalText, replacementText) {\r\n    // Проверяем, что исправление не содержит дополнительной информации\r\n    // Например, сравниваем количество предложений и длину текста\r\n    const originalSentences = (originalText.match(/[.!?]/g) || []).length;\r\n    const replacementSentences = (replacementText.match(/[.!?]/g) || []).length;\r\n\r\n    if (replacementSentences > originalSentences + 1) {\r\n        return false;\r\n    }\r\n\r\n    if (replacementText.length > originalText.length * 2) {\r\n        return false;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nfunction displayErrorMessage(buttonElement, message) {\r\n    // Проверяем, что buttonElement существует\r\n    if (!buttonElement) return;\r\n\r\n    // Удаляем существующие сообщения об ошибке\r\n    const existingErrorMessage = buttonElement.parentElement.querySelector('.error-message');\r\n    if (existingErrorMessage) {\r\n        existingErrorMessage.remove();\r\n    }\r\n\r\n    // Создаем новый элемент для сообщения об ошибке\r\n    const errorMessageElement = document.createElement('div');\r\n    errorMessageElement.className = 'error-message text-danger mt-2';\r\n    errorMessageElement.textContent = message;\r\n\r\n    // Вставляем сообщение об ошибке после кнопки\r\n    buttonElement.parentElement.insertBefore(errorMessageElement, buttonElement.nextSibling);\r\n}\r\n\r\nfunction checkIfNoErrorsLeft() {\r\n    const accordion = document.getElementById('grammarAccordion');\r\n    if (!accordion || !accordion.children.length) {\r\n        // Если нет ошибок, выводим сообщение\r\n        const resultsDiv = document.getElementById('grammar-results');\r\n        resultsDiv.innerHTML = '<p class=\"text-success\">Все ошибки исправлены!</p>';\r\n        // Скрываем фильтр результатов\r\n        document.getElementById('filter-container').style.display = 'none';\r\n    }\r\n}\r\n\r\nasync function highlightText(results) {\r\n    const highlight = document.getElementById('highlight-checkbox').checked;\r\n    const addComments = document.getElementById('comment-checkbox').checked;\r\n    if (!highlight && !addComments) return;\r\n\r\n    await Word.run(async (context) => {\r\n        const selection = context.document.getSelection();\r\n        for (let result of results) {\r\n            const ranges = selection.search(result.text, { matchCase: true, matchWholeWord: false });\r\n            ranges.load(\"items\");\r\n            context.trackedObjects.add(ranges);\r\n            await context.sync();\r\n\r\n            if (ranges.items.length > 0) {\r\n                for (let range of ranges.items) {\r\n                    if (highlight) {\r\n                        range.font.highlightColor = \"yellow\";\r\n                    }\r\n                    if (addComments) {\r\n                        let commentText = `Тип ошибки: ${result.errorType}\\nКомментарий: ${result.comment}`;\r\n                        if (result.can_edit) {\r\n                            commentText += `\\nИсправление: ${result.text_to_change}`;\r\n                        } else {\r\n                            commentText += `\\nРекомендации: ${result.suggestion}\\nПример улучшенного текста: ${result.example}`;\r\n                        }\r\n                        range.insertComment(commentText);\r\n                    }\r\n                }\r\n                await context.sync();\r\n            }\r\n\r\n            context.trackedObjects.remove(ranges);\r\n        }\r\n    }).catch(function (error) {\r\n        console.log('Error:', error);\r\n    });\r\n}\r\n\r\nfunction showLoading(isLoading, useProgressBar = false) {\r\n    const loadingElement = document.getElementById('loading');\r\n    const checkButton = document.getElementById('check-grammar');\r\n    const progressContainer = document.getElementById('progress-container');\r\n    const spinner = document.getElementById('spinner');\r\n    if (isLoading) {\r\n        loadingElement.style.display = 'block';\r\n        checkButton.disabled = true;\r\n        if (useProgressBar) {\r\n            progressContainer.style.display = 'block';\r\n            spinner.style.display = 'none';\r\n        } else {\r\n            progressContainer.style.display = 'none';\r\n            spinner.style.display = 'block';\r\n        }\r\n    } else {\r\n        loadingElement.style.display = 'none';\r\n        checkButton.disabled = false;\r\n        progressContainer.style.display = 'none';\r\n        spinner.style.display = 'none';\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n// \r\n\r\n\r\nOffice.onReady((info) => {\r\n    if (info.host === Office.HostType.Word) {\r\n        initHome();\r\n        initPrompts();\r\n        initSettings();\r\n        initGrammar();\r\n    }\r\n});\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function () {\r\n    initHome();\r\n    initPrompts();\r\n    initSettings();\r\n    initGrammar();\r\n});\r\n\r\n","// Imports\nimport ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___ from \"../../node_modules/html-loader/dist/runtime/getUrl.js\";\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"./taskpane.js\", import.meta.url);\n// Module\nvar ___HTML_LOADER_REPLACEMENT_0___ = ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___(___HTML_LOADER_IMPORT_0___);\nvar code = \"<!DOCTYPE html> <html> <head> <meta charset=\\\"UTF-8\\\"/> <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=Edge\\\"/> <title>Замена текста</title> <link rel=\\\"stylesheet\\\" href=\\\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/css/bootstrap.min.css\\\"> <link rel=\\\"stylesheet\\\" href=\\\"https://cdn.jsdelivr.net/npm/bootstrap-icons@1.5.0/font/bootstrap-icons.css\\\"> <link href=\\\"https://cdn.jsdelivr.net/npm/select2@4.0.13/dist/css/select2.min.css\\\" rel=\\\"stylesheet\\\"/> </head> <body> <div class=\\\"container mt-3\\\"> <ul class=\\\"nav nav-tabs\\\" id=\\\"myTab\\\" role=\\\"tablist\\\"> <li class=\\\"nav-item\\\" role=\\\"presentation\\\"> <a class=\\\"nav-link active\\\" id=\\\"home-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#home\\\" role=\\\"tab\\\" aria-controls=\\\"home\\\" aria-selected=\\\"true\\\">Основное</a> </li> <li class=\\\"nav-item\\\" role=\\\"presentation\\\"> <a class=\\\"nav-link\\\" id=\\\"grammar-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#grammar\\\" role=\\\"tab\\\" aria-controls=\\\"grammar\\\" aria-selected=\\\"false\\\">Проверка на ошибки</a> </li> <li class=\\\"nav-item\\\" role=\\\"presentation\\\"> <a class=\\\"nav-link\\\" id=\\\"prompts-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#prompts\\\" role=\\\"tab\\\" aria-controls=\\\"prompts\\\" aria-selected=\\\"false\\\">Промпты</a> </li> <li class=\\\"nav-item\\\" role=\\\"presentation\\\"> <a class=\\\"nav-link\\\" id=\\\"settings-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#settings\\\" role=\\\"tab\\\" aria-controls=\\\"settings\\\" aria-selected=\\\"false\\\">Настройки</a> </li> </ul> <div class=\\\"tab-content\\\" id=\\\"myTabContent\\\"> <div class=\\\"tab-pane fade show active\\\" id=\\\"home\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"home-tab\\\"></div> <div class=\\\"tab-pane fade\\\" id=\\\"grammar\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"grammar-tab\\\"></div> <div class=\\\"tab-pane fade\\\" id=\\\"prompts\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"prompts-tab\\\"></div> <div class=\\\"tab-pane fade\\\" id=\\\"settings\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"settings-tab\\\"></div> </div> </div> <\" + \"script src=\\\"https://code.jquery.com/jquery-3.5.1.min.js\\\"><\" + \"/script> <\" + \"script src=\\\"https://cdn.jsdelivr.net/npm/select2@4.0.13/dist/js/select2.min.js\\\"><\" + \"/script> <\" + \"script src=\\\"https://cdnjs.cloudflare.com/ajax/libs/axios/0.21.1/axios.min.js\\\"><\" + \"/script> <\" + \"script src=\\\"https://appsforoffice.microsoft.com/lib/1/hosted/office.js\\\"><\" + \"/script> <\" + \"script src=\\\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/js/bootstrap.bundle.min.js\\\"><\" + \"/script> <\" + \"script src=\\\"\" + ___HTML_LOADER_REPLACEMENT_0___ + \"\\\"><\" + \"/script> </body> </html> \";\n// Exports\nexport default code;"],"names":["module","exports","url","options","String","__esModule","default","hash","maybeNeedQuotes","test","concat","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","m","n","getter","d","a","definition","key","o","Object","defineProperty","enumerable","get","g","globalThis","this","Function","e","window","obj","prop","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","document","currentScript","src","scripts","getElementsByTagName","length","i","Error","replace","p","b","baseURI","self","href","_regeneratorRuntime","t","r","value","Symbol","iterator","c","asyncIterator","u","toStringTag","define","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","v","values","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","getPrompts","JSON","parse","localStorage","getItem","savePrompts","prompts","setItem","stringify","initSettings","apiKey","formattingModel","applyFormatting","getElementById","innerHTML","onchange","saveApiKey","saveFormattingModel","saveApplyFormatting","_loadModels","loadModels","$","val","trigger","checked","select2","width","placeholder","on","setTimeout","focus","populateModelSelectt","models","promptModelSelect","formattingModelSelect","select","empty","model","option","Option","id","append","defaultModel","find","savedModel","some","OPENROUTER_BASE_URL","_callee2","response","_context2","axios","data","t0","console","error","generateTextWithAI","_x","_x2","_x3","_x4","_generateTextWithAI","_callee3","systemPrompt","userPrompt","signal","_context3","fetch","headers","body","messages","role","content","ok","status","json","choices","message","trim","generateTextWithAIFormat","_x5","_x6","_x7","_x8","_generateTextWithAIFormat","_callee4","_context4","originalText","currentController","lastSelectedPrompt","initHome","templateResult","formatPrompt","templateSelection","formatPromptSelection","onclick","replaceSelectedText","cancelRequest","showSelectedText","updatePromptSelect","setInterval","checkSelection","prompt","text","promptData","modelDiv","lastSelectedPromptIndex","parseInt","index","promptIndex","textContent","disabled","newPromptIndex","toString","Word","run","_ref","_callee","context","selection","replaceButton","_context","getSelection","load","sync","_x9","_replaceSelectedText","_callee6","_context6","_ref2","_callee5","formattingInfo","generatedText","secondUserPrompt","updatedFormattingInfo","formattingResponse","_context5","style","display","AbortController","getWordsInfo","Array","isArray","insertText","InsertLocation","applyFormattedText","t1","_x26","_x10","_x11","_x12","_x13","_applyFormattedText","_callee7","newText","words","wordIndex","word","range","wordInfo","_context7","clear","split","end","bold","font","italic","color","highlightColor","size","hyperlink","footnoteText","insertFootnote","start","abort","formatSpecialWords","wordsInfo","baseColor","baseFont","baseSize","formattedText","footnotes","wordData","hasSpecialFormatting","formatting","underline","highlight","fontName","fontSize","hasFootnote","footnoteId","relatedWordIndex","baseFormatting","_showSelectedText","_callee11","_context11","_ref4","_callee10","ranges","colorCounts","fontCounts","sizeCounts","footnote","formattedMassive","_context10","getTextRanges","items","address","isFirstWord","isSecondWord","isThirdWord","isLastWord","entries","reduce","displayWordsInfo","log","_x28","infoDiv","html","_x14","_x15","_getWordsInfo","_callee14","_iterator2","_step2","_context14","_createForOfIteratorHelper","initPrompts","savePrompt","updatePromptList","list","div","createElement","className","appendChild","querySelectorAll","button","splice","deletePrompt","dataset","updatePrompt","initGrammar","selectedModel","defaultModelId","populateGrammarModelSelect","loadGrammarSettings","loadGrammarPrompts","checkGrammar","saveSettings","togglePromptsEditor","addEventListener","saveGrammarPrompts","resetPrompts","resetSettings","cancelCheck","displayResults","grammarResults","abortController","getBooleanSetting","defaultValue","getNumericSetting","num","parseFloat","addComments","highlightCorrected","checkGrammatical","checkSyntactic","checkStylistic","checkLogical","splitIntoChunks","chunkSize","maxChars","temperature","maxTokens","responseFormat","retryOnError","retryCount","editPrompts","removeItem","displayPromptMessage","defaultPrompts","promptRole","promptGrammatical","promptSyntactic","promptStylistic","promptLogical","promptTextNote","messageDiv","_checkGrammar","_callee16","selectionText","result","chunks","totalChunks","progressBar","progressText","chunkResult","progressPercent","_chunkResult","_context16","resetProgressBar","showLoading","_ref6","_callee15","_context15","_x30","splitTextIntoChunks","innerText","analyzeTextWithRetry","Math","round","highlightText","sentences","match","chunk","join","_x16","_x17","_x18","_analyzeTextWithRetry","_callee17","attempts","lastError","_context17","analyzeText","warn","_x19","_x20","_x21","_analyzeText","_callee18","errorTypes","errorTypesMap","errorTypesString","defaultPromptsForRole","requestBody","jsonResponse","_context18","map","selectedErrorTypes","examples","includes","max_tokens","response_format","safeJsonParse","str","fixedStr","innerError","results","resultsDiv","filterValue","groupedResults","errorType","can_edit","accordionId","accordionHTML","errors","collapseId","toUpperCase","errorIndex","comment","text_to_change","suggestion","example","_step","_iterator","getElementsByClassName","applySuggestion","err","_x22","_x23","_x24","_applySuggestion","_callee20","buttonElement","_context20","displayErrorMessage","isSimpleReplacement","_ref7","_callee19","_iterator3","_step3","_context19","search","matchCase","matchWholeWord","trackedObjects","add","accordion","children","remove","_x31","replacementText","originalSentences","existingErrorMessage","parentElement","querySelector","errorMessageElement","insertBefore","nextSibling","_x25","_highlightText","_callee22","_context22","_ref8","_callee21","_iterator4","_step4","_iterator5","_step5","commentText","_context21","insertComment","_x32","isLoading","useProgressBar","loadingElement","checkButton","progressContainer","spinner","Office","onReady","info","host","HostType","___HTML_LOADER_IMPORT_0___","URL"],"sourceRoot":""}