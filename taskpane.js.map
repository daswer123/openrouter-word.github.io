{"version":3,"file":"taskpane.js","mappings":";kDAEAA,EAAOC,QAAU,SAAUC,EAAKC,GAK9B,OAJKA,IAEHA,EAAU,CAAC,GAERD,GAKLA,EAAME,OAAOF,EAAIG,WAAaH,EAAII,QAAUJ,GACxCC,EAAQI,OAEVL,GAAOC,EAAQI,MAEbJ,EAAQK,iBAAmB,oBAAoBC,KAAKP,GAC/C,IAAKQ,OAAOR,EAAK,KAEnBA,GAZEA,CAaX,gFCpBIS,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAab,QAGrB,IAAID,EAASW,EAAyBE,GAAY,CAGjDZ,QAAS,CAAC,GAOX,OAHAe,EAAoBH,GAAUb,EAAQA,EAAOC,QAASW,GAG/CZ,EAAOC,OACf,CAGAW,EAAoBK,EAAID,ECxBxBJ,EAAoBM,EAAI,SAASlB,GAChC,IAAImB,EAASnB,GAAUA,EAAOK,WAC7B,WAAa,OAAOL,EAAgB,OAAG,EACvC,WAAa,OAAOA,CAAQ,EAE7B,OADAY,EAAoBQ,EAAED,EAAQ,CAAEE,EAAGF,IAC5BA,CACR,ECNAP,EAAoBQ,EAAI,SAASnB,EAASqB,GACzC,IAAI,IAAIC,KAAOD,EACXV,EAAoBY,EAAEF,EAAYC,KAASX,EAAoBY,EAAEvB,EAASsB,IAC5EE,OAAOC,eAAezB,EAASsB,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAG3E,ECPAX,EAAoBiB,EAAI,WACvB,GAA0B,iBAAfC,WAAyB,OAAOA,WAC3C,IACC,OAAOC,MAAQ,IAAIC,SAAS,cAAb,EAChB,CAAE,MAAOC,GACR,GAAsB,iBAAXC,OAAqB,OAAOA,MACxC,CACA,CAPuB,GCAxBtB,EAAoBY,EAAI,SAASW,EAAKC,GAAQ,OAAOX,OAAOY,UAAUC,eAAeC,KAAKJ,EAAKC,EAAO,aCAtG,IAAII,EACA5B,EAAoBiB,EAAEY,gBAAeD,EAAY5B,EAAoBiB,EAAEa,SAAW,IACtF,IAAIC,EAAW/B,EAAoBiB,EAAEc,SACrC,IAAKH,GAAaG,IACbA,EAASC,gBACZJ,EAAYG,EAASC,cAAcC,MAC/BL,GAAW,CACf,IAAIM,EAAUH,EAASI,qBAAqB,UAC5C,GAAGD,EAAQE,OAEV,IADA,IAAIC,EAAIH,EAAQE,OAAS,EAClBC,GAAK,KAAOT,IAAc,aAAa/B,KAAK+B,KAAaA,EAAYM,EAAQG,KAAKJ,GAE3F,CAID,IAAKL,EAAW,MAAM,IAAIU,MAAM,yDAChCV,EAAYA,EAAUW,QAAQ,OAAQ,IAAIA,QAAQ,QAAS,IAAIA,QAAQ,YAAa,KACpFvC,EAAoBwC,EAAIZ,KClBxB5B,EAAoByC,EAAIV,SAASW,SAAWC,KAAKb,SAASc,qwCCC1DC,EAAA,kBAAAxB,CAAA,MAAAyB,EAAAzB,EAAA,GAAA0B,EAAAlC,OAAAY,UAAAnB,EAAAyC,EAAArB,eAAAd,EAAAC,OAAAC,gBAAA,SAAAgC,EAAAzB,EAAA0B,GAAAD,EAAAzB,GAAA0B,EAAAC,KAAA,EAAAX,EAAA,mBAAAY,OAAAA,OAAA,GAAAxC,EAAA4B,EAAAa,UAAA,aAAAC,EAAAd,EAAAe,eAAA,kBAAAC,EAAAhB,EAAAiB,aAAA,yBAAAC,EAAAT,EAAAzB,EAAA0B,GAAA,OAAAlC,OAAAC,eAAAgC,EAAAzB,EAAA,CAAA2B,MAAAD,EAAAhC,YAAA,EAAAyC,cAAA,EAAAC,UAAA,IAAAX,EAAAzB,EAAA,KAAAkC,EAAA,aAAAT,GAAAS,EAAA,SAAAT,EAAAzB,EAAA0B,GAAA,OAAAD,EAAAzB,GAAA0B,CAAA,WAAAW,EAAAZ,EAAAzB,EAAA0B,EAAAzC,GAAA,IAAA+B,EAAAhB,GAAAA,EAAAI,qBAAAkC,EAAAtC,EAAAsC,EAAAlD,EAAAI,OAAA+C,OAAAvB,EAAAZ,WAAA0B,EAAA,IAAAU,EAAAvD,GAAA,WAAAM,EAAAH,EAAA,WAAAuC,MAAAc,EAAAhB,EAAAC,EAAAI,KAAA1C,CAAA,UAAAsD,EAAAjB,EAAAzB,EAAA0B,GAAA,WAAAiB,KAAA,SAAAC,IAAAnB,EAAAnB,KAAAN,EAAA0B,GAAA,OAAAD,GAAA,OAAAkB,KAAA,QAAAC,IAAAnB,EAAA,EAAAzB,EAAAqC,KAAAA,EAAA,IAAAQ,EAAA,iBAAAC,EAAA,iBAAAC,EAAA,YAAAC,EAAA,YAAAC,EAAA,YAAAX,IAAA,UAAAY,IAAA,UAAAC,IAAA,KAAAhC,EAAA,GAAAe,EAAAf,EAAA/B,GAAA,8BAAAD,EAAAK,OAAA4D,eAAAC,EAAAlE,GAAAA,EAAAA,EAAAmE,EAAA,MAAAD,GAAAA,IAAA3B,GAAAzC,EAAAqB,KAAA+C,EAAAjE,KAAA+B,EAAAkC,GAAA,IAAAzD,EAAAuD,EAAA/C,UAAAkC,EAAAlC,UAAAZ,OAAA+C,OAAApB,GAAA,SAAAoC,EAAA9B,GAAA,0BAAA+B,SAAA,SAAAxD,GAAAkC,EAAAT,EAAAzB,GAAA,SAAAyB,GAAA,YAAAgC,QAAAzD,EAAAyB,EAAA,gBAAAiC,EAAAjC,EAAAzB,GAAA,SAAA2D,EAAAjC,EAAAnC,EAAAyB,EAAA5B,GAAA,IAAA0C,EAAAY,EAAAjB,EAAAC,GAAAD,EAAAlC,GAAA,aAAAuC,EAAAa,KAAA,KAAAX,EAAAF,EAAAc,IAAAC,EAAAb,EAAAL,MAAA,OAAAkB,GAAA,UAAAe,EAAAf,IAAA5D,EAAAqB,KAAAuC,EAAA,WAAA7C,EAAA6D,QAAAhB,EAAAiB,SAAAC,MAAA,SAAAtC,GAAAkC,EAAA,OAAAlC,EAAAT,EAAA5B,EAAA,aAAAqC,GAAAkC,EAAA,QAAAlC,EAAAT,EAAA5B,EAAA,IAAAY,EAAA6D,QAAAhB,GAAAkB,MAAA,SAAAtC,GAAAO,EAAAL,MAAAF,EAAAT,EAAAgB,EAAA,aAAAP,GAAA,OAAAkC,EAAA,QAAAlC,EAAAT,EAAA5B,EAAA,IAAAA,EAAA0C,EAAAc,IAAA,KAAAlB,EAAAnC,EAAA,gBAAAoC,MAAA,SAAAF,EAAAxC,GAAA,SAAA+E,IAAA,WAAAhE,GAAA,SAAAA,EAAA0B,GAAAiC,EAAAlC,EAAAxC,EAAAe,EAAA0B,EAAA,WAAAA,EAAAA,EAAAA,EAAAqC,KAAAC,EAAAA,GAAAA,GAAA,aAAAvB,EAAAzC,EAAA0B,EAAAzC,GAAA,IAAAM,EAAAsD,EAAA,gBAAA7B,EAAA5B,GAAA,GAAAG,IAAAwD,EAAA,MAAA9B,MAAA,mCAAA1B,IAAAyD,EAAA,cAAAhC,EAAA,MAAA5B,EAAA,OAAAuC,MAAAF,EAAAwC,MAAA,OAAAhF,EAAAiF,OAAAlD,EAAA/B,EAAA2D,IAAAxD,IAAA,KAAA0C,EAAA7C,EAAAkF,SAAA,GAAArC,EAAA,KAAAE,EAAAoC,EAAAtC,EAAA7C,GAAA,GAAA+C,EAAA,IAAAA,IAAAiB,EAAA,gBAAAjB,CAAA,cAAA/C,EAAAiF,OAAAjF,EAAAoF,KAAApF,EAAAqF,MAAArF,EAAA2D,SAAA,aAAA3D,EAAAiF,OAAA,IAAA3E,IAAAsD,EAAA,MAAAtD,EAAAyD,EAAA/D,EAAA2D,IAAA3D,EAAAsF,kBAAAtF,EAAA2D,IAAA,gBAAA3D,EAAAiF,QAAAjF,EAAAuF,OAAA,SAAAvF,EAAA2D,KAAArD,EAAAwD,EAAA,IAAA5B,EAAAuB,EAAA1C,EAAA0B,EAAAzC,GAAA,cAAAkC,EAAAwB,KAAA,IAAApD,EAAAN,EAAAgF,KAAAjB,EAAAF,EAAA3B,EAAAyB,MAAAK,EAAA,gBAAAtB,MAAAR,EAAAyB,IAAAqB,KAAAhF,EAAAgF,KAAA,WAAA9C,EAAAwB,OAAApD,EAAAyD,EAAA/D,EAAAiF,OAAA,QAAAjF,EAAA2D,IAAAzB,EAAAyB,IAAA,YAAAwB,EAAApE,EAAA0B,GAAA,IAAAzC,EAAAyC,EAAAwC,OAAA3E,EAAAS,EAAA6B,SAAA5C,GAAA,GAAAM,IAAAkC,EAAA,OAAAC,EAAAyC,SAAA,eAAAlF,GAAAe,EAAA6B,SAAA4C,SAAA/C,EAAAwC,OAAA,SAAAxC,EAAAkB,IAAAnB,EAAA2C,EAAApE,EAAA0B,GAAA,UAAAA,EAAAwC,SAAA,WAAAjF,IAAAyC,EAAAwC,OAAA,QAAAxC,EAAAkB,IAAA,IAAA8B,UAAA,oCAAAzF,EAAA,aAAAgE,EAAA,IAAAjC,EAAA0B,EAAAnD,EAAAS,EAAA6B,SAAAH,EAAAkB,KAAA,aAAA5B,EAAA2B,KAAA,OAAAjB,EAAAwC,OAAA,QAAAxC,EAAAkB,IAAA5B,EAAA4B,IAAAlB,EAAAyC,SAAA,KAAAlB,EAAA,IAAA7D,EAAA4B,EAAA4B,IAAA,OAAAxD,EAAAA,EAAA6E,MAAAvC,EAAA1B,EAAA2E,YAAAvF,EAAAuC,MAAAD,EAAAkD,KAAA5E,EAAA6E,QAAA,WAAAnD,EAAAwC,SAAAxC,EAAAwC,OAAA,OAAAxC,EAAAkB,IAAAnB,GAAAC,EAAAyC,SAAA,KAAAlB,GAAA7D,GAAAsC,EAAAwC,OAAA,QAAAxC,EAAAkB,IAAA,IAAA8B,UAAA,oCAAAhD,EAAAyC,SAAA,KAAAlB,EAAA,UAAA6B,EAAArD,GAAA,IAAAzB,EAAA,CAAA+E,OAAAtD,EAAA,SAAAA,IAAAzB,EAAAgF,SAAAvD,EAAA,SAAAA,IAAAzB,EAAAiF,WAAAxD,EAAA,GAAAzB,EAAAkF,SAAAzD,EAAA,SAAA0D,WAAAC,KAAApF,EAAA,UAAAqF,EAAA5D,GAAA,IAAAzB,EAAAyB,EAAA6D,YAAA,GAAAtF,EAAA2C,KAAA,gBAAA3C,EAAA4C,IAAAnB,EAAA6D,WAAAtF,CAAA,UAAAwC,EAAAf,GAAA,KAAA0D,WAAA,EAAAJ,OAAA,SAAAtD,EAAA+B,QAAAsB,EAAA,WAAAS,OAAA,YAAAjC,EAAAtD,GAAA,GAAAA,GAAA,KAAAA,EAAA,KAAA0B,EAAA1B,EAAAZ,GAAA,GAAAsC,EAAA,OAAAA,EAAApB,KAAAN,GAAA,sBAAAA,EAAA4E,KAAA,OAAA5E,EAAA,IAAAwF,MAAAxF,EAAAe,QAAA,KAAAxB,GAAA,EAAAyB,EAAA,SAAA4D,IAAA,OAAArF,EAAAS,EAAAe,QAAA,GAAA9B,EAAAqB,KAAAN,EAAAT,GAAA,OAAAqF,EAAAjD,MAAA3B,EAAAT,GAAAqF,EAAAX,MAAA,EAAAW,EAAA,OAAAA,EAAAjD,MAAAF,EAAAmD,EAAAX,MAAA,EAAAW,CAAA,SAAA5D,EAAA4D,KAAA5D,CAAA,YAAA0D,UAAAd,EAAA5D,GAAA,2BAAAkD,EAAA9C,UAAA+C,EAAA5D,EAAAK,EAAA,eAAA+B,MAAAwB,EAAAhB,cAAA,IAAA5C,EAAA4D,EAAA,eAAAxB,MAAAuB,EAAAf,cAAA,IAAAe,EAAAuC,YAAAvD,EAAAiB,EAAAnB,EAAA,qBAAAhC,EAAA0F,oBAAA,SAAAjE,GAAA,IAAAzB,EAAA,mBAAAyB,GAAAA,EAAAkE,YAAA,QAAA3F,IAAAA,IAAAkD,GAAA,uBAAAlD,EAAAyF,aAAAzF,EAAA4F,MAAA,EAAA5F,EAAA6F,KAAA,SAAApE,GAAA,OAAAjC,OAAAsG,eAAAtG,OAAAsG,eAAArE,EAAA0B,IAAA1B,EAAAsE,UAAA5C,EAAAjB,EAAAT,EAAAO,EAAA,sBAAAP,EAAArB,UAAAZ,OAAA+C,OAAA3C,GAAA6B,CAAA,EAAAzB,EAAAgG,MAAA,SAAAvE,GAAA,OAAAqC,QAAArC,EAAA,EAAA8B,EAAAG,EAAAtD,WAAA8B,EAAAwB,EAAAtD,UAAA0B,GAAA,0BAAA9B,EAAA0D,cAAAA,EAAA1D,EAAAiG,MAAA,SAAAxE,EAAAC,EAAAzC,EAAAM,EAAAyB,QAAA,IAAAA,IAAAA,EAAAkF,SAAA,IAAA9G,EAAA,IAAAsE,EAAArB,EAAAZ,EAAAC,EAAAzC,EAAAM,GAAAyB,GAAA,OAAAhB,EAAA0F,oBAAAhE,GAAAtC,EAAAA,EAAAwF,OAAAb,MAAA,SAAAtC,GAAA,OAAAA,EAAAwC,KAAAxC,EAAAE,MAAAvC,EAAAwF,MAAA,KAAArB,EAAA3D,GAAAsC,EAAAtC,EAAAoC,EAAA,aAAAE,EAAAtC,EAAAR,GAAA,0BAAA8C,EAAAtC,EAAA,qDAAAI,EAAAmG,KAAA,SAAA1E,GAAA,IAAAzB,EAAAR,OAAAiC,GAAAC,EAAA,WAAAzC,KAAAe,EAAA0B,EAAA0D,KAAAnG,GAAA,OAAAyC,EAAA0E,UAAA,SAAAxB,IAAA,KAAAlD,EAAAX,QAAA,KAAAU,EAAAC,EAAA2E,MAAA,GAAA5E,KAAAzB,EAAA,OAAA4E,EAAAjD,MAAAF,EAAAmD,EAAAX,MAAA,EAAAW,CAAA,QAAAA,EAAAX,MAAA,EAAAW,CAAA,GAAA5E,EAAAsD,OAAAA,EAAAd,EAAApC,UAAA,CAAAuF,YAAAnD,EAAA+C,MAAA,SAAAvF,GAAA,QAAAsG,KAAA,OAAA1B,KAAA,OAAAP,KAAA,KAAAC,MAAA7C,EAAA,KAAAwC,MAAA,OAAAE,SAAA,UAAAD,OAAA,YAAAtB,IAAAnB,EAAA,KAAA0D,WAAA3B,QAAA6B,IAAArF,EAAA,QAAA0B,KAAA,WAAAA,EAAA6E,OAAA,IAAAtH,EAAAqB,KAAA,KAAAoB,KAAA8D,OAAA9D,EAAA8E,MAAA,WAAA9E,GAAAD,EAAA,EAAAgF,KAAA,gBAAAxC,MAAA,MAAAxC,EAAA,KAAA0D,WAAA,GAAAG,WAAA,aAAA7D,EAAAkB,KAAA,MAAAlB,EAAAmB,IAAA,YAAA8D,IAAA,EAAAnC,kBAAA,SAAAvE,GAAA,QAAAiE,KAAA,MAAAjE,EAAA,IAAA0B,EAAA,cAAAiF,EAAA1H,EAAAM,GAAA,OAAAH,EAAAuD,KAAA,QAAAvD,EAAAwD,IAAA5C,EAAA0B,EAAAkD,KAAA3F,EAAAM,IAAAmC,EAAAwC,OAAA,OAAAxC,EAAAkB,IAAAnB,KAAAlC,CAAA,SAAAA,EAAA,KAAA4F,WAAApE,OAAA,EAAAxB,GAAA,IAAAA,EAAA,KAAAyB,EAAA,KAAAmE,WAAA5F,GAAAH,EAAA4B,EAAAsE,WAAA,YAAAtE,EAAA+D,OAAA,OAAA4B,EAAA,UAAA3F,EAAA+D,QAAA,KAAAuB,KAAA,KAAAxE,EAAA7C,EAAAqB,KAAAU,EAAA,YAAAgB,EAAA/C,EAAAqB,KAAAU,EAAA,iBAAAc,GAAAE,EAAA,SAAAsE,KAAAtF,EAAAgE,SAAA,OAAA2B,EAAA3F,EAAAgE,UAAA,WAAAsB,KAAAtF,EAAAiE,WAAA,OAAA0B,EAAA3F,EAAAiE,WAAA,SAAAnD,GAAA,QAAAwE,KAAAtF,EAAAgE,SAAA,OAAA2B,EAAA3F,EAAAgE,UAAA,YAAAhD,EAAA,MAAAf,MAAA,kDAAAqF,KAAAtF,EAAAiE,WAAA,OAAA0B,EAAA3F,EAAAiE,WAAA,KAAAT,OAAA,SAAA/C,EAAAzB,GAAA,QAAA0B,EAAA,KAAAyD,WAAApE,OAAA,EAAAW,GAAA,IAAAA,EAAA,KAAAnC,EAAA,KAAA4F,WAAAzD,GAAA,GAAAnC,EAAAwF,QAAA,KAAAuB,MAAArH,EAAAqB,KAAAf,EAAA,oBAAA+G,KAAA/G,EAAA0F,WAAA,KAAAjE,EAAAzB,EAAA,OAAAyB,IAAA,UAAAS,GAAA,aAAAA,IAAAT,EAAA+D,QAAA/E,GAAAA,GAAAgB,EAAAiE,aAAAjE,EAAA,UAAA5B,EAAA4B,EAAAA,EAAAsE,WAAA,UAAAlG,EAAAuD,KAAAlB,EAAArC,EAAAwD,IAAA5C,EAAAgB,GAAA,KAAAkD,OAAA,YAAAU,KAAA5D,EAAAiE,WAAAhC,GAAA,KAAA2D,SAAAxH,EAAA,EAAAwH,SAAA,SAAAnF,EAAAzB,GAAA,aAAAyB,EAAAkB,KAAA,MAAAlB,EAAAmB,IAAA,gBAAAnB,EAAAkB,MAAA,aAAAlB,EAAAkB,KAAA,KAAAiC,KAAAnD,EAAAmB,IAAA,WAAAnB,EAAAkB,MAAA,KAAA+D,KAAA,KAAA9D,IAAAnB,EAAAmB,IAAA,KAAAsB,OAAA,cAAAU,KAAA,kBAAAnD,EAAAkB,MAAA3C,IAAA,KAAA4E,KAAA5E,GAAAiD,CAAA,EAAA4D,OAAA,SAAApF,GAAA,QAAAzB,EAAA,KAAAmF,WAAApE,OAAA,EAAAf,GAAA,IAAAA,EAAA,KAAA0B,EAAA,KAAAyD,WAAAnF,GAAA,GAAA0B,EAAAuD,aAAAxD,EAAA,YAAAmF,SAAAlF,EAAA4D,WAAA5D,EAAAwD,UAAAG,EAAA3D,GAAAuB,CAAA,GAAA6D,MAAA,SAAArF,GAAA,QAAAzB,EAAA,KAAAmF,WAAApE,OAAA,EAAAf,GAAA,IAAAA,EAAA,KAAA0B,EAAA,KAAAyD,WAAAnF,GAAA,GAAA0B,EAAAqD,SAAAtD,EAAA,KAAAxC,EAAAyC,EAAA4D,WAAA,aAAArG,EAAA0D,KAAA,KAAApD,EAAAN,EAAA2D,IAAAyC,EAAA3D,EAAA,QAAAnC,CAAA,QAAA0B,MAAA,0BAAA8F,cAAA,SAAA/G,EAAA0B,EAAAzC,GAAA,YAAAkF,SAAA,CAAAtC,SAAAyB,EAAAtD,GAAA2E,WAAAjD,EAAAmD,QAAA5F,GAAA,cAAAiF,SAAA,KAAAtB,IAAAnB,GAAAwB,CAAA,GAAAjD,CAAA,UAAAgH,EAAA/H,EAAAwC,EAAAzB,EAAA0B,EAAAnC,EAAAH,EAAA0C,GAAA,QAAAd,EAAA/B,EAAAG,GAAA0C,GAAAE,EAAAhB,EAAAW,KAAA,OAAA1C,GAAA,YAAAe,EAAAf,EAAA,CAAA+B,EAAAiD,KAAAxC,EAAAO,GAAAkE,QAAArC,QAAA7B,GAAA+B,KAAArC,EAAAnC,EAAA,UAAA0H,EAAAhI,GAAA,sBAAAwC,EAAA,KAAAzB,EAAAkH,UAAA,WAAAhB,SAAA,SAAAxE,EAAAnC,GAAA,IAAAH,EAAAH,EAAAkI,MAAA1F,EAAAzB,GAAA,SAAAoH,EAAAnI,GAAA+H,EAAA5H,EAAAsC,EAAAnC,EAAA6H,EAAAC,EAAA,OAAApI,EAAA,UAAAoI,EAAApI,GAAA+H,EAAA5H,EAAAsC,EAAAnC,EAAA6H,EAAAC,EAAA,QAAApI,EAAA,CAAAmI,OAAA,OADC,SAASE,IACN,OAAOC,KAAKC,MAAMC,aAAaC,QAAQ,YAAc,KACzD,CAEC,SAASC,EAAYC,GAClBH,aAAaI,QAAQ,UAAWN,KAAKO,UAAUF,GACnD,CAYC,SAASG,IACN,IA6CMC,EACAC,EACAC,EA/CcxH,SAASyH,eAAe,YAChCC,UAAY,yoBAexB1H,SAASyH,eAAe,WAAWE,SAAWC,EAC9C5H,SAASyH,eAAe,oBAAoBE,SAAWE,EACvD7H,SAASyH,eAAe,oBAAoBE,SAAWG,EA0EA,WAEjCC,EAAAtB,MAAC,KAADD,UAAA,CA3EtBwB,GA0BMV,EAASP,aAAaC,QAAQ,WAAa,GAC3CO,EAAkBR,aAAaC,QAAQ,oBAAsB,oBAC7DQ,EAA8D,SAA5CT,aAAaC,QAAQ,mBAE7ChH,SAASyH,eAAe,WAAWxG,MAAQqG,EAC3CW,EAAE,qBAAqBC,IAAIX,GAAiBY,QAAQ,UACpDnI,SAASyH,eAAe,oBAAoBW,QAAUZ,EA5BtDS,EAAE,qBAAqBI,QAAQ,CAC3BC,MAAO,OACPC,YAAa,uCACdC,GAAG,mBAAmB,WACrBC,YAAW,WACPR,EAAE,0BAA0BhJ,IAAI,GAAGyJ,OACvC,GAAG,EACP,GACJ,CAGA,SAASb,IACL,IAAMN,EAAkBvH,SAASyH,eAAe,oBAAoBxG,MACpE8F,aAAaI,QAAQ,kBAAmBI,EAC5C,CAEA,SAASO,IACL,IAAMN,EAAkBxH,SAASyH,eAAe,oBAAoBW,QACpErB,aAAaI,QAAQ,kBAAmBK,EAC5C,CAcC,SAASmB,EAAsBC,GAC5B,IAAMC,EAAoBZ,EAAE,iBACtBa,EAAwBb,EAAE,qBAEhC,CAACY,EAAmBC,GAAuBhG,SAAQ,SAAAiG,GAC/CA,EAAOC,QACPJ,EAAO9F,SAAQ,SAAAmG,GACX,IAAMC,EAAS,IAAIC,OAAOF,EAAM/D,KAAM+D,EAAMG,IAAI,GAAO,GACvDL,EAAOM,OAAOH,EAClB,IACAH,EAAOZ,QAAQ,SACnB,IAGA,IAAMmB,EAAeV,EAAOW,MAAK,SAAAN,GAAK,MAAiB,sBAAbA,EAAMG,EAA0B,KAAKR,EAAO,GAClFU,GACAR,EAAsBZ,IAAIoB,EAAaF,IAAIjB,QAAQ,UAIvD,IAAMqB,EAAazC,aAAaC,QAAQ,mBACpCwC,GAAcZ,EAAOa,MAAK,SAAAR,GAAK,OAAIA,EAAMG,KAAOI,CAAU,KAC1DV,EAAsBZ,IAAIsB,GAAYrB,QAAQ,SAEtD,CAIA,SAASP,IACL,IAAMN,EAAStH,SAASyH,eAAe,WAAWxG,MAClD8F,aAAaI,QAAQ,SAAUG,EACnC,CAKA,IAAMoC,EAAsB,+BAEF,SAAA3B,IASzB,OATyBA,EAAAxB,EAAAzF,IAAAqE,MAAzB,SAAAwE,IAAA,IAAAC,EAAAhB,EAAA,OAAA9H,IAAAa,MAAA,SAAAkI,GAAA,cAAAA,EAAAjE,KAAAiE,EAAA3F,MAAA,cAAA2F,EAAAjE,KAAA,EAAAiE,EAAA3F,KAAA,EAE8B4F,MAAM7K,IAAI,GAADlB,OAAI2L,EAAmB,YAAU,OAA3DE,EAAQC,EAAAlG,KACRiF,EAASgB,EAASG,KAAKA,KAC7BhD,aAAaI,QAAQ,SAAUN,KAAKO,UAAUwB,IAC9CD,EAAsBC,GAAQiB,EAAA3F,KAAA,gBAAA2F,EAAAjE,KAAA,EAAAiE,EAAAG,GAAAH,EAAA,SAE9BI,QAAQC,MAAM,wBAAuBL,EAAAG,IAAS,yBAAAH,EAAA9D,OAAA,GAAA4D,EAAA,mBAErDlD,MAAA,KAAAD,UAAA,UAEe2D,EAAkBC,EAAAC,EAAAC,EAAAC,GAAA,OAAAC,EAAA/D,MAAC,KAADD,UAAA,UAAAgE,IAgCjC,OAhCiCA,EAAAjE,EAAAzF,IAAAqE,MAAjC,SAAAsF,EAAkCC,EAAcC,EAAY1B,EAAO2B,GAAM,IAAAtD,EAAAsC,EAAAG,EAAA,OAAAjJ,IAAAa,MAAA,SAAAkJ,GAAA,cAAAA,EAAAjF,KAAAiF,EAAA3G,MAAA,OACzB,OAAvCoD,EAASP,aAAaC,QAAQ,UAAS6D,EAAAjF,KAAA,EAAAiF,EAAA3G,KAAA,EAGlB4G,MAAM,GAAD/M,OAAI2L,EAAmB,qBAAqB,CACpElG,OAAQ,OACRoH,OAAAA,EACAG,QAAS,CACL,cAAiB,UAAFhN,OAAYuJ,GAC3B,eAAgB,mBAChB,eAAgB,yBAChB,UAAW,qBAEf0D,KAAMnE,KAAKO,UAAU,CACjB6B,MAAOA,EACPgC,SAAU,CACN,CAAEC,KAAM,SAAUC,QAAST,GAC3B,CAAEQ,KAAM,OAAQC,QAASR,QAGnC,OAhBY,IAARf,EAAQiB,EAAAlH,MAkBAyH,GAAI,CAAFP,EAAA3G,KAAA,cACN,IAAI3D,MAAM,uBAADxC,OAAwB6L,EAASyB,SAAS,cAAAR,EAAA3G,KAAA,EAG1C0F,EAAS0B,OAAM,OAAxB,OAAJvB,EAAIc,EAAAlH,KAAAkH,EAAA/G,OAAA,SACHiG,EAAKwB,QAAQ,GAAGC,QAAQL,QAAQM,QAAM,QAEQ,MAFRZ,EAAAjF,KAAA,GAAAiF,EAAAb,GAAAa,EAAA,SAE7CZ,QAAQC,MAAM,+BAA8BW,EAAAb,IAASa,EAAAb,GAAA,yBAAAa,EAAA9E,OAAA,GAAA0E,EAAA,oBAG5DhE,MAAA,KAAAD,UAAA,UAEekF,EAAwBC,EAAAC,EAAAC,EAAAC,GAAA,OAAAC,EAAAtF,MAAC,KAADD,UAAA,UAAAuF,IAgCvC,OAhCuCA,EAAAxF,EAAAzF,IAAAqE,MAAvC,SAAA6G,EAAwCtB,EAAcC,EAAY1B,EAAO2B,GAAM,IAAAtD,EAAAsC,EAAAG,EAAA,OAAAjJ,IAAAa,MAAA,SAAAsK,GAAA,cAAAA,EAAArG,KAAAqG,EAAA/H,MAAA,OAC/B,OAAvCoD,EAASP,aAAaC,QAAQ,UAASiF,EAAArG,KAAA,EAAAqG,EAAA/H,KAAA,EAGlB4G,MAAM,GAAD/M,OAAI2L,EAAmB,qBAAqB,CACpElG,OAAQ,OACRoH,OAAAA,EACAG,QAAS,CACL,cAAiB,UAAFhN,OAAYuJ,GAC3B,eAAgB,mBAChB,eAAgB,yBAChB,UAAW,qBAEf0D,KAAMnE,KAAKO,UAAU,CACjB6B,MAAOA,EACPgC,SAAU,CACN,CAAEC,KAAM,SAAUC,QAAST,GAC3B,CAAEQ,KAAM,OAAQC,QAASR,QAGnC,OAhBY,IAARf,EAAQqC,EAAAtI,MAkBAyH,GAAI,CAAFa,EAAA/H,KAAA,cACN,IAAI3D,MAAM,uBAADxC,OAAwB6L,EAASyB,SAAS,cAAAY,EAAA/H,KAAA,EAG1C0F,EAAS0B,OAAM,OAAxB,OAAJvB,EAAIkC,EAAAtI,KAAAsI,EAAAnI,OAAA,SACHiG,EAAKwB,QAAQ,GAAGC,QAAQL,QAAQM,QAAM,QAEQ,MAFRQ,EAAArG,KAAA,GAAAqG,EAAAjC,GAAAiC,EAAA,SAE7ChC,QAAQC,MAAM,+BAA8B+B,EAAAjC,IAASiC,EAAAjC,GAAA,yBAAAiC,EAAAlG,OAAA,GAAAiG,EAAA,oBAG5DvF,MAAA,KAAAD,UAAA,CAID,IAAI0F,EAAe,GACfC,EAAoB,KACpBC,EAAqB,KAExB,SAASC,IACQrM,SAASyH,eAAe,QAChCC,UAAY,osBAWpBO,EAAE,kBAAkBI,QAAQ,CACxBC,MAAO,OACPC,YAAa,kBACb+D,eAAgBC,EAChBC,kBAAmBC,IAGvBzM,SAASyH,eAAe,gBAAgBiF,QAAUC,EAClD3M,SAASyH,eAAe,kBAAkBiF,QAAUE,EACpD5M,SAASyH,eAAe,sBAAsBiF,QAAUG,EAIxDC,IACAC,YAAYC,EAAgB,IAC9B,CAEA,SAAST,EAAaU,GAClB,IAAKA,EAAO7D,GACR,OAAO6D,EAAOC,KAElB,IACMC,EADUvG,IACWqG,EAAO7D,IAClC,OAAOnB,EAAE,SAADlK,OAAUoP,EAAWjI,KAAI,MAAAnH,OAAKoP,EAAWlE,MAAK,YAC1D,CAEA,SAASwD,EAAsBQ,GAC3B,OAAKA,EAAO7D,GAGIxC,IACWqG,EAAO7D,IAChBlE,KAJP+H,EAAOC,IAKtB,CAEC,SAASJ,IACN,IAAM/D,EAASd,EAAE,kBACXmF,EAAWpN,SAASyH,eAAe,kBACnCP,EAAUN,IAChBmC,EAAOC,QACPD,EAAOM,OAAO,IAAIF,OAAO,kBAAmB,IAAI,GAAM,IACtD,IAAMkE,EAnPCC,SAASvG,aAAaC,QAAQ,4BAA8B,KAAM,IAoPzEE,EAAQpE,SAAQ,SAACmK,EAAQM,GACrB,IAAMrE,EAAS,IAAIC,OAAO8D,EAAO/H,KAAMqI,GAAO,EAAOA,IAAUF,GAC/DtE,EAAOM,OAAOH,EAClB,IACAH,EAAOZ,QAAQ,UACf,IAAMqF,EAAcH,GAA2B,GAAKA,EAA0BnG,EAAQ7G,OAASgN,EAA0B,KACzHjB,EAAqC,OAAhBoB,EAAuBtG,EAAQsG,GAAe,KACnEJ,EAASK,YAAcrB,EAAqB,WAAHrO,OAAcqO,EAAmBnD,OAAU,GACpFjJ,SAASyH,eAAe,gBAAgBiG,UAAYtB,EACpDrD,EAAOP,GAAG,UAAU,WAChB,IA3P8B+E,EA2PxBI,EAAiB1F,EAAE7I,MAAM8I,MAC/BkE,EAAqBuB,EAAiBzG,EAAQyG,GAAkB,KA5PlCJ,EA6PFI,IAAmB,EA5PnD5G,aAAaI,QAAQ,0BAA2BoG,EAAMK,YA6PlDR,EAASK,YAAcrB,EAAqB,WAAHrO,OAAcqO,EAAmBnD,OAAU,GACpFjJ,SAASyH,eAAe,gBAAgBiG,UAAYtB,CACxD,GACJ,CAEA,SAASY,IACLa,KAAKC,IAAG,eAAAC,EAAAxH,EAAAzF,IAAAqE,MAAC,SAAA6I,EAAOC,GAAO,IAAAC,EAAAC,EAAA,OAAArN,IAAAa,MAAA,SAAAyM,GAAA,cAAAA,EAAAxI,KAAAwI,EAAAlK,MAAA,OAEI,OADjBgK,EAAYD,EAAQjO,SAASqO,gBACzBC,KAAK,QAAQF,EAAAlK,KAAA,EACjB+J,EAAQM,OAAM,OAEdJ,EAAgBnO,SAASyH,eAAe,gBAC1CyG,EAAUhB,KAAKzB,OAAOpL,OAAS,EAC/B8N,EAAcT,UAAW,EAEzBS,EAAcT,UAAW,EAC5B,wBAAAU,EAAArI,OAAA,GAAAiI,EAAA,KACJ,gBAAAQ,GAAA,OAAAT,EAAAtH,MAAA,KAAAD,UAAA,EAXO,GAYZ,CAAC,SAEcmG,IAAmB,OAAA8B,EAAAhI,MAAC,KAADD,UAAA,UAAAiI,IAoGjC,OApGiCA,EAAAlI,EAAAzF,IAAAqE,MAAlC,SAAAuJ,IAAA,OAAA5N,IAAAa,MAAA,SAAAgN,GAAA,cAAAA,EAAA/I,KAAA+I,EAAAzK,MAAA,OACE2J,KAAKC,IAAG,eAAAc,EAAArI,EAAAzF,IAAAqE,MAAC,SAAA0J,EAAOZ,GAAO,IAAAC,EAAA1G,EAAAD,EAAAuH,EAAAnE,EAAAoE,EAAAC,EAAAC,EAAAC,EAAA,OAAApO,IAAAa,MAAA,SAAAwN,GAAA,cAAAA,EAAAvJ,KAAAuJ,EAAAjL,MAAA,OAEI,OADjBgK,EAAYD,EAAQjO,SAASqO,gBACzBC,KAAK,QAAQa,EAAAjL,KAAA,EACjB+J,EAAQM,OAAM,OAEU,GAA9BrC,EAAegC,EAAUhB,KAEpBd,EAAoB,CAAF+C,EAAAjL,KAAA,eAAAiL,EAAArL,OAAA,iBAUI,GAR3B9D,SAASyH,eAAe,gBAAgB2H,MAAMC,QAAU,OACxDrP,SAASyH,eAAe,kBAAkB2H,MAAMC,QAAU,eAAeF,EAAAvJ,KAAA,EAGrEuG,EAAoB,IAAImD,gBAElB9H,EAA8D,SAA5CT,aAAaC,QAAQ,mBACvCO,EAAkBR,aAAaC,QAAQ,oBAAsB,oBAC/D8H,EAAiB,IAEjBtH,EAAiB,CAAF2H,EAAAjL,KAAA,gBAAAiL,EAAAjL,KAAA,GACQqL,EAAatB,EAASC,GAAU,QAAvDY,EAAcK,EAAAxL,KAAA,QAK2K,OAAvLgH,EAAa,GAAH5M,OAAMqO,EAAmBc,KAAI,2CAAAnP,OAA0CmO,EAAY,KAAAnO,OAAIyJ,EAAkB,+BAAHzJ,OAAkC8I,KAAKO,UAAU0H,IAAoB,IAAEK,EAAAjL,KAAA,GAEjKiG,EAJP,yPAIwCQ,EAAYyB,EAAmBnD,MAAOkD,EAAkBvB,QAAO,QAAzG,GAAbmE,EAAaI,EAAAxL,MAEf6D,EAAiB,CAAF2H,EAAAjL,KAAA,SAMoC,OAH7C8K,EAAmB,qBAAHjR,OAClBmO,EAAY,uBAAAnO,OACZgR,EAAa,wCAAAhR,OACI8I,KAAKO,UAAU0H,GAAe,u6CAAAK,EAAAvJ,KAAA,GAAAuJ,EAAAjL,KAAA,GAsCdwH,EA3CV,uOA2CuDsD,EAAkBzH,EAAiB4E,EAAkBvB,QAAO,QACnF,GADjDsE,EAAkBC,EAAAxL,KACxBsL,EAAwBpI,KAAKC,MAAMoI,GAE9BM,MAAMC,QAAQR,GAAwB,CAAFE,EAAAjL,KAAA,eAC/B,IAAI3D,MAAM,4BAA2B,QAAA4O,EAAAjL,KAAA,iBAIkB,OAJlBiL,EAAAvJ,KAAA,GAAAuJ,EAAAnF,GAAAmF,EAAA,UAG/ClF,QAAQC,MAAM,wCAAuCiF,EAAAnF,IACrDkE,EAAUwB,WAAWX,EAAelB,KAAK8B,eAAenP,SAAS2O,EAAArL,OAAA,yBAAAqL,EAAAjL,KAAA,GAI/D0L,EAAmB3B,EAASC,EAAWa,EAAeE,GAAsB,QAAAE,EAAAjL,KAAA,iBAElFgK,EAAUwB,WAAWX,EAAelB,KAAK8B,eAAenP,SAAS,QAAA2O,EAAAjL,KAAA,iBAAAiL,EAAAvJ,KAAA,GAAAuJ,EAAAU,GAAAV,EAAA,SAGlD,eAAfA,EAAAU,GAAM3K,MACN+E,QAAQC,MAAM,SAAQiF,EAAAU,IACzB,QAIwB,OAJxBV,EAAAvJ,KAAA,GAED5F,SAASyH,eAAe,kBAAkB2H,MAAMC,QAAU,OAC1DrP,SAASyH,eAAe,gBAAgB2H,MAAMC,QAAU,eACxDlD,EAAoB,KAAKgD,EAAAhJ,OAAA,6BAAAgJ,EAAApJ,OAAA,GAAA8I,EAAA,iCAEhC,gBAAAiB,GAAA,OAAAlB,EAAAnI,MAAA,KAAAD,UAAA,EAlGO,IAkGL,wBAAAmI,EAAA5I,OAAA,GAAA2I,EAAA,KACJD,EAAAhI,MAAA,KAAAD,UAAA,UAGcoJ,EAAkBG,EAAAC,EAAAC,EAAAC,GAAA,OAAAC,EAAA1J,MAAC,KAADD,UAAA,UAAA2J,IAsChC,OAtCgCA,EAAA5J,EAAAzF,IAAAqE,MAAjC,SAAAiL,EAAkCnC,EAASC,EAAWmC,EAASvB,GAAc,IAAAwB,EAAAC,EAAAjQ,EAAAkQ,EAAAC,EAAAC,EAAA,OAAA5P,IAAAa,MAAA,SAAAgP,GAAA,cAAAA,EAAA/K,KAAA+K,EAAAzM,MAAA,OACzD,OAAlBgK,EAAU0C,QAAQD,EAAAzM,KAAA,EACZ+J,EAAQM,OAAM,OAEd+B,EAAQD,EAAQQ,MAAM,OACxBN,EAAY,EAEPjQ,EAAI,EAAC,YAAEA,EAAIgQ,EAAMjQ,QAAM,CAAAsQ,EAAAzM,KAAA,SA2B3B,OA1BGsM,EAAOF,EAAMhQ,GACbmQ,EAAQvC,EAAUwB,WAAWc,EAAM3C,KAAK8B,eAAemB,KAEvDP,EAAYzB,EAAezO,cAGLjC,KAFhBsS,EAAW5B,EAAeyB,IAEnBQ,OAAoBN,EAAMO,KAAKD,KAAOL,EAASK,WACpC3S,IAApBsS,EAASO,SAAsBR,EAAMO,KAAKC,OAASP,EAASO,QAC5DP,EAASQ,QAAOT,EAAMO,KAAKE,MAAQR,EAASQ,OAC5CR,EAASS,iBAAgBV,EAAMO,KAAKG,eAAiBT,EAASS,gBAC9DT,EAASU,OAAMX,EAAMO,KAAKI,KAAOV,EAASU,MAE1CV,EAASW,YACTZ,EAAMY,UAAYX,EAASW,WAG3BX,EAASY,cACSb,EAAMc,iBACZvG,KAAK0E,WAAWgB,EAASY,aAAczD,KAAK8B,eAAe6B,OAG3EjB,KAGAjQ,EAAIgQ,EAAMjQ,OAAS,GACnB6N,EAAUwB,WAAW,IAAK7B,KAAK8B,eAAemB,KACjDH,EAAAzM,KAAA,GAEK+J,EAAQM,OAAM,QA7BUjO,IAAGqQ,EAAAzM,KAAA,iCAAAyM,EAAA5K,OAAA,GAAAqK,EAAA,MA+BtC3J,MAAA,KAAAD,UAAA,CAGD,SAASoG,IACDT,IACAA,EAAkBsF,QAClBzR,SAASyH,eAAe,kBAAkB2H,MAAMC,QAAU,OAC1DrP,SAASyH,eAAe,gBAAgB2H,MAAMC,QAAU,eAEhE,CA8DA,SAASqC,EAAmBC,EAAWC,EAAWC,EAAUC,GAC1D,IAAIC,EAAgB,GAChBC,EAAY,GA4DhB,OA1DAL,EAAU7O,SAAQ,SAAC0N,EAAMjD,GACvB,IAAI0E,EAAW,CAAE/E,KAAMsD,EAAKtD,MACxBgF,GAAuB,EAEvBC,EAAa,CAAC,GAEA,IAAd3B,EAAKO,MAA+B,OAAdP,EAAKO,OAC7BoB,EAAWpB,MAAO,EAClBmB,GAAuB,GAErB1B,EAAKS,SACPkB,EAAWlB,QAAS,EACpBiB,GAAuB,GAErB1B,EAAK4B,YACPD,EAAWC,WAAY,EACvBF,GAAuB,GAErB1B,EAAKU,QAAUU,GAA4B,KAAfpB,EAAKU,QACnCiB,EAAWjB,MAAQV,EAAKU,MACxBgB,GAAuB,GAErB1B,EAAKW,gBAA0C,OAAxBX,EAAKW,iBAC9BgB,EAAWE,UAAY7B,EAAKW,eAC5Be,GAAuB,GAErB1B,EAAK8B,WAAaT,GAA8B,KAAlBrB,EAAK8B,WACrCH,EAAWnB,KAAOR,EAAK8B,SACvBJ,GAAuB,GAErB1B,EAAK+B,UAAYT,GAA8B,KAAlBtB,EAAK+B,UAAqC,OAAlB/B,EAAK+B,WAC5DJ,EAAWf,KAAOZ,EAAK+B,SACvBL,GAAuB,GAErB1B,EAAKa,YACPc,EAAWd,UAAYb,EAAKa,UAC5Ba,GAAuB,GAGrBpT,OAAO2G,KAAK0M,GAAY9R,OAAS,IACnC4R,EAASE,WAAaA,GAGpB3B,EAAKgC,cACPP,EAASQ,WAAalF,EAAQ,EAC9ByE,EAAUtN,KAAK,CACb0E,GAAImE,EAAQ,EACZL,KAAMsD,EAAKc,aACXoB,iBAAkBX,EAAc1R,SAElC6R,GAAuB,GAGrBA,GACFH,EAAcrN,KAAKuN,EAEvB,IAEO,CACLF,cAAeA,EACfC,UAAWA,EACXW,eAAgB,CACdzB,MAAOU,EACPZ,KAAMa,EACNT,KAAMU,GAGZ,CAAC,SAEcjF,IAAgB,OAAA+F,EAAAnM,MAAC,KAADD,UAAA,UAAAoM,IAoE9B,OApE8BA,EAAArM,EAAAzF,IAAAqE,MAA/B,SAAA0N,IAAA,OAAA/R,IAAAa,MAAA,SAAAmR,GAAA,cAAAA,EAAAlN,KAAAkN,EAAA5O,MAAA,cAAA4O,EAAA5O,KAAA,EACQ2J,KAAKC,IAAG,eAAAiF,EAAAxM,EAAAzF,IAAAqE,MAAC,SAAA6N,EAAO/E,GAAO,IAAAC,EAAA+E,EAAAtB,EAAAuB,EAAAC,EAAAC,EAAA9S,EAAAmQ,EAAAuB,EAAAd,EAAAF,EAAAI,EAAAE,EAAA+B,EAAAzB,EAAAC,EAAAC,EAAAwB,EAAA,OAAAxS,IAAAa,MAAA,SAAA4R,GAAA,cAAAA,EAAA3N,KAAA2N,EAAArP,MAAA,OAGN,OAFfgK,EAAYD,EAAQjO,SAASqO,gBAC7B4E,EAAS/E,EAAUsF,cAAc,CAAC,MAAM,IACvClF,KAAK,SAASiF,EAAArP,KAAA,EAEf+J,EAAQM,OAAM,OAEhBoD,EAAY,GACZuB,EAAc,CAAC,EACfC,EAAa,CAAC,EACdC,EAAa,CAAC,EAET9S,EAAI,EAAC,aAAEA,EAAI2S,EAAOQ,MAAMpT,QAAM,CAAAkT,EAAArP,KAAA,SAMb,OALlBuM,EAAQwC,EAAOQ,MAAMnT,IACrBgO,KAAK,mBACXmC,EAAMO,KAAK1C,KAAK,+DAEV0D,EAAYvB,EAAMuB,WACd1D,KAAK,SAASiF,EAAArP,KAAA,GAElB+J,EAAQM,OAAM,YAEhBkC,EAAMvD,KAAKzB,OAAQ,CAAF8H,EAAArP,KAAA,SASE,GARfgN,EAAQT,EAAMO,KAAKE,OAAS,UAC5BF,EAAOP,EAAMO,KAAK9L,MAAQ,UAC1BkM,EAAOX,EAAMO,KAAKI,MAAQ,UAEhC8B,EAAYhC,IAAUgC,EAAYhC,IAAU,GAAK,EACjDiC,EAAWnC,IAASmC,EAAWnC,IAAS,GAAK,EAC7CoC,EAAWhC,IAASgC,EAAWhC,IAAS,GAAK,EAEzCE,EAAe,KACfU,EAAUyB,MAAMpT,OAAS,GAAC,CAAAkT,EAAArP,KAAA,SAED,OADrBmP,EAAWrB,EAAUyB,MAAM,IACxBzI,KAAKsD,KAAK,QAAQiF,EAAArP,KAAA,GACrB+J,EAAQM,OAAM,QACpB+C,EAAe+B,EAASrI,KAAKkC,KAAK,QAGpCyE,EAAUjN,KAAK,CACbwI,KAAMuD,EAAMvD,KAAKzB,OACjBsF,KAAMN,EAAMO,KAAKD,KACjBE,OAAQR,EAAMO,KAAKC,OACnBmB,UAAoC,SAAzB3B,EAAMO,KAAKoB,UACtBlB,MAAOA,EACPC,eAAgBV,EAAMO,KAAKG,eAC3BqB,YAAaR,EAAUyB,MAAMpT,OAAS,EACtCiR,aAAcA,EACdgB,SAAUtB,EACVuB,SAAUnB,EACVC,UAAWZ,EAAMY,UAAYZ,EAAMY,UAAUqC,QAAU,KACvDC,YAAmB,IAANrT,EACbsT,aAAoB,IAANtT,EACduT,YAAmB,IAANvT,EACbwT,WAAYxT,IAAM2S,EAAOQ,MAAMpT,OAAS,IACvC,QA3CkCC,IAAGiT,EAAArP,KAAA,iBA+CtC0N,EAAY9S,OAAOiV,QAAQb,GAAac,QAAO,SAACtV,EAAGgC,GAAC,OAAKhC,EAAE,GAAKgC,EAAE,GAAKhC,EAAIgC,CAAC,IAAE,GAC9EmR,EAAW/S,OAAOiV,QAAQZ,GAAYa,QAAO,SAACtV,EAAGgC,GAAC,OAAKhC,EAAE,GAAKgC,EAAE,GAAKhC,EAAIgC,CAAC,IAAE,GAC5EoR,EAAWhT,OAAOiV,QAAQX,GAAYY,QAAO,SAACtV,EAAGgC,GAAC,OAAKhC,EAAE,GAAKgC,EAAE,GAAKhC,EAAIgC,CAAC,IAAE,GAElFuT,EAAiBtC,EAAWC,EAAWC,EAAUC,GAC3CwB,EAAmB5B,EAAmBC,EAAWC,EAAWC,EAAUC,GAC5E7H,QAAQiK,IAAIZ,GAAkB,yBAAAC,EAAAxN,OAAA,GAAAiN,EAAA,KAC/B,gBAAAmB,GAAA,OAAApB,EAAAtM,MAAA,KAAAD,UAAA,EAlEa,IAkEZ,wBAAAsM,EAAA/M,OAAA,GAAA8M,EAAA,KACHD,EAAAnM,MAAA,KAAAD,UAAA,CAED,SAASyN,EAAiBtC,EAAWC,EAAWC,EAAUC,GACxD,IAAMsC,EAAUpU,SAASyH,eAAe,sBACpC4M,EAAO,sCAEX1C,EAAU7O,SAAQ,SAAC0N,EAAMjD,GACvB8G,GAAQ,aAAJtW,OAAiBwP,EAAQ,EAAC,MAAAxP,OAAKyS,EAAKtD,KAAI,SAC5CmH,GAAQ,cAAJtW,OACAyS,EAAKO,KAAO,IAAM,IAAG,WAAAhT,OAAUyS,EAAKmD,YAAc,kBAAoB,GAAE,gBAAA5V,OACxEyS,EAAKS,OAAS,IAAM,IAAG,WAAAlT,OAAUyS,EAAKoD,aAAe,kBAAoB,GAAE,gBAAA7V,OAC3EyS,EAAK4B,UAAY,IAAM,IAAG,6BAAArU,OAC1ByS,EAAKU,QAAUU,GAA4B,YAAfpB,EAAKU,MAAsB,kBAAHnT,OAAqByS,EAAKU,OAAU,kBAAiB,gBAAAnT,OACzGyS,EAAKW,eAAiB,gBAAHpT,OAAmByS,EAAKW,gBAAmB,kBAAiB,gBAAApT,OAC/EyS,EAAKgC,YAAc,kBAAHzU,OAAqByS,EAAKc,cAAYvT,OAAGyS,EAAKsD,WAAa,qBAAuB,IAAO,eAAc,gBAAA/V,OACvHyS,EAAK8B,WAAaT,GAA8B,YAAlBrB,EAAK8B,SAAyB,mBAAHvU,OAAsByS,EAAK8B,UAAQ,qBAAAvU,OAA0B8T,GAAU,gBAAA9T,OAChIyS,EAAK+B,UAAYT,GAA8B,YAAlBtB,EAAK+B,SAAyB,oBAAHxU,OAAuByS,EAAK+B,UAAQ,sBAAAxU,OAA2B+T,GAAU,gBAAA/T,OACjIyS,EAAKa,UAAY,aAAHtT,OAAgByS,EAAKa,WAAStT,OAAGyS,EAAKqD,YAAc,kBAAoB,IAAO,eAAc,aAEjH,IAEAO,EAAQ1M,UAAY2M,CACtB,CAkGC,SAKc9E,EAAY+E,EAAAC,GAAA,OAAAC,EAAA/N,MAAC,KAADD,UAAA,UAAAgO,IAuC1B,OAvC0BA,EAAAjO,EAAAzF,IAAAqE,MAA3B,SAAAsP,EAA4BxG,EAASC,GAAS,IAAA+E,EAAAtB,EAAA+C,EAAAC,EAAAlE,EAAAuB,EAAAV,EAAA+B,EAAA,OAAAvS,IAAAa,MAAA,SAAAiT,GAAA,cAAAA,EAAAhP,KAAAgP,EAAA1Q,MAAA,OAEvB,OADf+O,EAAS/E,EAAUsF,cAAc,CAAC,MAAM,IACvClF,KAAK,SAASsG,EAAA1Q,KAAA,EACf+J,EAAQM,OAAM,OAEhBoD,EAAY,GAAE+C,EAAAG,EAEA5B,EAAOQ,OAAKmB,EAAAhP,KAAA,EAAA8O,EAAApS,IAAA,WAAAqS,EAAAD,EAAAnW,KAAAgF,KAAE,CAAFqR,EAAA1Q,KAAA,SAIJ,OAJjBuM,EAAKkE,EAAA1T,OACNqN,KAAK,mBACXmC,EAAMO,KAAK1C,KAAK,8CACV0D,EAAYvB,EAAMuB,WACd1D,KAAK,SAASsG,EAAA1Q,KAAA,GAElB+J,EAAQM,OAAM,YAEhBkC,EAAMvD,KAAKzB,OAAQ,CAAFmJ,EAAA1Q,KAAA,SACE,GAAjBoN,EAAe,KACfU,EAAUyB,MAAMpT,OAAS,GAAC,CAAAuU,EAAA1Q,KAAA,SAED,OADrBmP,EAAWrB,EAAUyB,MAAM,IACxBzI,KAAKsD,KAAK,QAAQsG,EAAA1Q,KAAA,GACrB+J,EAAQM,OAAM,QACpB+C,EAAe+B,EAASrI,KAAKkC,KAAK,QAGpCyE,EAAUjN,KAAK,CACbwI,KAAMuD,EAAMvD,KAAKzB,OACjBsF,KAAMN,EAAMO,KAAKD,KACjBE,OAAQR,EAAMO,KAAKC,OACnBC,MAAOT,EAAMO,KAAKE,OAAS,QAC3BC,eAAgBV,EAAMO,KAAKG,gBAAkB,QAC7CC,KAAMX,EAAMO,KAAKI,MAAQ,KACzBoB,YAAaR,EAAUyB,MAAMpT,OAAS,EACtCiR,aAAcA,EACdD,UAAWZ,EAAMY,UAAYZ,EAAMY,UAAY,OAC9C,QAAAuD,EAAA1Q,KAAA,gBAAA0Q,EAAA1Q,KAAA,iBAAA0Q,EAAAhP,KAAA,GAAAgP,EAAA5K,GAAA4K,EAAA,SAAAF,EAAApV,EAAAsV,EAAA5K,IAAA,eAAA4K,EAAAhP,KAAA,GAAA8O,EAAArS,IAAAuS,EAAAzO,OAAA,mBAAAyO,EAAA9Q,OAAA,SAIA6N,GAAS,yBAAAiD,EAAA7O,OAAA,GAAA0O,EAAA,0BACjBhO,MAAA,KAAAD,UAAA,CAwBA,SAASsO,IACN,IA0BM/L,EA1Ba/I,SAASyH,eAAe,WAChCC,UAAY,weAUvBO,EAAE,iBAAiBI,QAAQ,CACvBC,MAAO,OACPC,YAAa,oBACdC,GAAG,mBAAmB,WACrBC,YAAW,WACPR,EAAE,0BAA0BhJ,IAAI,GAAGyJ,OACvC,GAAG,EACP,IAEA1I,SAASyH,eAAe,eAAeiF,QAAUqI,EACjDC,IAKMjM,EAASd,EAAE,iBACFpB,KAAKC,MAAMC,aAAaC,QAAQ,WAAa,MACrDlE,SAAQ,SAAAmG,GACX,IAAMC,EAAS,IAAIC,OAAOF,EAAM/D,KAAM+D,EAAMG,IAAI,GAAO,GACvDL,EAAOM,OAAOH,EAClB,IACAH,EAAOZ,QAAQ,SATnB,CAYA,SAAS4M,IACL,IAAM7P,EAAOlF,SAASyH,eAAe,eAAexG,MAC9CgI,EAAQhB,EAAE,iBAAiBC,MAC3BgF,EAAOlN,SAASyH,eAAe,eAAexG,MACpD,GAAIiE,GAAQ+D,GAASiE,EAAM,CACvB,IAAMhG,EAAUN,IAChBM,EAAQxC,KAAK,CAAEQ,KAAAA,EAAM+D,MAAAA,EAAOiE,KAAAA,IAC5BjG,EAAYC,GACZ8N,IACAlI,IACA9M,SAASyH,eAAe,eAAexG,MAAQ,GAC/CgH,EAAE,iBAAiBC,IAAI,MAAMC,QAAQ,UACrCnI,SAASyH,eAAe,eAAexG,MAAQ,EACnD,CACJ,CAEA,SAAS+T,IACL,IAAMC,EAAOjV,SAASyH,eAAe,eAC/BP,EAAUN,IAChBqO,EAAKvN,UAAY,GACjBR,EAAQpE,SAAQ,SAACmK,EAAQM,GACrB,IAAM2H,EAAMlV,SAASmV,cAAc,OACnCD,EAAIE,UAAY,OAChBF,EAAIxN,UAAY,yBAAH3J,OACCkP,EAAO/H,KAAI,eAAAnH,OAAckP,EAAOhE,MAAK,kFAAAlL,OACkBwP,EAAK,2GAAAxP,OACHwP,EAAK,qGAAAxP,OACNwP,EAAK,gCAE3E0H,EAAKI,YAAYH,EACrB,IAEAD,EAAKK,iBAAiB,kBAAkBxS,SAAQ,SAAAyS,GAC5CA,EAAO7I,QAAU,kBAYzB,SAAsBa,GAClB,IAAMrG,EAAUN,IAChBM,EAAQsO,OAAOjI,EAAO,GACtBtG,EAAYC,GACZ8N,IACAlI,GACJ,CAlB+B2I,CAAaF,EAAOG,QAAQnI,MAAM,CAC7D,IAEA0H,EAAKK,iBAAiB,gBAAgBxS,SAAQ,SAAAyS,GAC1CA,EAAO7I,QAAU,kBAgBLa,EAhBsBgI,EAAOG,QAAQnI,MAkB/CN,EADUrG,IACO2G,GACvBvN,SAASyH,eAAe,eAAexG,MAAQgM,EAAO/H,KACtD+C,EAAE,iBAAiBC,IAAI+E,EAAOhE,OAAOd,QAAQ,UAC7CnI,SAASyH,eAAe,eAAexG,MAAQgM,EAAOC,KACtDlN,SAASyH,eAAe,eAAegG,YAAc,uBACrDzN,SAASyH,eAAe,eAAeiF,QAAU,YAOrD,SAAsBa,GAClB,IAAMrI,EAAOlF,SAASyH,eAAe,eAAexG,MAC9CgI,EAAQhB,EAAE,iBAAiBC,MAC3BgF,EAAOlN,SAASyH,eAAe,eAAexG,MACpD,GAAIiE,GAAQ+D,GAASiE,EAAM,CACvB,IAAMhG,EAAUN,IAChBM,EAAQqG,GAAS,CAAErI,KAAAA,EAAM+D,MAAAA,EAAOiE,KAAAA,GAChCjG,EAAYC,GACZ8N,IACAlI,IACA9M,SAASyH,eAAe,eAAexG,MAAQ,GAC/CgH,EAAE,iBAAiBC,IAAI,MAAMC,QAAQ,UACrCnI,SAASyH,eAAe,eAAexG,MAAQ,EACnD,CACJ,CApBQ0U,CAAapI,GACbvN,SAASyH,eAAe,eAAegG,YAAc,mBACrDzN,SAASyH,eAAe,eAAeiF,QAAUqI,CACrD,GAXJ,IAAoBxH,EAEVN,CAlBqD,CAC3D,IAEAgI,EAAKK,iBAAiB,qBAAqBxS,SAAQ,SAAAyS,GAC/CA,EAAO7I,QAAU,kBA0CAa,EA1CsBgI,EAAOG,QAAQnI,MA4CpDN,EADUrG,IACO2G,GACvBvN,SAASyH,eAAe,eAAexG,MAAQgM,EAAO/H,KAAO,WAC7D+C,EAAE,iBAAiBC,IAAI,MAAMC,QAAQ,UACrCnI,SAASyH,eAAe,eAAexG,MAAQgM,EAAOC,KACtDlN,SAASyH,eAAe,eAAegG,YAAc,wBACrDzN,SAASyH,eAAe,eAAeiF,QAAUqI,GAPrD,IAAyBxH,EAEfN,CA5C0D,CAChE,GACJ,CAuDA2I,OAAOC,SAAQ,SAACC,GACRA,EAAKC,OAASH,OAAOI,SAASnI,OAC9BxB,IACAyI,IACAzN,IAER,IAKArH,SAASiW,iBAAiB,oBAAoB,WAC1C5J,IACAyI,IACAzN,GACJ,uDC98BI6O,EAA6B,IAAIC,IAAI,cAEH,IAAyCD","sources":["webpack://office-addin-taskpane-js/./node_modules/html-loader/dist/runtime/getUrl.js","webpack://office-addin-taskpane-js/webpack/bootstrap","webpack://office-addin-taskpane-js/webpack/runtime/compat get default export","webpack://office-addin-taskpane-js/webpack/runtime/define property getters","webpack://office-addin-taskpane-js/webpack/runtime/global","webpack://office-addin-taskpane-js/webpack/runtime/hasOwnProperty shorthand","webpack://office-addin-taskpane-js/webpack/runtime/publicPath","webpack://office-addin-taskpane-js/webpack/runtime/jsonp chunk loading","webpack://office-addin-taskpane-js/./src/taskpane/taskpane.js","webpack://office-addin-taskpane-js/./src/taskpane/taskpane.html"],"sourcesContent":["\"use strict\";\n\nmodule.exports = function (url, options) {\n  if (!options) {\n    // eslint-disable-next-line no-param-reassign\n    options = {};\n  }\n  if (!url) {\n    return url;\n  }\n\n  // eslint-disable-next-line no-underscore-dangle, no-param-reassign\n  url = String(url.__esModule ? url.default : url);\n  if (options.hash) {\n    // eslint-disable-next-line no-param-reassign\n    url += options.hash;\n  }\n  if (options.maybeNeedQuotes && /[\\t\\n\\f\\r \"'=<>`]/.test(url)) {\n    return \"\\\"\".concat(url, \"\\\"\");\n  }\n  return url;\n};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t926: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function"," function getPrompts() {\r\n    return JSON.parse(localStorage.getItem('prompts') || '[]');\r\n}\r\n\r\n function savePrompts(prompts) {\r\n    localStorage.setItem('prompts', JSON.stringify(prompts));\r\n}\r\n\r\n function getLastSelectedPromptIndex() {\r\n    return parseInt(localStorage.getItem('lastSelectedPromptIndex') || '-1', 10);\r\n}\r\n\r\n function saveLastSelectedPromptIndex(index) {\r\n    localStorage.setItem('lastSelectedPromptIndex', index.toString());\r\n}\r\n\r\n\r\n\r\n function initSettings() {\r\n    const settingsTab = document.getElementById('settings');\r\n    settingsTab.innerHTML = `\r\n        <div class=\"mt-3\">\r\n            <label for=\"api-key\" class=\"form-label\">API Ключ:</label>\r\n            <input type=\"password\" id=\"api-key\" class=\"form-control\">\r\n        </div>\r\n        <div class=\"mt-3\">\r\n            <label for=\"formatting-model\" class=\"form-label\">Модель для форматирования:</label>\r\n            <select id=\"formatting-model\" class=\"form-select\"></select>\r\n        </div>\r\n        <div class=\"mt-3 form-check\">\r\n            <input type=\"checkbox\" class=\"form-check-input\" id=\"apply-formatting\">\r\n            <label class=\"form-check-label\" for=\"apply-formatting\">Применять форматирование</label>\r\n        </div>\r\n    `;\r\n\r\n    document.getElementById('api-key').onchange = saveApiKey;\r\n    document.getElementById('formatting-model').onchange = saveFormattingModel;\r\n    document.getElementById('apply-formatting').onchange = saveApplyFormatting;\r\n    loadModels();\r\n    loadSettings();\r\n\r\n    // Инициализируем Select2 для выбора модели форматирования\r\n    $('#formatting-model').select2({\r\n        width: '100%',\r\n        placeholder: 'Выберите модель для форматирования',\r\n    }).on('select2:opening', function() {\r\n        setTimeout(() => {\r\n            $('.select2-search__field').get(0).focus();\r\n        }, 0);\r\n    });\r\n}\r\n\r\n\r\nfunction saveFormattingModel() {\r\n    const formattingModel = document.getElementById('formatting-model').value;\r\n    localStorage.setItem('formattingModel', formattingModel);\r\n}\r\n\r\nfunction saveApplyFormatting() {\r\n    const applyFormatting = document.getElementById('apply-formatting').checked;\r\n    localStorage.setItem('applyFormatting', applyFormatting);\r\n}\r\n\r\nfunction loadSettings() {\r\n    const apiKey = localStorage.getItem('apiKey') || '';\r\n    const formattingModel = localStorage.getItem('formattingModel') || 'openai/gpt-4-mini';\r\n    const applyFormatting = localStorage.getItem('applyFormatting') === 'true';\r\n\r\n    document.getElementById('api-key').value = apiKey;\r\n    $('#formatting-model').val(formattingModel).trigger('change');\r\n    document.getElementById('apply-formatting').checked = applyFormatting;\r\n}\r\n\r\n\r\n\r\n function populateModelSelectAI(models) {\r\n    const promptModelSelect = $('#prompt-model');\r\n    const formattingModelSelect = $('#formatting-model');\r\n\r\n    [promptModelSelect, formattingModelSelect].forEach(select => {\r\n        select.empty();\r\n        models.forEach(model => {\r\n            const option = new Option(model.name, model.id, false, false);\r\n            select.append(option);\r\n        });\r\n        select.trigger('change');\r\n    });\r\n\r\n    // Устанавливаем значение по умолчанию для formatting-model\r\n    const defaultModel = models.find(model => model.id === 'openai/gpt-4-mini') || models[0];\r\n    if (defaultModel) {\r\n        formattingModelSelect.val(defaultModel.id).trigger('change');\r\n    }\r\n\r\n    // Загружаем сохраненное значение, если оно есть\r\n    const savedModel = localStorage.getItem('formattingModel');\r\n    if (savedModel && models.some(model => model.id === savedModel)) {\r\n        formattingModelSelect.val(savedModel).trigger('change');\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction saveApiKey() {\r\n    const apiKey = document.getElementById('api-key').value;\r\n    localStorage.setItem('apiKey', apiKey);\r\n}\r\n\r\n\r\n\r\n\r\nconst OPENROUTER_BASE_URL = \"https://openrouter.ai/api/v1\";\r\n\r\n async function loadModels() {\r\n    try {\r\n        const response = await axios.get(`${OPENROUTER_BASE_URL}/models`);\r\n        const models = response.data.data;\r\n        localStorage.setItem('models', JSON.stringify(models));\r\n        populateModelSelectAI(models);\r\n    } catch (error) {\r\n        console.error('Error loading models:', error);\r\n    }\r\n}\r\n\r\n async function generateTextWithAI(systemPrompt, userPrompt, model, signal) {\r\n    const apiKey = localStorage.getItem('apiKey');\r\n\r\n    try {\r\n        const response = await fetch(`${OPENROUTER_BASE_URL}/chat/completions`, {\r\n            method: 'POST',\r\n            signal,\r\n            headers: {\r\n                'Authorization': `Bearer ${apiKey}`,\r\n                'Content-Type': 'application/json',\r\n                'HTTP-Referer': 'https://www.office.com',\r\n                'X-Title': 'Word AI Assistant',\r\n            },\r\n            body: JSON.stringify({\r\n                model: model,\r\n                messages: [\r\n                    { role: \"system\", content: systemPrompt },\r\n                    { role: \"user\", content: userPrompt }\r\n                ],\r\n            }),\r\n        });\r\n\r\n        if (!response.ok) {\r\n            throw new Error(`HTTP error! status: ${response.status}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n        return data.choices[0].message.content.trim();\r\n    } catch (error) {\r\n        console.error('Error in generateTextWithAI:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\n async function generateTextWithAIFormat(systemPrompt, userPrompt, model, signal) {\r\n    const apiKey = localStorage.getItem('apiKey');\r\n\r\n    try {\r\n        const response = await fetch(`${OPENROUTER_BASE_URL}/chat/completions`, {\r\n            method: 'POST',\r\n            signal,\r\n            headers: {\r\n                'Authorization': `Bearer ${apiKey}`,\r\n                'Content-Type': 'application/json',\r\n                'HTTP-Referer': 'https://www.office.com',\r\n                'X-Title': 'Word AI Assistant',\r\n            },\r\n            body: JSON.stringify({\r\n                model: model,\r\n                messages: [\r\n                    { role: \"system\", content: systemPrompt },\r\n                    { role: \"user\", content: userPrompt }\r\n                ],\r\n            }),\r\n        });\r\n\r\n        if (!response.ok) {\r\n            throw new Error(`HTTP error! status: ${response.status}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n        return data.choices[0].message.content.trim();\r\n    } catch (error) {\r\n        console.error('Error in generateTextWithAI:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\n\r\n\r\nlet originalText = \"\";\r\nlet currentController = null;\r\nlet lastSelectedPrompt = null;\r\n\r\n function initHome() {\r\n  const homeTab = document.getElementById('home');\r\n  homeTab.innerHTML = `\r\n      <select id=\"prompt-select\" class=\"form-select mt-3\"></select>\r\n      <div id=\"selected-model\" class=\"mt-2\"></div>\r\n      <button id=\"replace-text\" class=\"btn btn-primary mt-3\" disabled>Заменить выделенный текст</button>\r\n      <button id=\"cancel-request\" class=\"btn btn-secondary mt-3\" style=\"display: none;\">Отменить запрос</button>\r\n      <button id=\"show-selected-text\" class=\"btn btn-info mt-3\">Показать информацию о выделенном тексте</button>\r\n      <!-- <button id=\"apply-tricks\" class=\"btn btn-warning mt-3\">Применить приколы</button>\r\n      <button id=\"repeat-styles\" class=\"btn btn-primary mt-3\">Повтор стилей</button> -->\r\n      <div id=\"selected-text-info\" class=\"mt-3\"></div>\r\n  `;\r\n\r\n  $('#prompt-select').select2({\r\n      width: '100%',\r\n      placeholder: 'Выберите промпт',\r\n      templateResult: formatPrompt,\r\n      templateSelection: formatPromptSelection,\r\n  });\r\n\r\n  document.getElementById(\"replace-text\").onclick = replaceSelectedText;\r\n  document.getElementById(\"cancel-request\").onclick = cancelRequest;\r\n  document.getElementById(\"show-selected-text\").onclick = showSelectedText;\r\n  // document.getElementById(\"apply-tricks\").onclick = applyTricks;\r\n  // document.getElementById(\"repeat-styles\").onclick = repeatStyles;\r\n\r\n  updatePromptSelect();\r\n  setInterval(checkSelection, 1000);\r\n}\r\n\r\nfunction formatPrompt(prompt) {\r\n    if (!prompt.id) {\r\n        return prompt.text;\r\n    }\r\n    const prompts = getPrompts();\r\n    const promptData = prompts[prompt.id];\r\n    return $(`<span>${promptData.name} (${promptData.model})</span>`);\r\n}\r\n\r\nfunction formatPromptSelection(prompt) {\r\n    if (!prompt.id) {\r\n        return prompt.text;\r\n    }\r\n    const prompts = getPrompts();\r\n    const promptData = prompts[prompt.id];\r\n    return promptData.name;\r\n}\r\n\r\n function updatePromptSelect() {\r\n    const select = $('#prompt-select');\r\n    const modelDiv = document.getElementById('selected-model');\r\n    const prompts = getPrompts();\r\n    select.empty();\r\n    select.append(new Option('Выберите промпт', '', true, true));\r\n    const lastSelectedPromptIndex = getLastSelectedPromptIndex();\r\n    prompts.forEach((prompt, index) => {\r\n        const option = new Option(prompt.name, index, false, index === lastSelectedPromptIndex);\r\n        select.append(option);\r\n    });\r\n    select.trigger('change');\r\n    const promptIndex = lastSelectedPromptIndex >= 0 && lastSelectedPromptIndex < prompts.length ? lastSelectedPromptIndex : null;\r\n    lastSelectedPrompt = promptIndex !== null ? prompts[promptIndex] : null;\r\n    modelDiv.textContent = lastSelectedPrompt ? `Модель: ${lastSelectedPrompt.model}` : '';\r\n    document.getElementById(\"replace-text\").disabled = !lastSelectedPrompt;\r\n    select.on('change', function() {\r\n        const newPromptIndex = $(this).val();\r\n        lastSelectedPrompt = newPromptIndex ? prompts[newPromptIndex] : null;\r\n        saveLastSelectedPromptIndex(newPromptIndex || -1);\r\n        modelDiv.textContent = lastSelectedPrompt ? `Модель: ${lastSelectedPrompt.model}` : '';\r\n        document.getElementById(\"replace-text\").disabled = !lastSelectedPrompt;\r\n    });\r\n}\r\n\r\nfunction checkSelection() {\r\n    Word.run(async (context) => {\r\n        const selection = context.document.getSelection();\r\n        selection.load(\"text\");\r\n        await context.sync();\r\n\r\n        const replaceButton = document.getElementById(\"replace-text\");\r\n        if (selection.text.trim().length > 0) {\r\n            replaceButton.disabled = false;\r\n        } else {\r\n            replaceButton.disabled = true;\r\n        }\r\n    });\r\n}\r\n\r\nasync function replaceSelectedText() {\r\n  Word.run(async (context) => {\r\n      const selection = context.document.getSelection();\r\n      selection.load(\"text\");\r\n      await context.sync();\r\n\r\n      originalText = selection.text;\r\n\r\n      if (!lastSelectedPrompt) return;\r\n\r\n      document.getElementById(\"replace-text\").style.display = \"none\";\r\n      document.getElementById(\"cancel-request\").style.display = \"inline-block\";\r\n\r\n      try {\r\n          currentController = new AbortController();\r\n\r\n          const applyFormatting = localStorage.getItem('applyFormatting') === 'true';\r\n          const formattingModel = localStorage.getItem('formattingModel') || 'openai/gpt-4-mini';\r\n          let formattingInfo = [];\r\n\r\n          if (applyFormatting) {\r\n              formattingInfo = await getWordsInfo(context, selection);\r\n          }\r\n\r\n          const systemPrompt = `You are an AI assistant specialized in text processing and formatting. Your task is to generate text based on user prompts and, when required, update formatting information for the generated text. Always provide responses in the requested format.`;\r\n\r\n          const userPrompt = `${lastSelectedPrompt.text}\\n\\nUser provided the following text: \"${originalText}\"${applyFormatting ? `\\n\\nFormatting information: ${JSON.stringify(formattingInfo)}` : ''}`;\r\n\r\n          const generatedText = await generateTextWithAI(systemPrompt, userPrompt, lastSelectedPrompt.model, currentController.signal);\r\n\r\n          if (applyFormatting) {\r\n              const secondSystemPrompt = `You are an AI assistant specialized in text formatting. Your task is to update formatting information for modified text while preserving the original styles as much as possible. Always return your response as a valid JSON array.`;\r\n\r\n              const secondUserPrompt = `\r\nOriginal text: \"${originalText}\"\r\nModified text: \"${generatedText}\"\r\nOriginal formatting information: ${JSON.stringify(formattingInfo)}\r\n\r\nTask: Update the formatting information to match the new text while preserving the original styles and formats. Return ONLY the updated formatting information array in valid JSON format.\r\n\r\nInstructions:\r\n1. Analyze the original and modified texts.\r\n2. Create a new array of formatting information for the modified text.\r\n3. Preserve the original formatting styles as much as possible.\r\n4. Ensure the number of elements in the array matches the number of words in the modified text.\r\n5. Return ONLY the JSON array, without any additional text or explanation.\r\n\r\nThe JSON array should contain objects with the following possible properties:\r\n- text: string (required) - the word from the modified text\r\n- bold: boolean\r\n- italic: boolean\r\n- underline: boolean\r\n- color: string (e.g., \"#FF0000\" for red)\r\n- highlightColor: string (e.g., \"yellow\")\r\n- size: number\r\n- fontName: string\r\n- hyperlink: string (URL)\r\n- footnoteText: string\r\n\r\nExample of a valid response:\r\n[\r\n{\"text\": \"This\", \"bold\": true, \"color\": \"#0000FF\"},\r\n{\"text\": \"is\", \"italic\": true},\r\n{\"text\": \"an\", \"underline\": true},\r\n{\"text\": \"example\", \"size\": 14, \"fontName\": \"Arial\"},\r\n{\"text\": \"with\", \"highlightColor\": \"yellow\"},\r\n{\"text\": \"formatting\", \"hyperlink\": \"https://example.com\"},\r\n{\"text\": \"applied\", \"footnoteText\": \"This is a footnote example\"}\r\n]\r\n\r\nEnsure your response is a valid JSON array and includes formatting information for all words in the modified text.`;\r\n\r\n              let updatedFormattingInfo;\r\n              try {\r\n                  const formattingResponse = await generateTextWithAIFormat(secondSystemPrompt, secondUserPrompt, formattingModel, currentController.signal);\r\n                  updatedFormattingInfo = JSON.parse(formattingResponse);\r\n\r\n                  if (!Array.isArray(updatedFormattingInfo)) {\r\n                      throw new Error(\"Response is not an array\");\r\n                  }\r\n              } catch (error) {\r\n                  console.error(\"Error parsing formatting information:\", error);\r\n                  selection.insertText(generatedText, Word.InsertLocation.replace);\r\n                  return;\r\n              }\r\n\r\n              await applyFormattedText(context, selection, generatedText, updatedFormattingInfo);\r\n          } else {\r\n              selection.insertText(generatedText, Word.InsertLocation.replace);\r\n          }\r\n      } catch (error) {\r\n          if (error.name !== 'AbortError') {\r\n              console.error('Error:', error);\r\n          }\r\n      } finally {\r\n          document.getElementById(\"cancel-request\").style.display = \"none\";\r\n          document.getElementById(\"replace-text\").style.display = \"inline-block\";\r\n          currentController = null;\r\n      }\r\n  });\r\n}\r\n\r\n\r\nasync function applyFormattedText(context, selection, newText, formattingInfo) {\r\n  selection.clear();\r\n  await context.sync();\r\n\r\n  const words = newText.split(/\\s+/);\r\n  let wordIndex = 0;\r\n\r\n  for (let i = 0; i < words.length; i++) {\r\n      let word = words[i];\r\n      let range = selection.insertText(word, Word.InsertLocation.end);\r\n\r\n      if (wordIndex < formattingInfo.length) {\r\n          const wordInfo = formattingInfo[wordIndex];\r\n\r\n          if (wordInfo.bold !== undefined) range.font.bold = wordInfo.bold;\r\n          if (wordInfo.italic !== undefined) range.font.italic = wordInfo.italic;\r\n          if (wordInfo.color) range.font.color = wordInfo.color;\r\n          if (wordInfo.highlightColor) range.font.highlightColor = wordInfo.highlightColor;\r\n          if (wordInfo.size) range.font.size = wordInfo.size;\r\n\r\n          if (wordInfo.hyperlink) {\r\n              range.hyperlink = wordInfo.hyperlink;\r\n          }\r\n\r\n          if (wordInfo.footnoteText) {\r\n              let newFootnote = range.insertFootnote();\r\n              newFootnote.body.insertText(wordInfo.footnoteText, Word.InsertLocation.start);\r\n          }\r\n\r\n          wordIndex++;\r\n      }\r\n\r\n      if (i < words.length - 1) {\r\n          selection.insertText(\" \", Word.InsertLocation.end);\r\n      }\r\n\r\n      await context.sync();\r\n  }\r\n}\r\n\r\n\r\nfunction cancelRequest() {\r\n    if (currentController) {\r\n        currentController.abort();\r\n        document.getElementById(\"cancel-request\").style.display = \"none\";\r\n        document.getElementById(\"replace-text\").style.display = \"inline-block\";\r\n    }\r\n}\r\n\r\nasync function applyTricks() {\r\n  await Word.run(async (context) => {\r\n    const selection = context.document.getSelection();\r\n    selection.load(\"text\");\r\n    await context.sync();\r\n\r\n    const words = selection.text.trim().split(/\\s+/);\r\n    if (words.length < 4) {\r\n      console.log(\"Выделите минимум 4 слова\");\r\n      return;\r\n    }\r\n\r\n    const range = selection.getRange();\r\n    range.clear();\r\n    await context.sync();\r\n\r\n    for (let i = 0; i < words.length; i++) {\r\n      const word = words[i];\r\n      let wordRange = range.insertText(word + \" \", Word.InsertLocation.end);\r\n\r\n      wordRange.font.bold = false;\r\n      wordRange.font.italic = false;\r\n      wordRange.font.color = 'black';\r\n      wordRange.font.highlightColor = \"white\";\r\n      wordRange.font.size = 11;\r\n\r\n      if (i === 0) {\r\n        wordRange.font.bold = true;\r\n      }\r\n\r\n      if (i === 1) {\r\n        wordRange.font.italic = true;\r\n      }\r\n\r\n      if (i === 2) {\r\n        wordRange.hyperlink = \"https://www.example.com\";\r\n      }\r\n\r\n      if (i === 3) {\r\n        wordRange.font.color = 'red';\r\n      }\r\n\r\n      if (i === 4) {\r\n        wordRange.font.highlightColor = 'yellow';\r\n      }\r\n\r\n      if (i === 5) {\r\n        wordRange.font.size = 16;\r\n      }\r\n\r\n      if (i === words.length - 1) {\r\n        let footnote = wordRange.insertFootnote();\r\n        footnote.body.insertText(\"Это пример сноски\", Word.InsertLocation.start);\r\n      }\r\n\r\n      await context.sync();\r\n    }\r\n  });\r\n}\r\n\r\nfunction formatSpecialWords(wordsInfo, baseColor, baseFont, baseSize) {\r\n  let formattedText = [];\r\n  let footnotes = [];\r\n\r\n  wordsInfo.forEach((word, index) => {\r\n    let wordData = { text: word.text };\r\n    let hasSpecialFormatting = false;\r\n\r\n    let formatting = {};\r\n\r\n    if (word.bold === true || word.bold === null) {\r\n      formatting.bold = true;\r\n      hasSpecialFormatting = true;\r\n    }\r\n    if (word.italic) {\r\n      formatting.italic = true;\r\n      hasSpecialFormatting = true;\r\n    }\r\n    if (word.underline) {\r\n      formatting.underline = true;\r\n      hasSpecialFormatting = true;\r\n    }\r\n    if (word.color !== baseColor && word.color !== \"\") {\r\n      formatting.color = word.color;\r\n      hasSpecialFormatting = true;\r\n    }\r\n    if (word.highlightColor && word.highlightColor !== null) {\r\n      formatting.highlight = word.highlightColor;\r\n      hasSpecialFormatting = true;\r\n    }\r\n    if (word.fontName !== baseFont && word.fontName !== \"\") {\r\n      formatting.font = word.fontName;\r\n      hasSpecialFormatting = true;\r\n    }\r\n    if (word.fontSize != baseSize && word.fontSize !== \"\" && word.fontSize !== null) {\r\n      formatting.size = word.fontSize;\r\n      hasSpecialFormatting = true;\r\n    }\r\n    if (word.hyperlink) {\r\n      formatting.hyperlink = word.hyperlink;\r\n      hasSpecialFormatting = true;\r\n    }\r\n\r\n    if (Object.keys(formatting).length > 0) {\r\n      wordData.formatting = formatting;\r\n    }\r\n\r\n    if (word.hasFootnote) {\r\n      wordData.footnoteId = index + 1;\r\n      footnotes.push({\r\n        id: index + 1,\r\n        text: word.footnoteText,\r\n        relatedWordIndex: formattedText.length\r\n      });\r\n      hasSpecialFormatting = true;\r\n    }\r\n\r\n    if (hasSpecialFormatting) {\r\n      formattedText.push(wordData);\r\n    }\r\n  });\r\n\r\n  return {\r\n    formattedText: formattedText,\r\n    footnotes: footnotes,\r\n    baseFormatting: {\r\n      color: baseColor,\r\n      font: baseFont,\r\n      size: baseSize\r\n    }\r\n  };\r\n}\r\n\r\nasync function showSelectedText() {\r\n  await Word.run(async (context) => {\r\n    const selection = context.document.getSelection();\r\n    const ranges = selection.getTextRanges([\" \"], false);\r\n    ranges.load(\"items\");\r\n\r\n    await context.sync();\r\n\r\n    let wordsInfo = [];\r\n    let colorCounts = {};\r\n    let fontCounts = {};\r\n    let sizeCounts = {};\r\n\r\n    for (let i = 0; i < ranges.items.length; i++) {\r\n      const range = ranges.items[i];\r\n      range.load(\"text, hyperlink\");\r\n      range.font.load(\"bold, italic, underline, color, highlightColor, name, size\");\r\n\r\n      const footnotes = range.footnotes;\r\n      footnotes.load(\"items\");\r\n\r\n      await context.sync();\r\n\r\n      if (range.text.trim()) {\r\n        const color = range.font.color || \"default\";\r\n        const font = range.font.name || \"default\";\r\n        const size = range.font.size || \"default\";\r\n\r\n        colorCounts[color] = (colorCounts[color] || 0) + 1;\r\n        fontCounts[font] = (fontCounts[font] || 0) + 1;\r\n        sizeCounts[size] = (sizeCounts[size] || 0) + 1;\r\n\r\n        let footnoteText = \"\";\r\n        if (footnotes.items.length > 0) {\r\n          const footnote = footnotes.items[0];\r\n          footnote.body.load(\"text\");\r\n          await context.sync();\r\n          footnoteText = footnote.body.text;\r\n        }\r\n\r\n        wordsInfo.push({\r\n          text: range.text.trim(),\r\n          bold: range.font.bold,\r\n          italic: range.font.italic,\r\n          underline: range.font.underline !== \"None\",\r\n          color: color,\r\n          highlightColor: range.font.highlightColor,\r\n          hasFootnote: footnotes.items.length > 0,\r\n          footnoteText: footnoteText,\r\n          fontName: font,\r\n          fontSize: size,\r\n          hyperlink: range.hyperlink ? range.hyperlink.address : null,\r\n          isFirstWord: i === 0,\r\n          isSecondWord: i === 1,\r\n          isThirdWord: i === 2,\r\n          isLastWord: i === ranges.items.length - 1\r\n        });\r\n      }\r\n    }\r\n\r\n    const baseColor = Object.entries(colorCounts).reduce((a, b) => a[1] > b[1] ? a : b)[0];\r\n    const baseFont = Object.entries(fontCounts).reduce((a, b) => a[1] > b[1] ? a : b)[0];\r\n    const baseSize = Object.entries(sizeCounts).reduce((a, b) => a[1] > b[1] ? a : b)[0];\r\n\r\n    displayWordsInfo(wordsInfo, baseColor, baseFont, baseSize);\r\n    const formattedMassive = formatSpecialWords(wordsInfo, baseColor, baseFont, baseSize);\r\n    console.log(formattedMassive);\r\n  });\r\n}\r\n\r\nfunction displayWordsInfo(wordsInfo, baseColor, baseFont, baseSize) {\r\n  const infoDiv = document.getElementById(\"selected-text-info\");\r\n  let html = \"<h3>Анализ выделенного текста:</h3>\";\r\n\r\n  wordsInfo.forEach((word, index) => {\r\n    html += `<h4>Слово ${index + 1}: ${word.text}</h4>`;\r\n    html += `<p>\r\n      ${word.bold ? \"✅\" : \"❌\"} Жирный${word.isFirstWord ? \" (Первое слово)\" : \"\"}<br>\r\n      ${word.italic ? \"✅\" : \"❌\"} Курсив${word.isSecondWord ? \" (Второе слово)\" : \"\"}<br>\r\n      ${word.underline ? \"✅\" : \"❌\"} Подчеркнутый<br>\r\n      ${word.color !== baseColor && word.color !== \"default\" ? `✅ Особый цвет: ${word.color}` : \"❌ Основной цвет\"}<br>\r\n      ${word.highlightColor ? `✅ Выделение: ${word.highlightColor}` : \"❌ Без выделения\"}<br>\r\n      ${word.hasFootnote ? `✅ Есть сноска: ${word.footnoteText}${word.isLastWord ? \" (Последнее слово)\" : \"\"}` : \"❌ Без сноски\"}<br>\r\n      ${word.fontName !== baseFont && word.fontName !== \"default\" ? `✅ Особый шрифт: ${word.fontName}` : `❌ Основной шрифт: ${baseFont}`}<br>\r\n      ${word.fontSize != baseSize && word.fontSize !== \"default\" ? `✅ Особый размер: ${word.fontSize}` : `❌ Основной размер: ${baseSize}`}<br>\r\n      ${word.hyperlink ? `✅ Ссылка: ${word.hyperlink}${word.isThirdWord ? \" (Третье слово)\" : \"\"}` : \"❌ Без ссылки\"}\r\n    </p>`;\r\n  });\r\n\r\n  infoDiv.innerHTML = html;\r\n}\r\n\r\nasync function repeatStyles() {\r\n  await Word.run(async (context) => {\r\n    const selection = context.document.getSelection();\r\n    selection.load(\"text\");\r\n    await context.sync();\r\n\r\n    const originalText = selection.text;\r\n    let wordsInfo = await getWordsInfo(context, selection);\r\n\r\n    const baseFormatting = getBaseFormatting(wordsInfo);\r\n    wordsInfo = optimizeWordsInfo(wordsInfo, baseFormatting);\r\n    wordsInfo = wordsInfo.filter(wordInfo => Object.keys(wordInfo).length > 1);\r\n\r\n    console.log(wordsInfo);\r\n    console.log(\"Base formatting:\", baseFormatting);\r\n\r\n    selection.clear();\r\n    await context.sync();\r\n\r\n    const words = originalText.split(/\\s+/);\r\n    let wordIndex = 0;\r\n\r\n    for (let i = 0; i < words.length; i++) {\r\n      let word = words[i];\r\n\r\n      // if (word == \"\u0002\") {\r\n      //   word = \" \"\r\n      // }\r\n\r\n      let range = selection.insertText(word, Word.InsertLocation.end);\r\n\r\n      // Применяем базовое форматирование\r\n      range.font.bold = baseFormatting.bold;\r\n      range.font.italic = baseFormatting.italic;\r\n      range.font.color = baseFormatting.color;\r\n      range.font.highlightColor = baseFormatting.highlightColor;\r\n      range.font.size = baseFormatting.size;\r\n\r\n      if (wordIndex < wordsInfo.length && wordsInfo[wordIndex].text === word) {\r\n        const wordInfo = wordsInfo[wordIndex];\r\n\r\n        if (wordInfo.bold !== undefined) range.font.bold = wordInfo.bold;\r\n        if (wordInfo.italic !== undefined) range.font.italic = wordInfo.italic;\r\n        if (wordInfo.color) range.font.color = wordInfo.color;\r\n        if (wordInfo.highlightColor) range.font.highlightColor = wordInfo.highlightColor;\r\n        if (wordInfo.size) range.font.size = wordInfo.size;\r\n\r\n        if (wordInfo.hyperlink) {\r\n          range.hyperlink = wordInfo.hyperlink;\r\n        }\r\n\r\n        if (wordInfo.footnoteText) {\r\n          let newFootnote = range.insertFootnote(wordInfo.footnoteText.replace(\"\u0002\", ' '), Word.InsertLocation.start);\r\n          // newFootnote.body.insertText(wordInfo.footnoteText.replace(\"\u0002\", ''), Word.InsertLocation.start);\r\n          word = word.replace(\"\u0002\", ' ');\r\n        }\r\n\r\n\r\n\r\n        wordIndex++;\r\n      }\r\n\r\n      if (i < words.length - 1) {\r\n        selection.insertText(\" \", Word.InsertLocation.end);\r\n      }\r\n\r\n      await context.sync();\r\n    }\r\n  });\r\n}\r\n\r\nfunction getBaseFormatting(wordsInfo) {\r\n  return {\r\n    bold: getMostCommonValue(wordsInfo, 'bold'),\r\n    italic: getMostCommonValue(wordsInfo, 'italic'),\r\n    color: getMostCommonValue(wordsInfo, 'color'),\r\n    highlightColor: getMostCommonValue(wordsInfo, 'highlightColor'),\r\n    size: getMostCommonValue(wordsInfo, 'size')\r\n  };\r\n}\r\n\r\nfunction optimizeWordsInfo(wordsInfo, baseFormatting) {\r\n  return wordsInfo.map(word => {\r\n    const optimizedWord = { text: word.text };\r\n\r\n    if (word.bold !== baseFormatting.bold) optimizedWord.bold = word.bold;\r\n    if (word.italic !== baseFormatting.italic) optimizedWord.italic = word.italic;\r\n    if (word.color !== baseFormatting.color) optimizedWord.color = word.color;\r\n    if (word.highlightColor !== baseFormatting.highlightColor) optimizedWord.highlightColor = word.highlightColor;\r\n    if (word.size !== baseFormatting.size) optimizedWord.size = word.size;\r\n\r\n    if (word.hasFootnote) optimizedWord.footnoteText = word.footnoteText;\r\n    if (word.hyperlink) optimizedWord.hyperlink = word.hyperlink;\r\n\r\n    return optimizedWord;\r\n  });\r\n}\r\n\r\n\r\n\r\n\r\nasync function getWordsInfo(context, selection) {\r\n  const ranges = selection.getTextRanges([\" \"], false);\r\n  ranges.load(\"items\");\r\n  await context.sync();\r\n\r\n  let wordsInfo = [];\r\n\r\n  for (let range of ranges.items) {\r\n    range.load(\"text, hyperlink\");\r\n    range.font.load(\"bold, italic, color, highlightColor, size\");\r\n    const footnotes = range.footnotes;\r\n    footnotes.load(\"items\");\r\n\r\n    await context.sync();\r\n\r\n    if (range.text.trim()) {\r\n      let footnoteText = \"\";\r\n      if (footnotes.items.length > 0) {\r\n        const footnote = footnotes.items[0];\r\n        footnote.body.load(\"text\");\r\n        await context.sync();\r\n        footnoteText = footnote.body.text;\r\n      }\r\n\r\n      wordsInfo.push({\r\n        text: range.text.trim(),\r\n        bold: range.font.bold,\r\n        italic: range.font.italic,\r\n        color: range.font.color || \"black\",\r\n        highlightColor: range.font.highlightColor || \"white\",\r\n        size: range.font.size || \"11\",\r\n        hasFootnote: footnotes.items.length > 0,\r\n        footnoteText: footnoteText,\r\n        hyperlink: range.hyperlink ? range.hyperlink : null\r\n      });\r\n    }\r\n  }\r\n\r\n  return wordsInfo;\r\n}\r\n\r\n\r\nfunction getMostCommonValue(array, property) {\r\n  const counts = {};\r\n  let maxCount = 0;\r\n  let mostCommonValue;\r\n\r\n  array.forEach(item => {\r\n    const value = item[property];\r\n    counts[value] = (counts[value] || 0) + 1;\r\n    if (counts[value] > maxCount) {\r\n      maxCount = counts[value];\r\n      mostCommonValue = value;\r\n    }\r\n  });\r\n\r\n  return mostCommonValue;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n function initPrompts() {\r\n    const promptsTab = document.getElementById('prompts');\r\n    promptsTab.innerHTML = `\r\n        <div class=\"mt-3\">\r\n            <input type=\"text\" id=\"prompt-name\" class=\"form-control\" placeholder=\"Название промпта\">\r\n            <select id=\"prompt-model\" class=\"form-select mt-2\"></select>\r\n            <textarea id=\"prompt-text\" class=\"form-control mt-2\" rows=\"5\" placeholder=\"Текст промпта\"></textarea>\r\n            <button id=\"save-prompt\" class=\"btn btn-primary mt-2\">Сохранить промпт</button>\r\n        </div>\r\n        <div id=\"prompt-list\" class=\"mt-3\"></div>\r\n    `;\r\n\r\n    $('#prompt-model').select2({\r\n        width: '100%',\r\n        placeholder: 'Выберите модель',\r\n    }).on('select2:opening', function() {\r\n        setTimeout(() => {\r\n            $('.select2-search__field').get(0).focus();\r\n        }, 0);\r\n    });\r\n\r\n    document.getElementById(\"save-prompt\").onclick = savePrompt;\r\n    updatePromptList();\r\n    populateModelSelect();\r\n}\r\n\r\nfunction populateModelSelect() {\r\n    const select = $('#prompt-model');\r\n    const models = JSON.parse(localStorage.getItem('models') || '[]');\r\n    models.forEach(model => {\r\n        const option = new Option(model.name, model.id, false, false);\r\n        select.append(option);\r\n    });\r\n    select.trigger('change');\r\n}\r\n\r\nfunction savePrompt() {\r\n    const name = document.getElementById('prompt-name').value;\r\n    const model = $('#prompt-model').val();\r\n    const text = document.getElementById('prompt-text').value;\r\n    if (name && model && text) {\r\n        const prompts = getPrompts();\r\n        prompts.push({ name, model, text });\r\n        savePrompts(prompts);\r\n        updatePromptList();\r\n        updatePromptSelect();\r\n        document.getElementById('prompt-name').value = '';\r\n        $('#prompt-model').val(null).trigger('change');\r\n        document.getElementById('prompt-text').value = '';\r\n    }\r\n}\r\n\r\nfunction updatePromptList() {\r\n    const list = document.getElementById('prompt-list');\r\n    const prompts = getPrompts();\r\n    list.innerHTML = '';\r\n    prompts.forEach((prompt, index) => {\r\n        const div = document.createElement('div');\r\n        div.className = 'mt-2';\r\n        div.innerHTML = `\r\n            <strong>${prompt.name}</strong> (${prompt.model})\r\n            <button class=\"btn btn-sm btn-primary edit-prompt\" data-index=\"${index}\">Редактировать</button>\r\n            <button class=\"btn btn-sm btn-info duplicate-prompt\" data-index=\"${index}\">Дубликат</button>\r\n            <button class=\"btn btn-sm btn-danger delete-prompt\" data-index=\"${index}\">Удалить</button>\r\n        `;\r\n        list.appendChild(div);\r\n    });\r\n\r\n    list.querySelectorAll('.delete-prompt').forEach(button => {\r\n        button.onclick = () => deletePrompt(button.dataset.index);\r\n    });\r\n\r\n    list.querySelectorAll('.edit-prompt').forEach(button => {\r\n        button.onclick = () => editPrompt(button.dataset.index);\r\n    });\r\n\r\n    list.querySelectorAll('.duplicate-prompt').forEach(button => {\r\n        button.onclick = () => duplicatePrompt(button.dataset.index);\r\n    });\r\n}\r\n\r\nfunction deletePrompt(index) {\r\n    const prompts = getPrompts();\r\n    prompts.splice(index, 1);\r\n    savePrompts(prompts);\r\n    updatePromptList();\r\n    updatePromptSelect();\r\n}\r\n\r\nfunction editPrompt(index) {\r\n    const prompts = getPrompts();\r\n    const prompt = prompts[index];\r\n    document.getElementById('prompt-name').value = prompt.name;\r\n    $('#prompt-model').val(prompt.model).trigger('change');\r\n    document.getElementById('prompt-text').value = prompt.text;\r\n    document.getElementById('save-prompt').textContent = 'Обновить промпт';\r\n    document.getElementById('save-prompt').onclick = () => {\r\n        updatePrompt(index);\r\n        document.getElementById('save-prompt').textContent = 'Сохранить промпт';\r\n        document.getElementById('save-prompt').onclick = savePrompt;\r\n    };\r\n}\r\n\r\nfunction updatePrompt(index) {\r\n    const name = document.getElementById('prompt-name').value;\r\n    const model = $('#prompt-model').val();\r\n    const text = document.getElementById('prompt-text').value;\r\n    if (name && model && text) {\r\n        const prompts = getPrompts();\r\n        prompts[index] = { name, model, text };\r\n        savePrompts(prompts);\r\n        updatePromptList();\r\n        updatePromptSelect();\r\n        document.getElementById('prompt-name').value = '';\r\n        $('#prompt-model').val(null).trigger('change');\r\n        document.getElementById('prompt-text').value = '';\r\n    }\r\n}\r\n\r\nfunction duplicatePrompt(index) {\r\n    const prompts = getPrompts();\r\n    const prompt = prompts[index];\r\n    document.getElementById('prompt-name').value = prompt.name + ' (копия)';\r\n    $('#prompt-model').val(null).trigger('change');\r\n    document.getElementById('prompt-text').value = prompt.text;\r\n    document.getElementById('save-prompt').textContent = 'Сохранить промпт';\r\n    document.getElementById('save-prompt').onclick = savePrompt;\r\n}\r\n\r\n\r\n\r\n\r\n// \r\n\r\nOffice.onReady((info) => {\r\n    if (info.host === Office.HostType.Word) {\r\n        initHome();\r\n        initPrompts();\r\n        initSettings();\r\n    }\r\n});\r\n\r\n\r\n// Also add on loaded webpage\r\n//\r\ndocument.addEventListener(\"DOMContentLoaded\", function () {\r\n    initHome();\r\n    initPrompts();\r\n    initSettings();\r\n});\r\n","// Imports\nimport ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___ from \"../../node_modules/html-loader/dist/runtime/getUrl.js\";\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"./taskpane.js\", import.meta.url);\n// Module\nvar ___HTML_LOADER_REPLACEMENT_0___ = ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___(___HTML_LOADER_IMPORT_0___);\nvar code = \"<!DOCTYPE html> <html> <head> <meta charset=\\\"UTF-8\\\"/> <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=Edge\\\"/> <title>Замена текста</title> <link rel=\\\"stylesheet\\\" href=\\\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/css/bootstrap.min.css\\\"> <link rel=\\\"stylesheet\\\" href=\\\"https://cdn.jsdelivr.net/npm/bootstrap-icons@1.5.0/font/bootstrap-icons.css\\\"> <link href=\\\"https://cdn.jsdelivr.net/npm/select2@4.0.13/dist/css/select2.min.css\\\" rel=\\\"stylesheet\\\"/> </head> <body> <div class=\\\"container mt-3\\\"> <ul class=\\\"nav nav-tabs\\\" id=\\\"myTab\\\" role=\\\"tablist\\\"> <li class=\\\"nav-item\\\" role=\\\"presentation\\\"> <a class=\\\"nav-link active\\\" id=\\\"home-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#home\\\" role=\\\"tab\\\" aria-controls=\\\"home\\\" aria-selected=\\\"true\\\">Основное</a> </li> <li class=\\\"nav-item\\\" role=\\\"presentation\\\"> <a class=\\\"nav-link\\\" id=\\\"prompts-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#prompts\\\" role=\\\"tab\\\" aria-controls=\\\"prompts\\\" aria-selected=\\\"false\\\">Промпты</a> </li> <li class=\\\"nav-item\\\" role=\\\"presentation\\\"> <a class=\\\"nav-link\\\" id=\\\"settings-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#settings\\\" role=\\\"tab\\\" aria-controls=\\\"settings\\\" aria-selected=\\\"false\\\">Настройки</a> </li> </ul> <div class=\\\"tab-content\\\" id=\\\"myTabContent\\\"> <div class=\\\"tab-pane fade show active\\\" id=\\\"home\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"home-tab\\\"></div> <div class=\\\"tab-pane fade\\\" id=\\\"prompts\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"prompts-tab\\\"></div> <div class=\\\"tab-pane fade\\\" id=\\\"settings\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"settings-tab\\\"></div> </div> </div> <\" + \"script src=\\\"https://code.jquery.com/jquery-3.5.1.min.js\\\"><\" + \"/script> <\" + \"script src=\\\"https://cdn.jsdelivr.net/npm/select2@4.0.13/dist/js/select2.min.js\\\"><\" + \"/script> <\" + \"script src=\\\"https://cdnjs.cloudflare.com/ajax/libs/axios/0.21.1/axios.min.js\\\"><\" + \"/script> <\" + \"script src=\\\"https://appsforoffice.microsoft.com/lib/1/hosted/office.js\\\"><\" + \"/script> <\" + \"script src=\\\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/js/bootstrap.bundle.min.js\\\"><\" + \"/script> <\" + \"script src=\\\"\" + ___HTML_LOADER_REPLACEMENT_0___ + \"\\\"><\" + \"/script> </body> </html> \";\n// Exports\nexport default code;"],"names":["module","exports","url","options","String","__esModule","default","hash","maybeNeedQuotes","test","concat","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","m","n","getter","d","a","definition","key","o","Object","defineProperty","enumerable","get","g","globalThis","this","Function","e","window","obj","prop","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","document","currentScript","src","scripts","getElementsByTagName","length","i","Error","replace","p","b","baseURI","self","href","_regeneratorRuntime","t","r","value","Symbol","iterator","c","asyncIterator","u","toStringTag","define","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","v","values","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","getPrompts","JSON","parse","localStorage","getItem","savePrompts","prompts","setItem","stringify","initSettings","apiKey","formattingModel","applyFormatting","getElementById","innerHTML","onchange","saveApiKey","saveFormattingModel","saveApplyFormatting","_loadModels","loadModels","$","val","trigger","checked","select2","width","placeholder","on","setTimeout","focus","populateModelSelectAI","models","promptModelSelect","formattingModelSelect","select","empty","model","option","Option","id","append","defaultModel","find","savedModel","some","OPENROUTER_BASE_URL","_callee2","response","_context2","axios","data","t0","console","error","generateTextWithAI","_x","_x2","_x3","_x4","_generateTextWithAI","_callee3","systemPrompt","userPrompt","signal","_context3","fetch","headers","body","messages","role","content","ok","status","json","choices","message","trim","generateTextWithAIFormat","_x5","_x6","_x7","_x8","_generateTextWithAIFormat","_callee4","_context4","originalText","currentController","lastSelectedPrompt","initHome","templateResult","formatPrompt","templateSelection","formatPromptSelection","onclick","replaceSelectedText","cancelRequest","showSelectedText","updatePromptSelect","setInterval","checkSelection","prompt","text","promptData","modelDiv","lastSelectedPromptIndex","parseInt","index","promptIndex","textContent","disabled","newPromptIndex","toString","Word","run","_ref","_callee","context","selection","replaceButton","_context","getSelection","load","sync","_x9","_replaceSelectedText","_callee6","_context6","_ref2","_callee5","formattingInfo","generatedText","secondUserPrompt","updatedFormattingInfo","formattingResponse","_context5","style","display","AbortController","getWordsInfo","Array","isArray","insertText","InsertLocation","applyFormattedText","t1","_x16","_x10","_x11","_x12","_x13","_applyFormattedText","_callee7","newText","words","wordIndex","word","range","wordInfo","_context7","clear","split","end","bold","font","italic","color","highlightColor","size","hyperlink","footnoteText","insertFootnote","start","abort","formatSpecialWords","wordsInfo","baseColor","baseFont","baseSize","formattedText","footnotes","wordData","hasSpecialFormatting","formatting","underline","highlight","fontName","fontSize","hasFootnote","footnoteId","relatedWordIndex","baseFormatting","_showSelectedText","_callee11","_context11","_ref4","_callee10","ranges","colorCounts","fontCounts","sizeCounts","footnote","formattedMassive","_context10","getTextRanges","items","address","isFirstWord","isSecondWord","isThirdWord","isLastWord","entries","reduce","displayWordsInfo","log","_x18","infoDiv","html","_x14","_x15","_getWordsInfo","_callee14","_iterator","_step","_context14","_createForOfIteratorHelper","initPrompts","savePrompt","updatePromptList","list","div","createElement","className","appendChild","querySelectorAll","button","splice","deletePrompt","dataset","updatePrompt","Office","onReady","info","host","HostType","addEventListener","___HTML_LOADER_IMPORT_0___","URL"],"sourceRoot":""}