{"version":3,"file":"taskpane.js","mappings":"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","sources":["webpack://office-addin-taskpane-js/./node_modules/html-loader/dist/runtime/getUrl.js","webpack://office-addin-taskpane-js/webpack/bootstrap","webpack://office-addin-taskpane-js/webpack/runtime/compat get default export","webpack://office-addin-taskpane-js/webpack/runtime/define property getters","webpack://office-addin-taskpane-js/webpack/runtime/global","webpack://office-addin-taskpane-js/webpack/runtime/hasOwnProperty shorthand","webpack://office-addin-taskpane-js/webpack/runtime/publicPath","webpack://office-addin-taskpane-js/webpack/runtime/jsonp chunk loading","webpack://office-addin-taskpane-js/./src/taskpane/taskpane.js","webpack://office-addin-taskpane-js/./src/taskpane/taskpane.html"],"sourcesContent":["\"use strict\";\n\nmodule.exports = function (url, options) {\n  if (!options) {\n    // eslint-disable-next-line no-param-reassign\n    options = {};\n  }\n  if (!url) {\n    return url;\n  }\n\n  // eslint-disable-next-line no-underscore-dangle, no-param-reassign\n  url = String(url.__esModule ? url.default : url);\n  if (options.hash) {\n    // eslint-disable-next-line no-param-reassign\n    url += options.hash;\n  }\n  if (options.maybeNeedQuotes && /[\\t\\n\\f\\r \"'=<>`]/.test(url)) {\n    return \"\\\"\".concat(url, \"\\\"\");\n  }\n  return url;\n};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t926: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","// storage.js\nconst PREFIX = 'acula';\n\n function getPrompts() {\n    return JSON.parse(localStorage.getItem(`${PREFIX}prompts`) || '[]');\n}\n\n function savePrompts(prompts) {\n    localStorage.setItem(`${PREFIX}prompts`, JSON.stringify(prompts));\n}\n\n function getLastSelectedPromptIndex() {\n    return parseInt(localStorage.getItem('lastSelectedPromptIndex') || '-1', 10);\n}\n\n function saveLastSelectedPromptIndex(index) {\n    localStorage.setItem('lastSelectedPromptIndex', index.toString());\n}\n\n// Новые функции для мультипромптов\n function getLastSelectedMultipromptIndices() {\n    const indices = localStorage.getItem('lastSelectedMultipromptIndices');\n    return indices ? JSON.parse(indices) : [];\n}\n\n function saveLastSelectedMultipromptIndices(indices) {\n    localStorage.setItem('lastSelectedMultipromptIndices', JSON.stringify(indices));\n}\n\n// wordInfo.js\n\n async function getWordsInfo(context, selection) {\n    const ranges = selection.getTextRanges([\" \"], false);\n    ranges.load(\"items\");\n    await context.sync();\n\n    let wordsInfo = [];\n\n    console.log(ranges)\n\n    for (let range of ranges.items) {\n        range.load(\"text, hyperlink\");\n        range.font.load(\"bold, italic, underline, color, highlightColor, size, name\");\n        const footnotes = range.footnotes;\n        footnotes.load(\"items\");\n\n        await context.sync();\n\n        if (range.text.trim()) {\n            let footnoteText = \"\";\n            if (footnotes.items.length > 0) {\n                const footnote = footnotes.items[0];\n                footnote.body.load(\"text\");\n                await context.sync();\n                footnoteText = footnote.body.text;\n            }\n\n            wordsInfo.push({\n                text: range.text.trim(),\n                bold: range.font.bold,\n                italic: range.font.italic,\n                underline: range.font.underline !== \"None\",\n                color: range.font.color || null,\n                highlightColor: range.font.highlightColor || null,\n                size: range.font.size || null,\n                fontName: range.font.name || null,\n                footnoteText: footnoteText || null,\n                hyperlink: range.hyperlink ? range.hyperlink : null\n            });\n        }\n    }\n\n    return wordsInfo;\n}\n\n async function applyFormattedText(context, selection, newText, formattingDifferences) {\n    selection.clear();\n    await context.sync();\n\n    // Устанавливаем базовое форматирование для всего выделения\n    const defaultFormatting = calculateDefaultFormattingFromDifferences(formattingDifferences);\n\n    selection.font.bold = defaultFormatting.bold;\n    selection.font.italic = defaultFormatting.italic;\n    selection.font.underline = defaultFormatting.underline ? 'Single' : 'None';\n    selection.font.color = defaultFormatting.color || 'black';\n    selection.font.highlightColor = defaultFormatting.highlightColor || null;\n    selection.font.size = defaultFormatting.size || 11;\n    selection.font.name = defaultFormatting.fontName || 'Calibri';\n    await context.sync();\n\n    const words = newText.split(/\\s+/);\n\n    // Проверяем, есть ли валидные данные форматирования\n    let formattingMap = new Map();\n    if (Array.isArray(formattingDifferences) && formattingDifferences.length > 0) {\n        // Создаём словарь уникальных слов для быстрого доступа\n        formattingDifferences.forEach((item, index) => {\n            const key = `${item.text}-${index}`;\n            formattingMap.set(key, item);\n        });\n    } else {\n        // Если нет валидных данных форматирования, выводим предупреждение (опционально)\n        console.warn('Нет валидных данных форматирования. Применяется только базовое форматирование.');\n    }\n\n    let wordIndex = 0;\n\n    for (let i = 0; i < words.length; i++) {\n        let word = words[i];\n\n        // Перед вставкой каждого слова сбрасываем форматирование к базовым настройкам\n        let range = selection.insertText(word, Word.InsertLocation.end);\n\n        // Применение базового форматирования к range\n        // ...\n\n        // Проверяем, есть ли уникальное форматирование для текущего слова\n        const key = `${word}-${wordIndex}`;\n        const wordInfo = formattingMap.get(key);\n\n        if (wordInfo) {\n            // Применяем уникальные свойства форматирования\n            for (let prop in wordInfo) {\n                if (prop !== 'text') {\n                    if (prop === 'bold') range.font.bold = wordInfo[prop];\n                    if (prop === 'italic') range.font.italic = wordInfo[prop];\n                    if (prop === 'underline') range.font.underline = wordInfo[prop] ? 'Single' : 'None';\n                    if (prop === 'color') range.font.color = wordInfo[prop];\n                    if (prop === 'highlightColor') range.font.highlightColor = wordInfo[prop];\n                    if (prop === 'size') range.font.size = wordInfo[prop];\n                    if (prop === 'fontName') range.font.name = wordInfo[prop];\n                    if (prop === 'hyperlink') range.hyperlink = wordInfo[prop];\n                    if (prop === 'footnoteText' && wordInfo[prop]) {\n                        let newFootnote = range.insertFootnote();\n                        newFootnote.body.insertText(wordInfo[prop], Word.InsertLocation.start);\n                    }\n                }\n            }\n            wordIndex++;\n        }\n\n\n        // Вставляем пробел после каждого слова, кроме последнего\n        if (i < words.length - 1) {\n            selection.insertText(\" \", Word.InsertLocation.end);\n        }\n\n        await context.sync();\n    }\n}\n\n\n// Вспомогательная функция для создания словаря форматирования\nfunction createFormattingMap(formattingDifferences) {\n    const map = {};\n    formattingDifferences.forEach((item, index) => {\n        const key = `${item.text}-${index}`; // Комбинация текста слова и его позиции\n        map[key] = item;\n    });\n    return map;\n}\n\n// Вспомогательная функция для вычисления базового форматирования из отличий\nfunction calculateDefaultFormattingFromDifferences(formattingDifferences) {\n    // В реальности базовое форматирование мы уже знаем\n    // Если нет, можно установить значения по умолчанию\n    return {\n        bold: false,\n        italic: false,\n        underline: false,\n        color: 'black',\n        highlightColor: null,\n        size: 11,\n        fontName: 'Calibri',\n    };\n}\n\n async function showSelectedTextInfo() {\n    await Word.run(async (context) => {\n        const selection = context.document.getSelection();\n        const ranges = selection.getTextRanges([\" \"], false);\n        // console.log(ranges)\n        ranges.load(\"items\");\n\n        await context.sync();\n\n        let wordsInfo = [];\n        let colorCounts = {};\n        let fontCounts = {};\n        let sizeCounts = {};\n\n        for (let i = 0; i < ranges.items.length; i++) {\n            const range = ranges.items[i];\n            range.load(\"text, hyperlink\");\n            range.font.load(\"bold, italic, underline, color, highlightColor, name, size\");\n\n            const footnotes = range.footnotes;\n            footnotes.load(\"items\");\n\n            await context.sync();\n\n            if (range.text.trim()) {\n                const color = range.font.color || \"default\";\n                const font = range.font.name || \"default\";\n                const size = range.font.size || \"default\";\n\n                colorCounts[color] = (colorCounts[color] || 0) + 1;\n                fontCounts[font] = (fontCounts[font] || 0) + 1;\n                sizeCounts[size] = (sizeCounts[size] || 0) + 1;\n\n                let footnoteText = \"\";\n                if (footnotes.items.length > 0) {\n                    const footnote = footnotes.items[0];\n                    footnote.body.load(\"text\");\n                    await context.sync();\n                    footnoteText = footnote.body.text;\n                }\n\n                wordsInfo.push({\n                    text: range.text.trim(),\n                    bold: range.font.bold,\n                    italic: range.font.italic,\n                    underline: range.font.underline !== \"None\",\n                    color: color,\n                    highlightColor: range.font.highlightColor,\n                    hasFootnote: footnotes.items.length > 0,\n                    footnoteText: footnoteText,\n                    fontName: font,\n                    fontSize: size,\n                    hyperlink: range.hyperlink ? range.hyperlink.address : null,\n                });\n            }\n        }\n\n        const baseColor = getMostCommonValue(colorCounts);\n        const baseFont = getMostCommonValue(fontCounts);\n        const baseSize = getMostCommonValue(sizeCounts);\n\n        displayWordsInfo(wordsInfo, baseColor, baseFont, baseSize);\n    });\n}\n\nfunction getMostCommonValue(counts) {\n    return Object.entries(counts).reduce((a, b) => a[1] >= b[1] ? a : b)[0];\n}\n\n function displayWordsInfo(wordsInfo, baseColor, baseFont, baseSize) {\n    const infoDiv = document.getElementById(\"fuuga_selected-text-info\");\n    let html = \"<h3>Анализ выделенного текста:</h3>\";\n\n    wordsInfo.forEach((word, index) => {\n        html += `<h4>Слово ${index + 1}: ${word.text}</h4>`;\n        html += `<p>\n          ${word.bold ? \"✅\" : \"❌\"} <strong>Жирный</strong><br>\n          ${word.italic ? \"✅\" : \"❌\"} <em>Курсив</em><br>\n          ${word.underline ? \"✅\" : \"❌\"} <u>Подчеркнутый</u><br>\n          ${word.color !== baseColor && word.color !== \"default\" ? `✅ Особый цвет: ${word.color}` : \"❌ Основной цвет\"}<br>\n          ${word.highlightColor ? `✅ Выделение: ${word.highlightColor}` : \"❌ Без выделения\"}<br>\n          ${word.footnoteText ? `✅ Есть сноска: ${word.footnoteText}` : \"❌ Без сноски\"}<br>\n          ${word.fontName !== baseFont && word.fontName !== \"default\" ? `✅ Особый шрифт: ${word.fontName}` : `❌ Основной шрифт: ${baseFont}`}<br>\n          ${word.size != baseSize && word.size !== \"default\" ? `✅ Особый размер: ${word.size}` : `❌ Основной размер: ${baseSize}`}<br>\n          ${word.hyperlink ? `✅ Ссылка: <a href=\"${word.hyperlink}\" target=\"_blank\">${word.hyperlink}</a>` : \"❌ Без ссылки\"}\n        </p>`;\n    });\n\n    infoDiv.innerHTML = html;\n}\n\n// Функция для получения слов с уникальным форматированием\nfunction getSpecialFormattingWords(formattingInfo, defaultFormatting) {\n    return formattingInfo\n        .map(item => {\n            const differences = { text: item.text };\n            let hasDifferences = false;\n            for (let prop in defaultFormatting) {\n                if (item[prop] !== undefined && item[prop] !== defaultFormatting[prop]) {\n                    differences[prop] = item[prop];\n                    hasDifferences = true;\n                }\n            }\n            return hasDifferences ? differences : null;\n        })\n        .filter(item => item !== null);\n}\n\n\nasync function getUpdatedFormattingInfo(originalFormattingInfo, originalText, modifiedText, formattingModel, temperature, maxTokens, signal) {\n    const apiKey = localStorage.getItem('apiKey');\n\n    // Вычисляем базовое форматирование из исходного текста\n    const defaultFormatting = calculateDefaultFormatting(originalFormattingInfo);\n\n    // Находим слова с уникальным форматированием в исходном тексте\n    const specialWords = getSpecialFormattingWords(originalFormattingInfo, defaultFormatting);\n\n    // Формируем системный и пользовательский промпты для модели\n    const systemPrompt = `Ты - AI помощник по форматированию текста. Твоя задача - сопоставить слова с уникальным форматированием из исходного текста с соответствующими словами в изменённом тексте, даже если слова изменились (например, при переводе). Верни список слов из изменённого текста с их уникальным форматированием.`;\n\n    const userPrompt = `\nИсходный текст: \"${originalText}\"\nИзменённый текст: \"${modifiedText}\"\n\nСписок слов с уникальным форматированием из исходного текста:\n${JSON.stringify(specialWords, null, 2)}\n\nБазовое форматирование (применяется ко всему тексту по умолчанию):\n${JSON.stringify(defaultFormatting, null, 2)}\n\nТвоя задача:\n1. Найди соответствия для слов с уникальным форматированием в изменённом тексте, учитывая возможные изменения слов (например, перевод).\n2. Верни список слов из изменённого текста с применимым уникальным форматированием.\n3. Если какое-то уникальное форматирование не применимо в изменённом тексте, опусти его.\n\nВерни **только** валидный JSON-массив, где каждый объект содержит:\n- text: string - слово из изменённого текста с уникальным форматированием\n- свойства форматирования, отличающиеся от базовых значений\n\nПример ответа:\n[\n  { \"text\": \"Hi\", \"italic\": true },\n  { \"text\": \"Danil\", \"bold\": true },\n  { \"text\": \"20\", \"size\": 20 }\n]\n`;\n\n    const requestBody = {\n        model: formattingModel,\n        messages: [\n            { role: \"system\", content: systemPrompt },\n            { role: \"user\", content: userPrompt }\n        ],\n        temperature: temperature,\n        max_tokens: maxTokens,\n    };\n\n    try {\n        const response = await fetch(\"https://openrouter.ai/api/v1/chat/completions\", {\n            method: 'POST',\n            headers: {\n                'Authorization': `Bearer ${apiKey}`,\n                'Content-Type': 'application/json',\n                'HTTP-Referer': 'https://www.office.com',\n                'X-Title': 'Word Text Formatter',\n            },\n            body: JSON.stringify(requestBody),\n            signal: signal,\n        });\n\n        if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n        }\n\n        const data = await response.json();\n        console.log('Ответ от сервера (форматирование):', data.choices[0].message.content.trim());\n\n        const formattingResponse = data.choices[0].message.content.trim();\n\n        // Парсим ответ модели\n        let updatedFormattingInfo;\n        try {\n            updatedFormattingInfo = JSON.parse(formattingResponse);\n            if (!Array.isArray(updatedFormattingInfo)) {\n                throw new Error(\"Response is not an array\");\n            }\n        } catch (parseError) {\n            console.error('Ошибка при парсинге ответа модели:', parseError);\n            throw parseError;\n        }\n\n        return updatedFormattingInfo;\n\n    } catch (error) {\n        if (error.name === 'AbortError') {\n            console.log('Запрос был отменен.');\n            throw error;\n        } else {\n            console.error('Error in getUpdatedFormattingInfo:', error);\n            throw error;\n        }\n    }\n}\n\n\n// Вспомогательные функции\n\nfunction calculateDefaultFormatting(formattingInfo) {\n    const counts = {\n        bold: {},\n        italic: {},\n        underline: {},\n        color: {},\n        highlightColor: {},\n        size: {},\n        fontName: {},\n    };\n\n    formattingInfo.forEach(item => {\n        for (let prop in counts) {\n            const value = item[prop] !== undefined ? item[prop] : null;\n            counts[prop][value] = (counts[prop][value] || 0) + 1;\n        }\n    });\n\n    const defaultFormatting = {};\n    for (let prop in counts) {\n        defaultFormatting[prop] = Object.entries(counts[prop]).reduce((a, b) => a[1] >= b[1] ? a : b)[0];\n        // Преобразуем строки 'true', 'false', 'null' обратно в соответствующие типы\n        if (defaultFormatting[prop] === 'true') defaultFormatting[prop] = true;\n        else if (defaultFormatting[prop] === 'false') defaultFormatting[prop] = false;\n        else if (defaultFormatting[prop] === 'null') defaultFormatting[prop] = null;\n        else if (prop === 'size' && defaultFormatting[prop] !== null) defaultFormatting[prop] = parseFloat(defaultFormatting[prop]);\n    }\n\n    return defaultFormatting;\n}\n\n\nfunction getFormattingDifferences(originalFormattingInfo, defaultFormatting) {\n    return originalFormattingInfo.map(item => {\n        const differences = { text: item.text };\n        for (let prop in defaultFormatting) {\n            if (item[prop] !== undefined && item[prop] !== defaultFormatting[prop]) {\n                differences[prop] = item[prop];\n            }\n        }\n        return differences;\n    });\n}\n\n { getUpdatedFormattingInfo };\n// home.js\n\n\n\n\n\nlet originalText = '';\nlet lastSelectedPrompt = null;\n\n// Global variables\nwindow.abortController = null;\nwindow.isLoadingPreset = false;\n\n// Function to initialize the Home tab\n function initHome() {\n  const homeTab = document.getElementById('home');\n  homeTab.innerHTML = `\n      <div class=\"mt-3\">\n          <!-- Navigation Tabs -->\n          <ul class=\"nav nav-tabs\" id=\"fuuga_homeTab\" role=\"tablist\">\n              <li class=\"nav-item\">\n                  <a class=\"nav-link active\" id=\"fuuga_main-tab\" data-toggle=\"tab\" href=\"#fuuga_mainContent\" role=\"tab\" aria-controls=\"fuuga_mainContent\" aria-selected=\"true\">\n                      <i class=\"fas fa-home\"></i> Основное\n                  </a>\n              </li>\n              <li class=\"nav-item\">\n                  <a class=\"nav-link\" id=\"fuuga_multiprompt-tab\" data-toggle=\"tab\" href=\"#fuuga_multipromptContent\" role=\"tab\" aria-controls=\"fuuga_multipromptContent\" aria-selected=\"false\">\n                      <i class=\"fas fa-layer-group\"></i> Мультипромпт\n                  </a>\n              </li>\n              <li class=\"nav-item\">\n                  <a class=\"nav-link\" id=\"fuuga_settings-tab\" data-toggle=\"tab\" href=\"#fuuga_settingsContent\" role=\"tab\" aria-controls=\"fuuga_settingsContent\" aria-selected=\"false\">\n                      <i class=\"fas fa-cog\"></i> Настройки\n                  </a>\n              </li>\n              <li class=\"nav-item\">\n                  <a class=\"nav-link\" id=\"fuuga_presets-tab\" data-toggle=\"tab\" href=\"#fuuga_presetsContent\" role=\"tab\" aria-controls=\"fuuga_presetsContent\" aria-selected=\"false\">\n                      <i class=\"fas fa-save\"></i> Пресеты\n                  </a>\n              </li>\n              <li class=\"nav-item\">\n                  <a class=\"nav-link\" id=\"fuuga_tools-tab\" data-toggle=\"tab\" href=\"#fuuga_toolsContent\" role=\"tab\" aria-controls=\"fuuga_toolsContent\" aria-selected=\"false\">\n                      <i class=\"fas fa-tools\"></i> Инструменты\n                  </a>\n              </li>\n          </ul>\n          <!-- Tab Contents -->\n          <div class=\"tab-content\" id=\"fuuga_homeTabContent\">\n              <!-- Main Content -->\n              <div class=\"tab-pane fade show active\" id=\"fuuga_mainContent\" role=\"tabpanel\" aria-labelledby=\"fuuga_main-tab\">\n                  <div class=\"mt-3\">\n                      <!-- Instruction -->\n                      <div class=\"alert alert-info\">\n                          <strong>Инструкция:</strong>\n                          <ul>\n                              <li>Выберите промпт, который вы хотите применить к тексту.</li>\n                              <li>Выделите текст, который хотите обработать.</li>\n                              <li>Нажмите кнопку \"Обработать\".</li>\n                          </ul>\n                      </div>\n                      <!-- Prompt Selection -->\n                      <div class=\"form-group\">\n                          <label for=\"fuuga_prompt-select\">Выберите промпт:</label>\n                          <select id=\"fuuga_prompt-select\" class=\"form-control\"></select>\n                      </div>\n                      <div id=\"fuuga_selected-model\" class=\"mt-2\"></div>\n                      <!-- Process Button -->\n                      <button id=\"fuuga_process-text\" class=\"btn btn-primary mt-3\" disabled><i class=\"fas fa-play\"></i> Обработать</button>\n                      <!-- Cancel Button -->\n                      <button id=\"fuuga_cancel-process\" class=\"btn btn-secondary mt-3\" style=\"display: none;\"><i class=\"fas fa-stop\"></i> Отменить</button>\n                      <!-- Loading Indicator -->\n                      <div id=\"fuuga_loading\" class=\"mt-3 text-center\" style=\"display: none;\">\n                          <!-- Processing statuses at the top -->\n                          <div id=\"fuuga_current-step-spinner\" class=\"mt-2 font-weight-bold\"></div>\n                          <div id=\"fuuga_current-step\" class=\"mt-2 font-weight-bold\"></div>\n                          <div id=\"fuuga_progress-container\" style=\"display: none;\">\n                              <div class=\"progress\">\n                                  <div id=\"fuuga_progress-bar\" class=\"progress-bar\" role=\"progressbar\" style=\"width: 0%;\">0%</div>\n                              </div>\n                              <div id=\"fuuga_progress-text\" class=\"mt-2\">Обработано 0 из 0 чанков</div>\n                          </div>\n                          <div id=\"fuuga_spinner\" style=\"display: none;\">\n                              <div class=\"spinner-border text-primary\" role=\"status\">\n                                  <span class=\"sr-only\">Загрузка...</span>\n                              </div>\n                          </div>\n                      </div>\n                      <!-- Logger Output -->\n                      <div id=\"fuuga_logger-output\" class=\"mt-3\"></div>\n                      <!-- Results -->\n                      <div id=\"fuuga_home-results\" class=\"mt-3\"></div>\n                  </div>\n              </div>\n              <!-- Multiprompt Content -->\n              <div class=\"tab-pane fade\" id=\"fuuga_multipromptContent\" role=\"tabpanel\" aria-labelledby=\"fuuga_multiprompt-tab\">\n                  <!-- Sub Tabs for Multiprompt -->\n                  <ul class=\"nav nav-tabs mt-3\" id=\"fuuga_multipromptSubTab\" role=\"tablist\">\n                      <li class=\"nav-item\">\n                          <a class=\"nav-link active\" id=\"fuuga_multiprompt-main-tab\" data-toggle=\"tab\" href=\"#fuuga_multipromptMainContent\" role=\"tab\" aria-controls=\"fuuga_multipromptMainContent\" aria-selected=\"true\">\n                              <i class=\"fas fa-list\"></i> Основное\n                          </a>\n                      </li>\n                      <li class=\"nav-item\">\n                          <a class=\"nav-link\" id=\"fuuga_multiprompt-visualization-tab\" data-toggle=\"tab\" href=\"#fuuga_multipromptVisualizationContent\" role=\"tab\" aria-controls=\"fuuga_multipromptVisualizationContent\" aria-selected=\"false\">\n                              <i class=\"fas fa-eye\"></i> Визуализация\n                          </a>\n                      </li>\n                      <li class=\"nav-item\">\n                          <a class=\"nav-link\" id=\"fuuga_multiprompt-logger-tab\" data-toggle=\"tab\" href=\"#fuuga_multipromptLoggerContent\" role=\"tab\" aria-controls=\"fuuga_multipromptLoggerContent\" aria-selected=\"false\" style=\"display: none;\">\n                              <i class=\"fas fa-file-alt\"></i> Логер\n                          </a>\n                      </li>\n                  </ul>\n                  <!-- Content of Multiprompt Sub Tabs -->\n                  <div class=\"tab-content\" id=\"fuuga_multipromptSubTabContent\">\n                      <!-- Multiprompt Main Content -->\n                      <div class=\"tab-pane fade show active\" id=\"fuuga_multipromptMainContent\" role=\"tabpanel\" aria-labelledby=\"fuuga_multiprompt-main-tab\">\n                          <div class=\"mt-3\">\n                              <!-- Instruction -->\n                              <div class=\"alert alert-info\">\n                                  <strong>Мультипромпт:</strong>\n                                  <p>Здесь вы можете выбрать последовательность промптов для обработки текста.</p>\n                                  <ul>\n                                      <li>Выберите один или несколько промптов из списка.</li>\n                                      <li>Установите порядок выполнения с помощью стрелок или перетаскивания.</li>\n                                      <li>Нажмите кнопку \"Обработать с мультипромптом\".</li>\n                                  </ul>\n                              </div>\n                              <!-- Multiprompt Selection -->\n                              <div class=\"form-group\">\n                                  <label for=\"fuuga_multiprompt-select\">Выберите промпты и установите порядок:</label>\n                                  <select id=\"fuuga_multiprompt-select\" class=\"form-control\" multiple></select>\n                                  <small class=\"form-text text-muted\">Выберите промпты и используйте список ниже для управления порядком.</small>\n                              </div>\n                              <!-- Selected Prompts List -->\n                              <ul id=\"fuuga_selected-prompts-list\" class=\"list-group mt-2\"></ul>\n                              <button id=\"fuuga_process-multiprompt-text\" class=\"btn btn-primary mt-3\" disabled><i class=\"fas fa-play\"></i> Обработать с мультипромптом</button>\n                              <!-- Cancel Button -->\n                              <button id=\"fuuga_cancel-multiprompt-process\" class=\"btn btn-secondary mt-3\" style=\"display: none;\"><i class=\"fas fa-stop\"></i> Отменить</button>\n                              <!-- Loading Indicator -->\n                              <div id=\"fuuga_multiprompt-loading\" class=\"mt-3 text-center\" style=\"display: none;\">\n                                  <!-- Processing statuses at the top -->\n                                  <div id=\"fuuga_multiprompt-current-step-spinner\" class=\"mt-2 font-weight-bold\"></div>\n                                  <div id=\"fuuga_multiprompt-current-step\" class=\"mt-2 font-weight-bold\"></div>\n                                  <div id=\"fuuga_multiprompt-progress-container\" style=\"display: none;\">\n                                      <div class=\"progress\">\n                                          <div id=\"fuuga_multiprompt-progress-bar\" class=\"progress-bar\" role=\"progressbar\" style=\"width: 0%;\">0%</div>\n                                      </div>\n                                      <div id=\"fuuga_multiprompt-progress-text\" class=\"mt-2\">Обработано 0 из 0 шагов</div>\n                                  </div>\n                                  <div id=\"fuuga_multiprompt-spinner\" style=\"display: none;\">\n                                      <div class=\"spinner-border text-primary\" role=\"status\">\n                                          <span class=\"sr-only\">Загрузка...</span>\n                                      </div>\n                                  </div>\n                              </div>\n                              <!-- Results -->\n                              <div id=\"fuuga_multiprompt-results\" class=\"mt-3\"></div>\n                          </div>\n                      </div>\n                      <!-- Multiprompt Visualization Content -->\n                      <div class=\"tab-pane fade\" id=\"fuuga_multipromptVisualizationContent\" role=\"tabpanel\" aria-labelledby=\"fuuga_multiprompt-visualization-tab\">\n                          <div class=\"mt-3\">\n                              <!-- Visualization -->\n                              <div id=\"fuuga_multiprompt-flow\" class=\"mt-3\"></div>\n                          </div>\n                      </div>\n                      <!-- Multiprompt Logger Content -->\n                      <div class=\"tab-pane fade\" id=\"fuuga_multipromptLoggerContent\" role=\"tabpanel\" aria-labelledby=\"fuuga_multiprompt-logger-tab\">\n                          <div class=\"mt-3\">\n                              <!-- Logger Output -->\n                              <div id=\"fuuga_multiprompt-logger-output\" class=\"mt-3\"></div>\n                          </div>\n                      </div>\n                  </div>\n              </div>\n              <!-- Settings Content -->\n              <div class=\"tab-pane fade\" id=\"fuuga_settingsContent\" role=\"tabpanel\" aria-labelledby=\"fuuga_settings-tab\">\n                  <!-- Instructions for Settings -->\n                  <div class=\"alert alert-info mt-3\">\n                      <strong>Инструкция:</strong>\n                      <p>Здесь вы можете настроить параметры обработки текста, модели, форматирования и логирования.</p>\n                  </div>\n                  <!-- Sub Tabs for Settings -->\n                  <ul class=\"nav nav-tabs mt-3\" id=\"fuuga_settingsSubTab\" role=\"tablist\">\n                      <li class=\"nav-item\">\n                          <a class=\"nav-link active\" id=\"fuuga_text-processing-tab\" data-toggle=\"tab\" href=\"#fuuga_textProcessingContent\" role=\"tab\" aria-controls=\"fuuga_textProcessingContent\" aria-selected=\"true\"><i class=\"fas fa-file-alt\"></i> Настройки обработки текста</a>\n                      </li>\n                      <li class=\"nav-item\">\n                          <a class=\"nav-link\" id=\"fuuga_model-settings-tab\" data-toggle=\"tab\" href=\"#fuuga_modelSettingsContent\" role=\"tab\" aria-controls=\"fuuga_modelSettingsContent\" aria-selected=\"false\"><i class=\"fas fa-brain\"></i> Настройки модели</a>\n                      </li>\n                      <li class=\"nav-item\">\n                          <a class=\"nav-link\" id=\"fuuga_formatting-settings-tab\" data-toggle=\"tab\" href=\"#fuuga_formattingSettingsContent\" role=\"tab\" aria-controls=\"fuuga_formattingSettingsContent\" aria-selected=\"false\"><i class=\"fas fa-font\"></i> Параметры форматирования</a>\n                      </li>\n                      <li class=\"nav-item\">\n                          <a class=\"nav-link\" id=\"fuuga_logger-settings-tab\" data-toggle=\"tab\" href=\"#fuuga_loggerSettingsContent\" role=\"tab\" aria-controls=\"fuuga_loggerSettingsContent\" aria-selected=\"false\"><i class=\"fas fa-clipboard-list\"></i> Настройки логера</a>\n                      </li>\n                      <li class=\"nav-item\">\n                          <a class=\"nav-link\" id=\"fuuga_misc-settings-tab\" data-toggle=\"tab\" href=\"#fuuga_miscSettingsContent\" role=\"tab\" aria-controls=\"fuuga_miscSettingsContent\" aria-selected=\"false\"><i class=\"fas fa-sliders-h\"></i> Разное</a>\n                      </li>\n                  </ul>\n                  <!-- Content of Settings Sub Tabs -->\n                  <div class=\"tab-content\" id=\"fuuga_settingsSubTabContent\">\n                      <!-- Text Processing Settings -->\n                      <div class=\"tab-pane fade show active\" id=\"fuuga_textProcessingContent\" role=\"tabpanel\" aria-labelledby=\"fuuga_text-processing-tab\">\n                          <div class=\"alert alert-info mt-3\">\n                              <p>Здесь вы можете настроить параметры обработки текста, такие как максимальное количество символов и разбивка на чанки.</p>\n                          </div>\n                          <!-- Maximum characters -->\n                          <div class=\"form-group\">\n                              <label for=\"fuuga_max-chars\">Максимальное количество символов для обработки (0 для без лимита):</label>\n                              <input type=\"number\" id=\"fuuga_max-chars\" class=\"form-control\" value=\"2000\" min=\"0\">\n                          </div>\n                          <!-- Split into chunks -->\n                          <div class=\"form-check mt-2\">\n                              <input class=\"form-check-input\" type=\"checkbox\" id=\"fuuga_split-into-chunks-checkbox\">\n                              <label class=\"form-check-label\" for=\"fuuga_split-into-chunks-checkbox\" title=\"Разбивать текст на небольшие части для обработки\">\n                                  Разбивать текст на чанки\n                              </label>\n                          </div>\n                          <!-- Chunk size -->\n                          <div class=\"form-group mt-2\">\n                              <label for=\"fuuga_chunk-size\">Размер чанка (в предложениях):</label>\n                              <input type=\"number\" id=\"fuuga_chunk-size\" class=\"form-control\" value=\"8\" min=\"1\">\n                          </div>\n                      </div>\n                      <!-- Model Settings -->\n                      <div class=\"tab-pane fade\" id=\"fuuga_modelSettingsContent\" role=\"tabpanel\" aria-labelledby=\"fuuga_model-settings-tab\">\n                          <div class=\"alert alert-info mt-3\">\n                              <p>Здесь вы можете настроить параметры модели, такие как температура и максимальное количество токенов.</p>\n                          </div>\n                          <!-- Температура -->\n                          <div class=\"form-group mt-2\">\n                              <label for=\"fuuga_temperature\">Температура (0.0 - 1.0):</label>\n                              <input type=\"number\" id=\"fuuga_temperature\" class=\"form-control\" value=\"0.5\" min=\"0.0\" max=\"1.0\" step=\"0.1\" title=\"Контролирует степень случайности модели. Низкие значения делают ответы более детерминированными\">\n                          </div>\n                          <!-- Максимальное количество токенов -->\n                          <div class=\"form-group\">\n                              <label for=\"fuuga_max-tokens\">Максимальное количество токенов:</label>\n                              <input type=\"number\" id=\"fuuga_max-tokens\" class=\"form-control\" value=\"4000\" min=\"1\" title=\"Максимальное количество токенов в ответе модели\">\n                          </div>\n                      </div>\n                      <!-- Formatting Settings -->\n                      <div class=\"tab-pane fade\" id=\"fuuga_formattingSettingsContent\" role=\"tabpanel\" aria-labelledby=\"fuuga_formatting-settings-tab\">\n                          <div class=\"alert alert-info mt-3\">\n                              <p>Здесь вы можете настроить параметры форматирования текста.</p>\n                          </div>\n                          <!-- Apply Formatting -->\n                          <div class=\"form-check mt-2\">\n                              <input type=\"checkbox\" class=\"form-check-input\" id=\"fuuga_apply-formatting\">\n                              <label class=\"form-check-label\" for=\"fuuga_apply-formatting\">Применять форматирование</label>\n                          </div>\n                          <!-- Formatting Model -->\n                          <div class=\"form-group mt-2\">\n                              <label for=\"fuuga_formatting-model\">Модель для форматирования:</label>\n                              <select id=\"fuuga_formatting-model\" class=\"form-control\"></select>\n                          </div>\n                          <!-- Formatting Temperature -->\n                          <div class=\"form-group mt-2\">\n                              <label for=\"fuuga_formatting-temperature\">Температура для форматирования (0.0 - 1.0):</label>\n                              <input type=\"number\" id=\"fuuga_formatting-temperature\" class=\"form-control\" value=\"0.5\" min=\"0.0\" max=\"1.0\" step=\"0.1\" title=\"Контролирует степень случайности модели при форматировании\">\n                          </div>\n                          <!-- Formatting Max Tokens -->\n                          <div class=\"form-group\">\n                              <label for=\"fuuga_formatting-max-tokens\">Максимальное количество токенов для форматирования:</label>\n                              <input type=\"number\" id=\"fuuga_formatting-max-tokens\" class=\"form-control\" value=\"1000\" min=\"1\" title=\"Максимальное количество токенов в ответе модели при форматировании\">\n                          </div>\n                      </div>\n                      <!-- Logger Settings -->\n                      <div class=\"tab-pane fade\" id=\"fuuga_loggerSettingsContent\" role=\"tabpanel\" aria-labelledby=\"fuuga_logger-settings-tab\">\n                          <div class=\"alert alert-info mt-3\">\n                              <p>Здесь вы можете настроить параметры логирования.</p>\n                          </div>\n                          <!-- Enable Logger -->\n                          <div class=\"form-check mt-2\">\n                              <input type=\"checkbox\" class=\"form-check-input\" id=\"fuuga_enable-logger\">\n                              <label class=\"form-check-label\" for=\"fuuga_enable-logger\">Включить логирование</label>\n                          </div>\n                          <!-- Logger Level -->\n                          <div class=\"form-group mt-2\">\n                              <label for=\"fuuga_logger-level\">Уровень логирования:</label>\n                              <select id=\"fuuga_logger-level\" class=\"form-control\">\n                                  <option value=\"minimal\">Минимальный</option>\n                                  <option value=\"medium\">Средний</option>\n                                  <option value=\"maximal\">Максимальный</option>\n                                  <option value=\"custom\">Пользовательский</option>\n                              </select>\n                          </div>\n                          <!-- Custom Logger Prompt -->\n                          <div class=\"mt-2\" id=\"fuuga_custom-logger-prompt-container\" style=\"display: none;\">\n                              <button class=\"btn btn-link\" type=\"button\" data-toggle=\"collapse\" data-target=\"#fuuga_customLoggerPromptCollapse\" aria-expanded=\"false\" aria-controls=\"fuuga_customLoggerPromptCollapse\">\n                                  Настроить пользовательский промпт\n                              </button>\n                              <div class=\"collapse\" id=\"fuuga_customLoggerPromptCollapse\">\n                                  <div class=\"card card-body\">\n                                      <div class=\"form-group\">\n                                          <label for=\"fuuga_custom-logger-prompt\">Пользовательский промпт для логера:</label>\n                                          <textarea id=\"fuuga_custom-logger-prompt\" class=\"form-control\" rows=\"5\" placeholder=\"Введите ваш пользовательский промпт здесь...\"></textarea>\n                                          <small class=\"form-text text-muted\">Используйте {{beforeText}} и {{afterText}} для вставки исходного и обработанного текста соответственно. Пример: \"Проанализируй изменения между {{beforeText}} и {{afterText}}\"</small>\n                                      </div>\n                                  </div>\n                              </div>\n                          </div>\n                          <!-- Logger Model -->\n                          <div class=\"form-group mt-2\">\n                              <label for=\"fuuga_logger-model\">Модель для логирования:</label>\n                              <select id=\"fuuga_logger-model\" class=\"form-control\"></select>\n                          </div>\n                          <!-- Logger Temperature -->\n                          <div class=\"form-group mt-2\">\n                              <label for=\"fuuga_logger-temperature\">Температура для логирования (0.0 - 1.0):</label>\n                              <input type=\"number\" id=\"fuuga_logger-temperature\" class=\"form-control\" value=\"0.3\" min=\"0.0\" max=\"1.0\" step=\"0.1\" title=\"Контролирует степень случайности модели при логировании\">\n                          </div>\n                          <!-- Logger Max Tokens -->\n                          <div class=\"form-group\">\n                              <label for=\"fuuga_logger-max-tokens\">Максимальное количество токенов для логирования:</label>\n                              <input type=\"number\" id=\"fuuga_logger-max-tokens\" class=\"form-control\" value=\"500\" min=\"1\" title=\"Максимальное количество токенов в ответе модели при логировании\">\n                          </div>\n                          <!-- Logger Prompts Edit -->\n                          <div class=\"form-check mt-2\">\n                              <input type=\"checkbox\" class=\"form-check-input\" id=\"fuuga_edit-logger-prompts\">\n                              <label class=\"form-check-label\" for=\"fuuga_edit-logger-prompts\">Редактировать промпты логера</label>\n                          </div>\n                          <div id=\"fuuga_logger-prompts-accordion\" class=\"mt-3\" style=\"display: none;\">\n                              <div class=\"accordion\" id=\"fuuga_loggerPromptsAccordion\">\n                                  <!-- Minimal Level Prompt -->\n                                  <div class=\"card\">\n                                      <div class=\"card-header\" id=\"fuuga_headingMinimalPrompt\">\n                                          <h2 class=\"mb-0\">\n                                              <button class=\"btn btn-link\" type=\"button\" data-toggle=\"collapse\" data-target=\"#fuuga_collapseMinimalPrompt\" aria-expanded=\"true\" aria-controls=\"fuuga_collapseMinimalPrompt\">\n                                                  Промпт для минимального уровня\n                                              </button>\n                                          </h2>\n                                      </div>\n                                      <div id=\"fuuga_collapseMinimalPrompt\" class=\"collapse\" aria-labelledby=\"fuuga_headingMinimalPrompt\" data-parent=\"#fuuga_loggerPromptsAccordion\">\n                                          <div class=\"card-body\">\n                                              <textarea id=\"fuuga_logger-prompt-minimal\" class=\"form-control\" rows=\"5\"></textarea>\n                                          </div>\n                                      </div>\n                                  </div>\n                                  <!-- Medium Level Prompt -->\n                                  <div class=\"card\">\n                                      <div class=\"card-header\" id=\"fuuga_headingMediumPrompt\">\n                                          <h2 class=\"mb-0\">\n                                              <button class=\"btn btn-link\" type=\"button\" data-toggle=\"collapse\" data-target=\"#fuuga_collapseMediumPrompt\" aria-expanded=\"false\" aria-controls=\"fuuga_collapseMediumPrompt\">\n                                                  Промпт для среднего уровня\n                                              </button>\n                                          </h2>\n                                      </div>\n                                      <div id=\"fuuga_collapseMediumPrompt\" class=\"collapse\" aria-labelledby=\"fuuga_headingMediumPrompt\" data-parent=\"#fuuga_loggerPromptsAccordion\">\n                                          <div class=\"card-body\">\n                                              <textarea id=\"fuuga_logger-prompt-medium\" class=\"form-control\" rows=\"5\"></textarea>\n                                          </div>\n                                      </div>\n                                  </div>\n                                  <!-- Maximal Level Prompt -->\n                                  <div class=\"card\">\n                                      <div class=\"card-header\" id=\"fuuga_headingMaximalPrompt\">\n                                          <h2 class=\"mb-0\">\n                                              <button class=\"btn btn-link\" type=\"button\" data-toggle=\"collapse\" data-target=\"#fuuga_collapseMaximalPrompt\" aria-expanded=\"false\" aria-controls=\"fuuga_collapseMaximalPrompt\">\n                                                  Промпт для максимального уровня\n                                              </button>\n                                          </h2>\n                                      </div>\n                                      <div id=\"fuuga_collapseMaximalPrompt\" class=\"collapse\" aria-labelledby=\"fuuga_headingMaximalPrompt\" data-parent=\"#fuuga_loggerPromptsAccordion\">\n                                          <div class=\"card-body\">\n                                              <textarea id=\"fuuga_logger-prompt-maximal\" class=\"form-control\" rows=\"5\"></textarea>\n                                          </div>\n                                      </div>\n                                  </div>\n                              </div>\n                              <!-- Reset Logger Prompts Button -->\n                              <button id=\"fuuga_reset-logger-prompts\" class=\"btn btn-secondary mt-3\">Сбросить промпты логера</button>\n                              <div id=\"fuuga_logger-prompt-message\" class=\"mt-2\"></div>\n                          </div>\n                      </div>\n                      <!-- Misc Settings -->\n                      <div class=\"tab-pane fade\" id=\"fuuga_miscSettingsContent\" role=\"tabpanel\" aria-labelledby=\"fuuga_misc-settings-tab\">\n                          <div class=\"alert alert-info mt-3\">\n                              <p>Здесь вы можете сбросить настройки до значений по умолчанию.</p>\n                          </div>\n                          <button id=\"fuuga_reset-settings\" class=\"btn btn-danger mt-3\">Сбросить до настроек по умолчанию</button>\n                      </div>\n                  </div>\n              </div>\n              <!-- Presets Content -->\n              <div class=\"tab-pane fade\" id=\"fuuga_presetsContent\" role=\"tabpanel\" aria-labelledby=\"fuuga_presets-tab\">\n                  <!-- Instructions for Presets -->\n                  <div class=\"alert alert-info mt-3\">\n                      <strong>Инструкция:</strong>\n                      <p>Здесь вы можете сохранять, экспортировать и импортировать ваши настройки в виде пресетов.</p>\n                  </div>\n                  <!-- Presets Sub Tabs -->\n                  <ul class=\"nav nav-tabs mt-3\" id=\"fuuga_presetsSubTab\" role=\"tablist\">\n                      <li class=\"nav-item\">\n                          <a class=\"nav-link active\" id=\"fuuga_save-preset-tab\" data-toggle=\"tab\" href=\"#fuuga_savePresetContent\" role=\"tab\" aria-controls=\"fuuga_savePresetContent\" aria-selected=\"true\">Сохранить</a>\n                      </li>\n                      <li class=\"nav-item\">\n                          <a class=\"nav-link\" id=\"fuuga_-preset-tab\" data-toggle=\"tab\" href=\"#fuuga_PresetContent\" role=\"tab\" aria-controls=\"fuuga_PresetContent\" aria-selected=\"false\">Экспорт</a>\n                      </li>\n                      <li class=\"nav-item\">\n                          <a class=\"nav-link\" id=\"fuuga_import-preset-tab\" data-toggle=\"tab\" href=\"#fuuga_importPresetContent\" role=\"tab\" aria-controls=\"fuuga_importPresetContent\" aria-selected=\"false\">Импорт</a>\n                      </li>\n                  </ul>\n                  <!-- Presets Sub Tab Content -->\n                  <div class=\"tab-content\" id=\"fuuga_presetsSubTabContent\">\n                      <!-- Save Preset -->\n                      <div class=\"tab-pane fade show active\" id=\"fuuga_savePresetContent\" role=\"tabpanel\" aria-labelledby=\"fuuga_save-preset-tab\">\n                          <div class=\"alert alert-info mt-3\">\n                              <p>Здесь вы можете сохранить текущие настройки как пресет.</p>\n                          </div>\n                          <!-- Preset Selection -->\n                          <div class=\"form-group\">\n                              <label for=\"fuuga_preset-select\">Выберите пресет:</label>\n                              <select id=\"fuuga_preset-select\" class=\"form-control\"></select>\n                          </div>\n                          <!-- Preset Name -->\n                          <div class=\"form-group\">\n                              <label for=\"fuuga_preset-name\">Название пресета для сохранения:</label>\n                              <input type=\"text\" id=\"fuuga_preset-name\" class=\"form-control\" placeholder=\"Введите название пресета\">\n                          </div>\n                          <!-- Preset Buttons -->\n                          <div class=\"form-group mt-3\">\n                              <button id=\"fuuga_save-preset\" class=\"btn btn-primary\">Сохранить текущие настройки как пресет</button>\n                              <button id=\"fuuga_delete-preset\" class=\"btn btn-danger\">Удалить выбранный пресет</button>\n                          </div>\n                          <!-- Preset Messages and Confirmation -->\n                          <div id=\"fuuga_preset-confirmation\" class=\"mt-2\" style=\"display:none;\">\n                              <div class=\"alert alert-warning\">\n                                  <p id=\"fuuga_preset-confirmation-message\"></p>\n                                  <button id=\"fuuga_preset-confirm-yes\" class=\"btn btn-danger\">Да</button>\n                                  <button id=\"fuuga_preset-confirm-no\" class=\"btn btn-secondary\">Нет</button>\n                              </div>\n                          </div>\n                          <div id=\"fuuga_preset-message\" class=\"mt-2\"></div>\n                      </div>\n                      <!--  Preset -->\n                      <div class=\"tab-pane fade\" id=\"fuuga_PresetContent\" role=\"tabpanel\" aria-labelledby=\"fuuga_-preset-tab\">\n                          <div class=\"alert alert-info mt-3\">\n                              <p>Здесь вы можете экспортировать выбранный пресет в формате JSON.</p>\n                          </div>\n                          <label for=\"fuuga_preset-json\">Экспорт пресета (JSON):</label>\n                          <textarea id=\"fuuga_preset-json\" class=\"form-control\" rows=\"5\" readonly></textarea>\n                          <button id=\"fuuga_copy-preset-json\" class=\"btn btn-secondary mt-2\">Скопировать JSON</button>\n                      </div>\n                      <!-- Import Preset -->\n                      <div class=\"tab-pane fade\" id=\"fuuga_importPresetContent\" role=\"tabpanel\" aria-labelledby=\"fuuga_import-preset-tab\">\n                          <div class=\"alert alert-info mt-3\">\n                              <p>Здесь вы можете импортировать пресет из JSON.</p>\n                          </div>\n                          <label for=\"fuuga_preset-json-import\">Импорт пресета (JSON):</label>\n                          <textarea id=\"fuuga_preset-json-import\" class=\"form-control\" rows=\"5\"></textarea>\n                          <button id=\"fuuga_import-preset\" class=\"btn btn-secondary mt-2\">Импортировать пресет</button>\n                      </div>\n                  </div>\n              </div>\n              <!-- Tools Content -->\n              <div class=\"tab-pane fade\" id=\"fuuga_toolsContent\" role=\"tabpanel\" aria-labelledby=\"fuuga_tools-tab\">\n                  <!-- Instructions for Tools -->\n                  <div class=\"alert alert-info mt-3\">\n                      <strong>Инструменты:</strong>\n                      <p>Здесь вы можете получить информацию о выделенном тексте.</p>\n                  </div>\n                  <button id=\"fuuga_show-selected-text\" class=\"btn btn-info mt-3\"><i class=\"fas fa-info-circle\"></i> Показать информацию о выделенном тексте</button>\n                  <div id=\"fuuga_selected-text-info\" class=\"mt-3\"></div>\n              </div>\n          </div>\n      </div>\n  `;\n\n  // Initialize Tabs\n  $('#fuuga_homeTab a[data-toggle=\"tab\"]').on('click', function (e) {\n      e.preventDefault();\n      $(this).tab('show');\n  });\n\n  $('#fuuga_settingsSubTab a[data-toggle=\"tab\"]').on('click', function (e) {\n      e.preventDefault();\n      $(this).tab('show');\n  });\n\n  $('#fuuga_multipromptSubTab a[data-toggle=\"tab\"]').on('click', function (e) {\n      e.preventDefault();\n      $(this).tab('show');\n  });\n\n  $('#fuuga_presetsSubTab a[data-toggle=\"tab\"]').on('click', function (e) {\n      e.preventDefault();\n      $(this).tab('show');\n  });\n\n  // Initialize Select2 for Prompt Selection\n  $('#fuuga_prompt-select').select2({\n      width: '100%',\n      placeholder: 'Выберите промпт',\n      templateResult: formatPrompt,\n      templateSelection: formatPromptSelection,\n  });\n\n  // Initialize Select2 for Multiprompt Selection\n  $('#fuuga_multiprompt-select').select2({\n      width: '100%',\n      placeholder: 'Выберите промпты',\n      multiple: true,\n      allowClear: true,\n      templateResult: formatPrompt,\n      templateSelection: formatPromptSelection,\n  });\n\n  // Initialize Select2 for Model Selection\n  $('#fuuga_formatting-model').select2({\n      width: '100%',\n      placeholder: 'Выберите модель для форматирования',\n  });\n\n  $('#fuuga_logger-model').select2({\n      width: '100%',\n      placeholder: 'Выберите модель для логирования',\n  });\n\n  // Initialize Sortable for Multiprompt Order Management\n  $('#fuuga_selected-prompts-list').sortable({\n      update: function (event, ui) {\n          updateMultipromptFlowVisualization();\n          saveHomeSettingsHome();\n      },\n  });\n\n  // Event Listeners\n  document.getElementById('fuuga_process-text').onclick = processSelectedTextHome;\n  document.getElementById('fuuga_cancel-process').onclick = cancelProcess;\n  document.getElementById('fuuga_show-selected-text').onclick = showSelectedTextInfoHome;\n  document.getElementById('fuuga_process-multiprompt-text').onclick = processMultipromptText;\n  document.getElementById('fuuga_cancel-multiprompt-process').onclick = cancelMultipromptProcess;\n  document.getElementById('fuuga_reset-settings').onclick = showResetSettingsModal;\n\n  // Logger Level Change Event to Show/Hide Custom Prompt\n  document.getElementById('fuuga_logger-level').onchange = () => {\n      const loggerLevel = document.getElementById('fuuga_logger-level').value;\n      if (loggerLevel === 'custom') {\n          document.getElementById('fuuga_custom-logger-prompt-container').style.display = 'block';\n      } else {\n          document.getElementById('fuuga_custom-logger-prompt-container').style.display = 'none';\n      }\n      saveHomeSettingsHome();\n  };\n\n  // Enable Logger Event to Show/Hide Logger Tab\n  document.getElementById('fuuga_enable-logger').onchange = () => {\n      const enableLogger = document.getElementById('fuuga_enable-logger').checked;\n      if (enableLogger) {\n          document.getElementById('fuuga_multiprompt-logger-tab').style.display = 'block';\n      } else {\n          document.getElementById('fuuga_multiprompt-logger-tab').style.display = 'none';\n      }\n      saveHomeSettingsHome();\n  };\n\n  // Edit Logger Prompts Event\n  document.getElementById('fuuga_edit-logger-prompts').onchange = () => {\n      const editLoggerPrompts = document.getElementById('fuuga_edit-logger-prompts').checked;\n      const loggerPromptsAccordion = document.getElementById('fuuga_logger-prompts-accordion');\n      loggerPromptsAccordion.style.display = editLoggerPrompts ? 'block' : 'none';\n      saveHomeSettingsHome();\n  };\n\n  // Reset Logger Prompts\n  document.getElementById('fuuga_reset-logger-prompts').onclick = () => {\n      resetLoggerPrompts();\n      updatePresetJSON();\n  };\n\n  // Load models and prompts\n  loadModelsForFormattingSelect();\n  loadModelsForLoggerSelectHome();\n  updatePromptSelect();\n  updateMultipromptSelect();\n  loadHomeSettingsHome();\n  initializePresetSelect();\n  populatePresetSelect();\n\n  // Check selection periodically\n  setInterval(checkSelection, 1000);\n\n  // Save settings on change\n  document.getElementById('fuuga_apply-formatting').onchange = () => {\n      saveHomeSettingsHome();\n  };\n  document.getElementById('fuuga_split-into-chunks-checkbox').onchange = () => {\n      saveHomeSettingsHome();\n  };\n  document.getElementById('fuuga_chunk-size').onchange = () => {\n      saveHomeSettingsHome();\n  };\n  document.getElementById('fuuga_max-chars').onchange = () => {\n      saveHomeSettingsHome();\n  };\n  document.getElementById('fuuga_temperature').onchange = () => {\n      saveHomeSettingsHome();\n  };\n  document.getElementById('fuuga_max-tokens').onchange = () => {\n      saveHomeSettingsHome();\n  };\n  document.getElementById('fuuga_formatting-temperature').onchange = () => {\n      saveHomeSettingsHome();\n  };\n  document.getElementById('fuuga_formatting-max-tokens').onchange = () => {\n      saveHomeSettingsHome();\n  };\n  document.getElementById('fuuga_logger-temperature').onchange = () => {\n      saveHomeSettingsHome();\n  };\n  document.getElementById('fuuga_logger-max-tokens').onchange = () => {\n      saveHomeSettingsHome();\n  };\n  document.getElementById('fuuga_custom-logger-prompt').onchange = () => {\n      saveHomeSettingsHome();\n  };\n\n  // Save Logger Prompts on change\n  document.getElementById('fuuga_logger-prompt-minimal').onchange = () => {\n      saveLoggerPrompts();\n      updatePresetJSON();\n  };\n  document.getElementById('fuuga_logger-prompt-medium').onchange = () => {\n      saveLoggerPrompts();\n      updatePresetJSON();\n  };\n  document.getElementById('fuuga_logger-prompt-maximal').onchange = () => {\n      saveLoggerPrompts();\n      updatePresetJSON();\n  };\n\n  $('#fuuga_formatting-model').on('change', () => {\n      saveHomeSettingsHome();\n  });\n  $('#fuuga_logger-model').on('change', () => {\n      saveHomeSettingsHome();\n  });\n\n  // Preset Event Listeners\n  document.getElementById('fuuga_preset-select').onchange = loadSelectedPreset;\n  document.getElementById('fuuga_save-preset').onclick = saveCurrentSettingsAsPreset;\n  document.getElementById('fuuga_delete-preset').onclick = deleteSelectedPreset;\n  document.getElementById('fuuga_copy-preset-json').onclick = copyPresetJSON;\n  document.getElementById('fuuga_import-preset').onclick = importPresetFromJSONHome;\n\n  // Initialize settings\n  loadHomeSettingsHome();\n}\n\n// ... (Other functions like formatPrompt, updatePromptSelect, etc.)\n function updatePromptSelect() {\n  const select = $('#fuuga_prompt-select');\n  const modelDiv = document.getElementById('fuuga_selected-model');\n  const prompts = getPrompts();\n  select.empty();\n  select.append(new Option('Выберите промпт', '', true, true));\n  const mainSettings = JSON.parse(localStorage.getItem('mainSettings') || '{}');\n  const lastSelectedPromptIndex = mainSettings.lastSelectedPromptIndex || -1;\n  prompts.forEach((prompt, index) => {\n      const option = new Option(prompt.name, index, false, index == lastSelectedPromptIndex);\n      select.append(option);\n  });\n  select.trigger('change');\n  const promptIndex =\n      lastSelectedPromptIndex >= 0 && lastSelectedPromptIndex < prompts.length\n          ? lastSelectedPromptIndex\n          : null;\n  lastSelectedPrompt = promptIndex !== null ? prompts[promptIndex] : null;\n  modelDiv.textContent = lastSelectedPrompt ? `Модель: ${lastSelectedPrompt.model}` : '';\n  document.getElementById('fuuga_process-text').disabled = !lastSelectedPrompt;\n  select.on('change', function () {\n      const newPromptIndex = $(this).val();\n      lastSelectedPrompt = newPromptIndex ? prompts[newPromptIndex] : null;\n      const mainSettings = JSON.parse(localStorage.getItem('mainSettings') || '{}');\n      mainSettings.lastSelectedPromptIndex = newPromptIndex || -1;\n      localStorage.setItem('mainSettings', JSON.stringify(mainSettings));\n      modelDiv.textContent = lastSelectedPrompt ? `Модель: ${lastSelectedPrompt.model}` : '';\n      document.getElementById('fuuga_process-text').disabled = !lastSelectedPrompt;\n      saveHomeSettingsHome();\n  });\n}\n\nfunction formatPrompt(prompt) {\n  if (!prompt.id) {\n      return prompt.text;\n  }\n  const prompts = getPrompts();\n  const promptData = prompts[prompt.id];\n  if (!promptData) return prompt.text;\n  return $(`<span>${promptData.name} (${promptData.model})</span>`);\n}\n\nfunction formatPromptSelection(prompt) {\n  if (!prompt.id) {\n      return prompt.text;\n  }\n  const prompts = getPrompts();\n  const promptData = prompts[prompt.id];\n  if (!promptData) return prompt.text;\n  return promptData.name;\n}\n\n\nfunction showResetSettingsModal() {\n  const modalHtml = `\n      <div class=\"modal fade\" id=\"fuuga_resetSettingsModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"fuuga_resetSettingsModalLabel\" aria-hidden=\"true\">\n        <div class=\"modal-dialog\" role=\"document\">\n          <div class=\"modal-content\">\n            <div class=\"modal-header\">\n              <h5 class=\"modal-title\" id=\"fuuga_resetSettingsModalLabel\">Сброс настроек</h5>\n              <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Закрыть\">\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n            </div>\n            <div class=\"modal-body\">\n              Вы уверены, что хотите сбросить настройки до значений по умолчанию?\n            </div>\n            <div class=\"modal-footer\">\n              <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Отмена</button>\n              <button type=\"button\" class=\"btn btn-danger\" id=\"fuuga_confirmResetSettings\">Сбросить</button>\n            </div>\n          </div>\n        </div>\n      </div>\n  `;\n\n  $('body').append(modalHtml);\n  $('#fuuga_resetSettingsModal').modal('show');\n\n  $('#fuuga_confirmResetSettings').on('click', () => {\n      resetHomeSettings();\n      $('#fuuga_resetSettingsModal').modal('hide');\n      $('#fuuga_resetSettingsModal').remove();\n      showAlertHome('Настройки были сброшены до значений по умолчанию.', 'success');\n  });\n\n  $('#fuuga_resetSettingsModal').on('hidden.bs.modal', function () {\n      $('#fuuga_resetSettingsModal').remove();\n  });\n}\n\nfunction showAlertHome(message, type) {\n  const alertHtml = `\n      <div class=\"alert alert-${type} alert-dismissible fade show mt-3\" role=\"alert\">\n          ${message}\n          <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Закрыть\">\n              <span aria-hidden=\"true\">&times;</span>\n          </button>\n      </div>\n  `;\n  $('#fuuga_miscSettingsContent').prepend(alertHtml);\n}\n\nfunction loadModelsForFormattingSelect() {\n  const select = $('#fuuga_formatting-model');\n  const models = JSON.parse(localStorage.getItem('models') || '[]');\n  select.empty();\n  models.forEach((model) => {\n      const option = new Option(model.name, model.id, false, false);\n      select.append(option);\n  });\n  select.trigger('change');\n\n  // Set default value\n  const defaultModel = models.find((model) => model.id === 'openai/gpt-4') || models[0];\n  if (defaultModel) {\n      select.val(defaultModel.id).trigger('change');\n  }\n\n  // Load saved model\n  const mainSettings = JSON.parse(localStorage.getItem('mainSettings') || '{}');\n  const savedModel = mainSettings.formattingModel;\n  if (savedModel && models.some((model) => model.id === savedModel)) {\n      select.val(savedModel).trigger('change');\n  }\n}\n\nfunction loadModelsForLoggerSelectHome() {\n  const select = $('#fuuga_logger-model');\n  const models = JSON.parse(localStorage.getItem('models') || '[]');\n  select.empty();\n  models.forEach((model) => {\n      const option = new Option(model.name, model.id, false, false);\n      select.append(option);\n  });\n  select.trigger('change');\n\n  // Set default value\n  const defaultModel = models.find((model) => model.id === 'openai/gpt-4') || models[0];\n  if (defaultModel) {\n      select.val(defaultModel.id).trigger('change');\n  }\n\n  // Load saved model\n  const mainSettings = JSON.parse(localStorage.getItem('mainSettings') || '{}');\n  const savedModel = mainSettings.loggerModel;\n  if (savedModel && models.some((model) => model.id === savedModel)) {\n      select.val(savedModel).trigger('change');\n  }\n}\n\nfunction checkSelection() {\n  Word.run(async (context) => {\n      const selection = context.document.getSelection();\n      selection.load('text');\n      await context.sync();\n\n      const processButton = document.getElementById('fuuga_process-text');\n      const processMultipromptButton = document.getElementById('fuuga_process-multiprompt-text');\n      const selectedPromptIndices = $('#fuuga_multiprompt-select').val();\n      if (selection.text.trim().length > 0 && lastSelectedPrompt) {\n          processButton.disabled = false;\n      } else {\n          processButton.disabled = true;\n      }\n      if (\n          selection.text.trim().length > 0 &&\n          selectedPromptIndices &&\n          selectedPromptIndices.length > 0\n      ) {\n          processMultipromptButton.disabled = false;\n      } else {\n          processMultipromptButton.disabled = true;\n      }\n  });\n}\n\nfunction updateMultipromptSelect() {\n  const select = $('#fuuga_multiprompt-select');\n  const prompts = getPrompts();\n  select.empty();\n\n  prompts.forEach((prompt, index) => {\n      const option = new Option(prompt.name, index, false, false);\n      select.append(option);\n  });\n\n  // Load saved multiprompt indices\n  const mainSettings = JSON.parse(localStorage.getItem('mainSettings') || '{}');\n  const lastSelectedMultipromptIndices = mainSettings.lastSelectedMultipromptIndices || [];\n\n  // Set selected options\n  select.val(lastSelectedMultipromptIndices).trigger('change');\n\n  // Update selected prompts list based on saved indices\n  updateSelectedPromptsList(lastSelectedMultipromptIndices);\n\n  // Ensure event handlers are set\n  select.off('change').on('change', function () {\n      const selectedPromptIndices = $(this).val();\n      updateSelectedPromptsList(selectedPromptIndices);\n      saveHomeSettingsHome();\n  });\n}\n\nfunction updateSelectedPromptsList(selectedPromptIndices) {\n  const prompts = getPrompts();\n  const selectedPromptsList = document.getElementById('fuuga_selected-prompts-list');\n  selectedPromptsList.innerHTML = '';\n\n  if (!Array.isArray(selectedPromptIndices)) {\n      selectedPromptIndices = selectedPromptIndices ? [selectedPromptIndices] : [];\n  }\n\n  selectedPromptIndices.forEach((indexStr) => {\n      if (indexStr === '') {\n          return;\n      }\n\n      const index = parseInt(indexStr, 10);\n\n      if (isNaN(index)) {\n          return;\n      }\n\n      const prompt = prompts[index];\n      if (!prompt) {\n          return;\n      }\n\n      const listItem = document.createElement('li');\n      listItem.className = 'list-group-item d-flex justify-content-between align-items-center';\n      listItem.dataset.promptIndex = index;\n\n      listItem.innerHTML = `\n          <div>\n              <span>${prompt.name}</span>\n              <span class=\"badge badge-secondary ml-2\">${prompt.model}</span>\n          </div>\n          <div>\n              <button class=\"btn btn-sm btn-secondary move-up\"><i class=\"fas fa-arrow-up\"></i></button>\n              <button class=\"btn btn-sm btn-secondary move-down\"><i class=\"fas fa-arrow-down\"></i></button>\n              <button class=\"btn btn-sm btn-danger remove-prompt\"><i class=\"fas fa-times\"></i></button>\n          </div>\n      `;\n      selectedPromptsList.appendChild(listItem);\n  });\n\n  // Attach event listeners for buttons\n  selectedPromptsList.querySelectorAll('.move-up').forEach((btn) => {\n      btn.addEventListener('click', function () {\n          const li = this.closest('li');\n          if (li.previousElementSibling) {\n              li.parentNode.insertBefore(li, li.previousElementSibling);\n              updateMultipromptFlowVisualization();\n              saveHomeSettingsHome();\n          }\n      });\n  });\n\n  selectedPromptsList.querySelectorAll('.move-down').forEach((btn) => {\n      btn.addEventListener('click', function () {\n          const li = this.closest('li');\n          if (li.nextElementSibling) {\n              li.parentNode.insertBefore(li.nextElementSibling, li);\n              updateMultipromptFlowVisualization();\n              saveHomeSettingsHome();\n          }\n      });\n  });\n\n  selectedPromptsList.querySelectorAll('.remove-prompt').forEach((btn) => {\n      btn.addEventListener('click', function () {\n          const li = this.closest('li');\n          li.parentNode.removeChild(li);\n          // Update Select2 selection\n          const updatedIndices = Array.from(selectedPromptsList.children).map(\n              (item) => item.dataset.promptIndex\n          );\n          $('#fuuga_multiprompt-select').val(updatedIndices).trigger('change');\n          updateMultipromptFlowVisualization();\n          saveHomeSettingsHome();\n      });\n  });\n\n  // Update visualization\n  updateMultipromptFlowVisualization();\n}\n\nfunction updateMultipromptFlowVisualization() {\n  const selectedPromptsList = document.getElementById('fuuga_selected-prompts-list');\n  const prompts = getPrompts();\n\n  const items = selectedPromptsList.querySelectorAll('li');\n  const indices = Array.from(items).map((item) => item.dataset.promptIndex);\n\n  const multipromptFlowDiv = document.getElementById('fuuga_multiprompt-flow');\n  multipromptFlowDiv.innerHTML = '';\n\n  // Accordion for flow visualization\n  const accordionId = 'fuuga_multiprompt-flow-accordion';\n  let accordionHTML = `<div class=\"accordion\" id=\"${accordionId}\">`;\n\n  // Original text panel\n  accordionHTML += `\n      <div class=\"card\">\n          <div class=\"card-header\" id=\"${accordionId}-heading-original\">\n              <h2 class=\"mb-0\">\n                  <button class=\"btn btn-link\" type=\"button\" data-toggle=\"collapse\" data-target=\"#${accordionId}-collapse-original\" aria-expanded=\"true\" aria-controls=\"${accordionId}-collapse-original\">\n                      <i class=\"fas fa-file-alt\"></i> Исходный текст\n                  </button>\n              </h2>\n          </div>\n          <div id=\"${accordionId}-collapse-original\" class=\"collapse\" aria-labelledby=\"${accordionId}-heading-original\" data-parent=\"#${accordionId}\">\n              <div class=\"card-body\" id=\"fuuga_multiprompt-original-text\">\n                  Здесь будет отображаться ваш исходный текст.\n              </div>\n          </div>\n      </div>\n  `;\n\n  indices.forEach((index, idx) => {\n      const prompt = prompts[index];\n      const collapseId = `${accordionId}-collapse-${idx}`;\n      accordionHTML += `\n          <div class=\"card\">\n              <div class=\"card-header\" id=\"${accordionId}-heading-${idx}\">\n                  <h2 class=\"mb-0\">\n                      <button class=\"btn btn-link\" type=\"button\" data-toggle=\"collapse\" data-target=\"#${collapseId}\" aria-expanded=\"true\" aria-controls=\"${collapseId}\">\n                          <i class=\"fas fa-bolt\"></i> Шаг ${idx + 1}: ${prompt.name}\n                      </button>\n                  </h2>\n              </div>\n              <div id=\"${collapseId}\" class=\"collapse\" aria-labelledby=\"${accordionId}-heading-${idx}\" data-parent=\"#${accordionId}\">\n                  <div class=\"card-body\">\n                      <p><strong>Описание промпта:</strong> ${prompt.text || 'Нет описания'}</p>\n                      <p><strong>Модель:</strong> ${prompt.model}</p>\n                      <p><strong>Результат после этого шага будет отображаться здесь после обработки.</strong></p>\n                      <div id=\"fuuga_multiprompt-step-result-${idx}\" class=\"mt-2\"></div>\n                  </div>\n              </div>\n          </div>\n      `;\n  });\n\n  // Formatting step\n  const mainSettings = JSON.parse(localStorage.getItem('mainSettings') || '{}');\n  const applyFormatting = mainSettings.applyFormatting || false;\n  if (applyFormatting) {\n      accordionHTML += `\n          <div class=\"card\">\n              <div class=\"card-header\" id=\"${accordionId}-heading-formatting\">\n                  <h2 class=\"mb-0\">\n                      <button class=\"btn btn-link\" type=\"button\" data-toggle=\"collapse\" data-target=\"#${accordionId}-collapse-formatting\" aria-expanded=\"true\" aria-controls=\"${accordionId}-collapse-formatting\">\n                          <i class=\"fas fa-paint-brush\"></i> Применение форматирования\n                      </button>\n                  </h2>\n              </div>\n              <div id=\"${accordionId}-collapse-formatting\" class=\"collapse\" aria-labelledby=\"${accordionId}-heading-formatting\" data-parent=\"#${accordionId}\">\n                  <div class=\"card-body\">\n                      <p>Финальный текст будет отформатирован с использованием выбранной модели форматирования.</p>\n                  </div>\n              </div>\n          </div>\n      `;\n  }\n\n  accordionHTML += '</div>';\n\n  multipromptFlowDiv.innerHTML = accordionHTML;\n\n  // Re-initialize Bootstrap collapse for dynamically added elements\n  $('.collapse').collapse();\n}\n\nfunction saveHomeSettingsHome() {\n  const mainSettings = JSON.parse(localStorage.getItem('mainSettings') || '{}');\n\n  mainSettings.applyFormatting = document.getElementById('fuuga_apply-formatting').checked;\n\n  mainSettings.splitIntoChunks = document.getElementById('fuuga_split-into-chunks-checkbox').checked;\n\n  mainSettings.chunkSize = document.getElementById('fuuga_chunk-size').value;\n\n  mainSettings.maxChars = document.getElementById('fuuga_max-chars').value;\n\n  mainSettings.temperature = document.getElementById('fuuga_temperature').value;\n\n  mainSettings.maxTokens = document.getElementById('fuuga_max-tokens').value;\n\n  mainSettings.formattingTemperature = document.getElementById('fuuga_formatting-temperature').value;\n\n  mainSettings.formattingMaxTokens = document.getElementById('fuuga_formatting-max-tokens').value;\n\n  mainSettings.formattingModel = $('#fuuga_formatting-model').val();\n\n  mainSettings.enableLogger = document.getElementById('fuuga_enable-logger').checked;\n\n  mainSettings.loggerLevel = document.getElementById('fuuga_logger-level').value;\n\n  mainSettings.customLoggerPrompt = document.getElementById('fuuga_custom-logger-prompt').value;\n\n  mainSettings.loggerTemperature = document.getElementById('fuuga_logger-temperature').value;\n\n  mainSettings.loggerMaxTokens = document.getElementById('fuuga_logger-max-tokens').value;\n\n  mainSettings.loggerModel = $('#fuuga_logger-model').val();\n\n  mainSettings.editLoggerPrompts = document.getElementById('fuuga_edit-logger-prompts').checked;\n\n  // Save logger prompts\n  const loggerPrompts = {};\n  loggerPrompts.minimal = document.getElementById('fuuga_logger-prompt-minimal').value;\n  loggerPrompts.medium = document.getElementById('fuuga_logger-prompt-medium').value;\n  loggerPrompts.maximal = document.getElementById('fuuga_logger-prompt-maximal').value;\n  mainSettings.loggerPrompts = loggerPrompts;\n\n  // Note: Do not save lastSelectedPromptIndex and lastSelectedMultipromptIndices in presets\n\n  localStorage.setItem('mainSettings', JSON.stringify(mainSettings));\n\n  updatePresetJSON();\n}\n\n\n\n\nfunction loadHomeSettingsHome() {\n  const mainSettings = JSON.parse(localStorage.getItem('mainSettings') || '{}');\n\n  const applyFormatting = mainSettings.applyFormatting || false;\n  document.getElementById('fuuga_apply-formatting').checked = applyFormatting;\n\n  const splitIntoChunks = mainSettings.splitIntoChunks || false;\n  document.getElementById('fuuga_split-into-chunks-checkbox').checked = splitIntoChunks;\n\n  const chunkSize = mainSettings.chunkSize || 8;\n  document.getElementById('fuuga_chunk-size').value = chunkSize;\n\n  const maxChars = mainSettings.maxChars || 2000;\n  document.getElementById('fuuga_max-chars').value = maxChars;\n\n  const temperature = mainSettings.temperature || 0.5;\n  document.getElementById('fuuga_temperature').value = temperature;\n\n  const maxTokens = mainSettings.maxTokens || 4000;\n  document.getElementById('fuuga_max-tokens').value = maxTokens;\n\n  const formattingTemperature = mainSettings.formattingTemperature || 0.5;\n  document.getElementById('fuuga_formatting-temperature').value = formattingTemperature;\n\n  const formattingMaxTokens = mainSettings.formattingMaxTokens || 1000;\n  document.getElementById('fuuga_formatting-max-tokens').value = formattingMaxTokens;\n\n  const formattingModel = mainSettings.formattingModel;\n  if (formattingModel) {\n      $('#fuuga_formatting-model').val(formattingModel).trigger('change');\n  }\n\n  const enableLogger = mainSettings.enableLogger || false;\n  document.getElementById('fuuga_enable-logger').checked = enableLogger;\n\n  if (enableLogger) {\n      document.getElementById('fuuga_multiprompt-logger-tab').style.display = 'block';\n  } else {\n      document.getElementById('fuuga_multiprompt-logger-tab').style.display = 'none';\n  }\n\n  const loggerLevel = mainSettings.loggerLevel || 'minimal';\n  document.getElementById('fuuga_logger-level').value = loggerLevel;\n\n  if (loggerLevel === 'custom') {\n      document.getElementById('fuuga_custom-logger-prompt-container').style.display = 'block';\n  } else {\n      document.getElementById('fuuga_custom-logger-prompt-container').style.display = 'none';\n  }\n\n  const customLoggerPrompt = mainSettings.customLoggerPrompt || '';\n  document.getElementById('fuuga_custom-logger-prompt').value = customLoggerPrompt;\n\n  const loggerTemperature = mainSettings.loggerTemperature || 0.3;\n  document.getElementById('fuuga_logger-temperature').value = loggerTemperature;\n\n  const loggerMaxTokens = mainSettings.loggerMaxTokens || 500;\n  document.getElementById('fuuga_logger-max-tokens').value = loggerMaxTokens;\n\n  const loggerModel = mainSettings.loggerModel;\n  if (loggerModel) {\n      $('#fuuga_logger-model').val(loggerModel).trigger('change');\n  }\n\n  const editLoggerPrompts = mainSettings.editLoggerPrompts || false;\n  document.getElementById('fuuga_edit-logger-prompts').checked = editLoggerPrompts;\n\n  const loggerPromptsAccordion = document.getElementById('fuuga_logger-prompts-accordion');\n  loggerPromptsAccordion.style.display = editLoggerPrompts ? 'block' : 'none';\n\n  // Load logger prompts\n  const loggerPrompts = getDefaultLoggerPromptsHome();\n  const savedLoggerPrompts = mainSettings.loggerPrompts || {};\n\n  document.getElementById('fuuga_logger-prompt-minimal').value =\n      savedLoggerPrompts.minimal || loggerPrompts.minimal;\n\n  document.getElementById('fuuga_logger-prompt-medium').value =\n      savedLoggerPrompts.medium || loggerPrompts.medium;\n\n  document.getElementById('fuuga_logger-prompt-maximal').value =\n      savedLoggerPrompts.maximal || loggerPrompts.maximal;\n\n  // Load last selected prompt index\n  const lastSelectedPromptIndex = mainSettings.lastSelectedPromptIndex;\n  if (lastSelectedPromptIndex !== undefined && lastSelectedPromptIndex !== null) {\n      $('#fuuga_prompt-select').val(lastSelectedPromptIndex).trigger('change');\n  }\n\n  // Load last selected multiprompt indices\n  const lastSelectedMultipromptIndices = mainSettings.lastSelectedMultipromptIndices;\n  if (lastSelectedMultipromptIndices && lastSelectedMultipromptIndices.length > 0) {\n      $('#fuuga_multiprompt-select').val(lastSelectedMultipromptIndices).trigger('change');\n      updateSelectedPromptsList(lastSelectedMultipromptIndices);\n  }\n}\n\n\n\n// Implement the functions that were previously omitted\n\nasync function processSelectedTextHome() {\n  try {\n      const selectionContext = await createSelectionMarkersHome();\n\n      if (!lastSelectedPrompt) return;\n\n      const splitIntoChunks = document.getElementById('fuuga_split-into-chunks-checkbox').checked;\n      const chunkSize = parseInt(document.getElementById('fuuga_chunk-size').value, 10) || 8;\n\n      // Reset progress bar and results\n      document.getElementById('fuuga_home-results').innerHTML = '';\n      resetProgressBarHome();\n\n      showLoadingHome(true, splitIntoChunks);\n\n      // Disable button until completion or cancellation\n      document.getElementById('fuuga_process-text').disabled = true;\n\n      // Create a new AbortController for cancellation\n      window.abortController = new AbortController();\n\n      const maxChars = parseInt(document.getElementById('fuuga_max-chars').value, 10) || 0;\n\n      if (selectionContext.text.length > 0) {\n          if (!splitIntoChunks && maxChars > 0 && selectionContext.text.length > maxChars) {\n              document.getElementById('fuuga_home-results').innerHTML = `<p class=\"text-warning\">Выделенный текст слишком длинный (${selectionContext.text.length} символов). Пожалуйста, выделите меньше ${maxChars} символов или измените ограничение в настройках.</p>`;\n              showLoadingHome(false);\n              document.getElementById('fuuga_process-text').disabled = false;\n              return;\n          }\n\n          const applyFormatting = document.getElementById('fuuga_apply-formatting').checked;\n          const formattingModel = $('#fuuga_formatting-model').val();\n          const formattingTemperature = parseFloat(document.getElementById('fuuga_formatting-temperature').value) || 0.5;\n          const formattingMaxTokens = parseInt(document.getElementById('fuuga_formatting-max-tokens').value, 10) || 1000;\n          const temperature = parseFloat(document.getElementById('fuuga_temperature').value) || 0.5;\n          const maxTokens = parseInt(document.getElementById('fuuga_max-tokens').value, 10) || 4000;\n\n          const enableLogger = document.getElementById('fuuga_enable-logger').checked;\n          const loggerLevel = document.getElementById('fuuga_logger-level').value;\n          const loggerModel = $('#fuuga_logger-model').val();\n          const loggerTemperature = parseFloat(document.getElementById('fuuga_logger-temperature').value) || 0.3;\n          const loggerMaxTokens = parseInt(document.getElementById('fuuga_logger-max-tokens').value, 10) || 500;\n          const customLoggerPrompt = document.getElementById('fuuga_custom-logger-prompt').value;\n\n          // Load logger prompts\n          const loggerPromptMinimal = document.getElementById('fuuga_logger-prompt-minimal').value;\n          const loggerPromptMedium = document.getElementById('fuuga_logger-prompt-medium').value;\n          const loggerPromptMaximal = document.getElementById('fuuga_logger-prompt-maximal').value;\n\n          let generatedTexts = [];\n          let totalFormattingInfo = [];\n          let loggerOutputs = [];\n\n          if (splitIntoChunks) {\n              const chunks = splitTextIntoChunksHome(selectionContext.text, chunkSize);\n              const totalChunks = chunks.length;\n              const progressBar = document.getElementById('fuuga_progress-bar');\n              const progressText = document.getElementById('fuuga_progress-text');\n              const currentStepText = document.getElementById('fuuga_current-step');\n\n              // Initialize progress bar with total chunks\n              progressText.innerText = `Обработано 0 из ${totalChunks} чанков`;\n\n              for (let i = 0; i < chunks.length; i++) {\n                  const chunk = chunks[i];\n\n                  currentStepText.innerText = `Выполняется обработка чанка ${i + 1}`;\n\n                  const { generatedText, formattingInfo, loggerOutput } = await processChunkWithRetryHome(\n                      chunk,\n                      temperature,\n                      maxTokens,\n                      window.abortController.signal,\n                      applyFormatting,\n                      formattingModel,\n                      formattingTemperature,\n                      formattingMaxTokens,\n                      lastSelectedPrompt,\n                      enableLogger,\n                      loggerLevel,\n                      loggerModel,\n                      loggerTemperature,\n                      loggerMaxTokens,\n                      customLoggerPrompt,\n                      {\n                          loggerPromptMinimal,\n                          loggerPromptMedium,\n                          loggerPromptMaximal\n                      },\n                      1,\n                      true\n                  );\n\n                  generatedTexts.push(generatedText);\n\n                  if (applyFormatting && formattingInfo) {\n                      totalFormattingInfo = totalFormattingInfo.concat(formattingInfo);\n                  }\n\n                  if (enableLogger && loggerOutput) {\n                      loggerOutputs.push(loggerOutput);\n                  }\n\n                  // Update progress bar\n                  const progressPercent = Math.round(((i + 1) / totalChunks) * 100);\n                  progressBar.style.width = `${progressPercent}%`;\n                  progressBar.innerText = `${progressPercent}%`;\n                  progressText.innerText = `Обработано ${i + 1} из ${totalChunks} чанков`;\n              }\n          } else {\n              const currentStepSpinner = document.getElementById('fuuga_current-step-spinner');\n              currentStepSpinner.innerText = 'Выполняется обработка промпта';\n\n              const { generatedText, formattingInfo, loggerOutput } = await processChunkWithRetryHome(\n                  selectionContext.text,\n                  temperature,\n                  maxTokens,\n                  window.abortController.signal,\n                  applyFormatting,\n                  formattingModel,\n                  formattingTemperature,\n                  formattingMaxTokens,\n                  lastSelectedPrompt,\n                  enableLogger,\n                  loggerLevel,\n                  loggerModel,\n                  loggerTemperature,\n                  loggerMaxTokens,\n                  customLoggerPrompt,\n                  {\n                      loggerPromptMinimal,\n                      loggerPromptMedium,\n                      loggerPromptMaximal\n                  },\n                  1,\n                  true\n              );\n              generatedTexts.push(generatedText);\n\n              if (applyFormatting && formattingInfo) {\n                  totalFormattingInfo = formattingInfo;\n              }\n\n              if (enableLogger && loggerOutput) {\n                  loggerOutputs.push(loggerOutput);\n              }\n          }\n\n          const finalText = generatedTexts.join(' ');\n\n          // Apply the generated text\n          await Word.run(async (context) => {\n              const body = context.document.body;\n              const startRange = body.search(\"START_TIMESTAMP\", { matchCase: true }).getFirst();\n              const endRange = body.search(\"END_TIMESTAMP\", { matchCase: true }).getFirst();\n              const fullRange = startRange.expandTo(endRange);\n\n              fullRange.font.size = 13; // Стандартный размер шрифта\n              fullRange.font.color = 'black';\n              await context.sync();\n\n              if (applyFormatting) {\n                  await applyFormattedText(context, fullRange, finalText, totalFormattingInfo);\n              } else {\n                  fullRange.insertText(finalText, Word.InsertLocation.replace);\n              }\n\n              // Удаляем только маркеры, а не весь диапазон\n              startRange.delete();\n              endRange.delete();\n\n              await context.sync();\n          });\n\n          if (enableLogger && loggerOutputs.length > 0) {\n              displayLoggerOutputs(loggerOutputs, 'fuuga_logger-output');\n          }\n\n          document.getElementById('fuuga_home-results').innerHTML = '<p class=\"text-success\">Обработка завершена успешно.</p>';\n      } else {\n          console.log('Текст не выделен');\n          document.getElementById('fuuga_home-results').innerHTML = '<p class=\"text-warning\">Пожалуйста, выделите текст для обработки.</p>';\n          showLoadingHome(false);\n      }\n  } catch (error) {\n      if (error.name === 'AbortError') {\n          console.log('Обработка отменена пользователем.');\n          document.getElementById('fuuga_home-results').innerHTML = '<p class=\"text-info\">Обработка отменена.</p>';\n      } else {\n          console.error('Error in processSelectedText:', error);\n          document.getElementById('fuuga_home-results').innerHTML = '<p class=\"text-danger\">Произошла ошибка при обработке. Пожалуйста, попробуйте еще раз.</p>';\n      }\n  } finally {\n      showLoadingHome(false);\n      window.abortController = null;\n      document.getElementById('fuuga_process-text').disabled = false;\n      await cleanAllTimestampsHome();\n  }\n}\n\n\n\n\nasync function processMultipromptText() {\n  try {\n      const selectionContext = await createSelectionMarkersHome();\n\n      const selectedItems = $('#fuuga_selected-prompts-list').children('li');\n      const prompts = getPrompts();\n\n      const selectedPrompts = [];\n      selectedItems.each(function () {\n          const index = $(this).data('promptIndex');\n          selectedPrompts.push(prompts[index]);\n      });\n\n      if (selectedPrompts.length === 0) {\n          showModalAlert('Пожалуйста, выберите хотя бы один промпт.');\n          return;\n      }\n\n      // Reset progress bar and results\n      document.getElementById('fuuga_multiprompt-results').innerHTML = '';\n      resetMultipromptProgressBar();\n\n      showMultipromptLoading(true);\n\n      // Disable button until completion or cancellation\n      document.getElementById('fuuga_process-multiprompt-text').disabled = true;\n\n      // Create a new AbortController for cancellation\n      window.abortController = new AbortController();\n\n      const maxChars = parseInt(document.getElementById('fuuga_max-chars').value, 10) || 0;\n\n      if (selectionContext.text.length > 0) {\n          if (maxChars > 0 && selectionContext.text.length > maxChars) {\n              document.getElementById('fuuga_multiprompt-results').innerHTML = `<p class=\"text-warning\">Выделенный текст слишком длинный (${selectionContext.text.length} символов). Пожалуйста, выделите меньше ${maxChars} символов или измените ограничение в настройках.</p>`;\n              showMultipromptLoading(false);\n              document.getElementById('fuuga_process-multiprompt-text').disabled = false;\n              return;\n          }\n\n          const applyFormatting = document.getElementById('fuuga_apply-formatting').checked;\n          const formattingModel = $('#fuuga_formatting-model').val();\n          const formattingTemperature = parseFloat(document.getElementById('fuuga_formatting-temperature').value) || 0.5;\n          const formattingMaxTokens = parseInt(document.getElementById('fuuga_formatting-max-tokens').value, 10) || 1000;\n          const temperature = parseFloat(document.getElementById('fuuga_temperature').value) || 0.5;\n          const maxTokens = parseInt(document.getElementById('fuuga_max-tokens').value, 10) || 4000;\n\n          const enableLogger = document.getElementById('fuuga_enable-logger').checked;\n          const loggerLevel = document.getElementById('fuuga_logger-level').value;\n          const loggerModel = $('#fuuga_logger-model').val();\n          const loggerTemperature = parseFloat(document.getElementById('fuuga_logger-temperature').value) || 0.3;\n          const loggerMaxTokens = parseInt(document.getElementById('fuuga_logger-max-tokens').value, 10) || 500;\n          const customLoggerPrompt = document.getElementById('fuuga_custom-logger-prompt').value;\n\n          // Load logger prompts\n          const loggerPromptMinimal = document.getElementById('fuuga_logger-prompt-minimal').value;\n          const loggerPromptMedium = document.getElementById('fuuga_logger-prompt-medium').value;\n          const loggerPromptMaximal = document.getElementById('fuuga_logger-prompt-maximal').value;\n\n          let currentText = selectionContext.text;\n          let loggerOutputs = [];\n\n          // Update visualization original text\n          document.getElementById('fuuga_multiprompt-original-text').innerText = currentText;\n\n          for (let i = 0; i < selectedPrompts.length; i++) {\n              const prompt = selectedPrompts[i];\n\n              const currentStepText = document.getElementById('fuuga_multiprompt-current-step');\n              currentStepText.innerText = `Выполняется промпт ${i + 1}: ${prompt.name}`;\n\n              const { generatedText, loggerOutput } = await processChunkWithRetryHome(\n                  currentText,\n                  temperature,\n                  maxTokens,\n                  window.abortController.signal,\n                  false, // не применяем форматирование на каждом шаге\n                  formattingModel,\n                  formattingTemperature,\n                  formattingMaxTokens,\n                  prompt,\n                  enableLogger,\n                  loggerLevel,\n                  loggerModel,\n                  loggerTemperature,\n                  loggerMaxTokens,\n                  customLoggerPrompt,\n                  {\n                      loggerPromptMinimal,\n                      loggerPromptMedium,\n                      loggerPromptMaximal\n                  },\n                  1,\n                  false\n              );\n\n              currentText = generatedText;\n\n              // Update visualization step result\n              document.getElementById(`fuuga_multiprompt-step-result-${i}`).innerText = currentText;\n\n              if (enableLogger && loggerOutput) {\n                  loggerOutputs.push(loggerOutput);\n              }\n\n              // Update progress bar\n              const totalSteps = selectedPrompts.length;\n              const progressPercent = Math.round(((i + 1) / totalSteps) * 100);\n              const progressBar = document.getElementById('fuuga_multiprompt-progress-bar');\n              const progressText = document.getElementById('fuuga_multiprompt-progress-text');\n              progressBar.style.width = `${progressPercent}%`;\n              progressBar.innerText = `${progressPercent}%`;\n              progressText.innerText = `Обработано ${i + 1} из ${totalSteps} шагов`;\n          }\n\n          // Apply final text and formatting\n          await Word.run(async (context) => {\n            const body = context.document.body;\n            const startRange = body.search(\"START_TIMESTAMP\", { matchCase: true }).getFirst();\n            const endRange = body.search(\"END_TIMESTAMP\", { matchCase: true }).getFirst();\n            const fullRange = startRange.expandTo(endRange);\n        \n            fullRange.load(\"text\");\n            await context.sync();\n        \n            // Устанавливаем стандартный размер шрифта и цвет\n            fullRange.font.size = 13;\n            fullRange.font.color = 'black';\n            await context.sync();\n        \n            if (applyFormatting) {\n                const currentStepText = document.getElementById('fuuga_multiprompt-current-step');\n                currentStepText.innerText = `Применяется форматирование`;\n        \n                // Get original formatting info\n                const originalFormattingInfo = await getWordsInfo(context, fullRange);\n        \n                // Generate updated formatting\n                const updatedFormattingInfo = await getUpdatedFormattingInfo(\n                    originalFormattingInfo,\n                    fullRange.text,\n                    currentText,\n                    formattingModel,\n                    formattingTemperature,\n                    formattingMaxTokens,\n                    window.abortController.signal\n                );\n        \n                // Apply formatted text\n                await applyFormattedText(context, fullRange, currentText, updatedFormattingInfo);\n            } else {\n                fullRange.insertText(currentText, Word.InsertLocation.replace);\n            }\n        \n            // Удаляем маркеры\n            startRange.delete();\n            endRange.delete();\n        \n            await context.sync();\n        });\n\n          if (enableLogger && loggerOutputs.length > 0) {\n              displayLoggerOutputs(loggerOutputs, 'fuuga_multiprompt-logger-output');\n          }\n\n          document.getElementById('fuuga_multiprompt-results').innerHTML = '<p class=\"text-success\">Обработка завершена успешно.</p>';\n      } else {\n          console.log('Текст не выделен');\n          document.getElementById('fuuga_multiprompt-results').innerHTML = '<p class=\"text-warning\">Пожалуйста, выделите текст для обработки.</p>';\n          showMultip\n\nromptLoading(false);\n      }\n  } catch (error) {\n      if (error.name === 'AbortError') {\n          console.log('Обработка отменена пользователем.');\n          document.getElementById('fuuga_multiprompt-results').innerHTML =\n              '<p class=\"text-info\">Обработка отменена.</p>';\n      } else {\n          console.error('Error in processMultipromptText:', error);\n          document.getElementById('fuuga_multiprompt-results').innerHTML =\n              '<p class=\"text-danger\">Произошла ошибка при обработке. Пожалуйста, попробуйте еще раз.</p>';\n      }\n  } finally {\n      showMultipromptLoading(false);\n      window.abortController = null;\n      document.getElementById('fuuga_process-multiprompt-text').disabled = false;\n      await cleanAllTimestampsHome();\n  }\n}\n\n\n\nfunction cancelProcess() {\n  if (window.abortController) {\n      window.abortController.abort();\n      showLoadingHome(false);\n      window.abortController = null;\n      document.getElementById('fuuga_process-text').disabled = false;\n      cleanAllTimestampsHome();\n  }\n}\n\nasync function cleanAllTimestampsHome() {\n  try {\n      await Word.run(async (context) => {\n          const body = context.document.body;\n\n          async function removeMarkers(prefix) {\n              const searchPattern = `${prefix}*`;\n              const searchResults = body.search(searchPattern, { matchWildcards: true });\n              searchResults.load(\"items\");\n              await context.sync();\n\n              for (let range of searchResults.items) {\n                  range.delete();\n              }\n\n              await context.sync();\n          }\n\n          await removeMarkers(\"START_TIMESTAMP\");\n          await removeMarkers(\"END_TIMESTAMP\");\n\n          console.log(\"Все маркеры timestamp успешно удалены.\");\n      });\n  } catch (error) {\n      console.error('Ошибка при удалении маркеров:', error);\n  }\n}\n\nasync function createSelectionMarkersHome() {\n  try {\n      return await Word.run(async (context) => {\n          const selection = context.document.getSelection();\n          selection.load(\"text\");\n          await context.sync();\n\n          const selectionText = selection.text.trim();\n          if (selectionText.length === 0) {\n              throw new Error(\"Нет выделенного текста\");\n          }\n\n          const startMarker = \"START_TIMESTAMP\";\n          const endMarker = \"END_TIMESTAMP\";\n\n          selection.insertText(startMarker, Word.InsertLocation.before);\n          selection.insertText(endMarker, Word.InsertLocation.after);\n\n          const startRange = context.document.body.search(startMarker, { matchCase: true }).getFirst();\n          const endRange = context.document.body.search(endMarker, { matchCase: true }).getFirst();\n\n          startRange.font.size = 1;\n          endRange.font.size = 1;\n          startRange.font.color = \"white\";\n          endRange.font.color = \"white\";\n\n          await context.sync();\n\n          return {\n              text: selectionText\n          };\n      });\n  } catch (error) {\n      console.error('Ошибка при создании маркеров выделения:', error);\n      throw error;\n  }\n}\n\n\nfunction cancelMultipromptProcess() {\n  if (window.abortController) {\n      window.abortController.abort();\n      showMultipromptLoading(false);\n      window.abortController = null;\n      document.getElementById('fuuga_process-multiprompt-text').disabled = false;\n  }\n}\n\nfunction resetProgressBarHome() {\n  const progressBar = document.getElementById('fuuga_progress-bar');\n  const progressText = document.getElementById('fuuga_progress-text');\n  const currentStepText = document.getElementById('fuuga_current-step');\n  if (progressBar) {\n      progressBar.style.width = '0%';\n      progressBar.innerText = '0%';\n  }\n  if (progressText) {\n      progressText.innerText = 'Обработано 0 из 0 чанков';\n  }\n  if (currentStepText) {\n      currentStepText.innerText = '';\n  }\n  const currentStepSpinner = document.getElementById('fuuga_current-step-spinner');\n  if (currentStepSpinner) {\n      currentStepSpinner.innerText = '';\n  }\n}\n\nfunction resetMultipromptProgressBar() {\n  const progressBar = document.getElementById('fuuga_multiprompt-progress-bar');\n  const progressText = document.getElementById('fuuga_multiprompt-progress-text');\n  const currentStepText = document.getElementById('fuuga_multiprompt-current-step');\n  if (progressBar) {\n      progressBar.style.width = '0%';\n      progressBar.innerText = '0%';\n  }\n  if (progressText) {\n      progressText.innerText = 'Обработано 0 из 0 шагов';\n  }\n  if (currentStepText) {\n      currentStepText.innerText = '';\n  }\n  const currentStepSpinner = document.getElementById('fuuga_multiprompt-current-step-spinner');\n  if (currentStepSpinner) {\n      currentStepSpinner.innerText = '';\n  }\n}\n\nfunction splitTextIntoChunksHome(text, chunkSize) {\n  const sentences = text.match(/[^.!?]+[.!?]+(\\s|$)|[^.!?]+$/g) || [text];\n  const chunks = [];\n  for (let i = 0; i < sentences.length; i += chunkSize) {\n      const chunk = sentences\n          .slice(i, i + chunkSize)\n          .join(' ')\n          .trim();\n      chunks.push(chunk);\n  }\n  return chunks;\n}\n\nasync function processChunkWithRetryHome(\n  text,\n  temperature,\n  maxTokens,\n  signal,\n  applyFormatting,\n  formattingModel,\n  formattingTemperature,\n  formattingMaxTokens,\n  prompt,\n  enableLogger,\n  loggerLevel,\n  loggerModel,\n  loggerTemperature,\n  loggerMaxTokens,\n  customLoggerPrompt,\n  loggerPrompts,\n  retryCount = 1,\n  isSinglePrompt = false\n) {\n  let attempts = 0;\n\n  while (attempts < retryCount) {\n      try {\n          const result = await processChunkHome(\n              text,\n              temperature,\n              maxTokens,\n              signal,\n              applyFormatting,\n              formattingModel,\n              formattingTemperature,\n              formattingMaxTokens,\n              prompt,\n              enableLogger,\n              loggerLevel,\n              loggerModel,\n              loggerTemperature,\n              loggerMaxTokens,\n              customLoggerPrompt,\n              loggerPrompts,\n              isSinglePrompt\n          );\n\n          // Убедимся, что результат содержит все необходимые свойства\n          return {\n              generatedText: result.generatedText || '',\n              formattingInfo: result.formattingInfo || [],\n              loggerOutput: result.loggerOutput || null\n          };\n      } catch (error) {\n          if (error.name === 'AbortError') {\n              throw error;\n          } else {\n              attempts++;\n              if (attempts >= retryCount) {\n                  throw error;\n              } else {\n                  console.warn(`Попытка ${attempts} не удалась. Повторяем...`);\n              }\n          }\n      }\n  }\n\n  // Если все попытки не удались, вернем объект с пустыми значениями\n  return {\n      generatedText: '',\n      formattingInfo: [],\n      loggerOutput: null\n  };\n}\n\n\nasync function processChunkHome(\n  text,\n  temperature,\n  maxTokens,\n  signal,\n  applyFormatting,\n  formattingModel,\n  formattingTemperature,\n  formattingMaxTokens,\n  prompt,\n  enableLogger,\n  loggerLevel,\n  loggerModel,\n  loggerTemperature,\n  loggerMaxTokens,\n  customLoggerPrompt,\n  loggerPrompts,\n  isSinglePrompt\n) {\n  const apiKey = localStorage.getItem('apiKey');\n\n  const promptModel = prompt.model;\n  const promptText = prompt.text;\n\n  // Build system and user prompts\n  const systemPrompt = `Ты - AI помощник по обработке текста. Твоя задача - генерировать только необходимый текст на основе пользовательского промпта. Не добавляй никаких дополнительных комментариев, пояснений или пунктуации. Возвращай только обработанный текст.`;\n\n  const userPrompt = `${promptText}\\n\\nПользователь предоставил следующий текст: \"${text}\"`;\n\n  const requestBody = {\n      model: promptModel,\n      messages: [\n          { role: 'system', content: systemPrompt },\n          { role: 'user', content: userPrompt },\n      ],\n      temperature: temperature,\n      max_tokens: maxTokens,\n  };\n\n  try {\n      const response = await fetch('https://openrouter.ai/api/v1/chat/completions', {\n          method: 'POST',\n          headers: {\n              Authorization: `Bearer ${apiKey}`,\n              'Content-Type': 'application/json',\n              'HTTP-Referer': 'https://www.office.com',\n              'X-Title': 'Word Text Processor',\n          },\n          body: JSON.stringify(requestBody),\n          signal: signal,\n      });\n\n      if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const data = await response.json();\n      console.log('Ответ от сервера:', data.choices[0].message.content.trim());\n\n      let generatedText = data.choices[0].message.content.trim();\n\n      let formattingInfo = [];\n\n      if (applyFormatting && isSinglePrompt) {\n          const currentStepSpinner = document.getElementById('fuuga_current-step-spinner');\n          currentStepSpinner.innerText = 'Применяется форматирование';\n\n          // Get original formatting info\n          const originalFormattingInfo = await Word.run(async (context) => {\n              const selection = context.document.getSelection();\n              return await getWordsInfo(context, selection);\n          });\n\n          // Generate updated formatting\n          formattingInfo = await getUpdatedFormattingInfo(\n              originalFormattingInfo,\n              text,\n              generatedText,\n              formattingModel,\n              formattingTemperature,\n              formattingMaxTokens,\n              signal\n          );\n      }\n\n      // Logger processing\n      let loggerOutput = null;\n      if (enableLogger) {\n          loggerOutput = await processLogger(\n              text,\n              generatedText,\n              prompt,\n              signal,\n              loggerLevel,\n              isSinglePrompt ? 'Single Prompt' : 'Chunk Processing',\n              loggerModel,\n              loggerTemperature,\n              loggerMaxTokens,\n              customLoggerPrompt,\n              loggerPrompts\n          );\n      }\n\n      return { generatedText, formattingInfo, loggerOutput };\n  } catch (error) {\n      if (error.name === 'AbortError') {\n          console.log('Запрос был отменен.');\n          throw error;\n      } else {\n          console.error('Error in processChunkHome:', error);\n          throw error;\n      }\n  }\n}\n\n\nasync function processMultipromptStep(\n  text,\n  prompt,\n  temperature,\n  maxTokens,\n  signal,\n  enableLogger,\n  loggerLevel,\n  loggerModel,\n  loggerTemperature,\n  loggerMaxTokens,\n  customLoggerPrompt,\n  stepNumber\n) {\n  const apiKey = localStorage.getItem('apiKey');\n\n  const promptModel = prompt.model;\n  const promptText = prompt.text;\n\n  // Build system and user prompts\n  const systemPrompt = `Ты - AI помощник по обработке текста. Твоя задача - генерировать только необходимый текст на основе пользовательского промпта. Не добавляй никаких дополнительных комментариев, пояснений или пунктуации. Возвращай только обработанный текст.`;\n\n  const userPrompt = `${promptText}\\n\\nПользователь предоставил следующий текст: \"${text}\"`;\n\n  const requestBody = {\n      model: promptModel,\n      messages: [\n          { role: 'system', content: systemPrompt },\n          { role: 'user', content: userPrompt },\n      ],\n      temperature: temperature,\n      max_tokens: maxTokens,\n  };\n\n  try {\n      const response = await fetch('https://openrouter.ai/api/v1/chat/completions', {\n          method: 'POST',\n          headers: {\n              Authorization: `Bearer ${apiKey}`,\n              'Content-Type': 'application/json',\n              'HTTP-Referer': 'https://www.office.com',\n              'X-Title': 'Word Text Processor',\n          },\n          body: JSON.stringify(requestBody),\n          signal: signal,\n      });\n\n      if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const data = await response.json();\n      console.log('Ответ от сервера:', data.choices[0].message.content.trim());\n\n      let generatedText = data.choices[0].message.content.trim();\n\n      // Logger processing\n      let loggerOutput = null;\n      if (enableLogger) {\n          loggerOutput = await processLogger(\n              text,\n              generatedText,\n              prompt,\n              signal,\n              loggerLevel,\n              `Шаг ${stepNumber}`,\n              loggerModel,\n              loggerTemperature,\n              loggerMaxTokens,\n              customLoggerPrompt\n          );\n      }\n\n      return { generatedText, loggerOutput };\n  } catch (error) {\n      if (error.name === 'AbortError') {\n          console.log('Запрос был отменен.');\n          throw error;\n      } else {\n          console.error('Error in processMultipromptStep:', error);\n          throw error;\n      }\n  }\n}\n\nasync function processLogger(\n  beforeText,\n  afterText,\n  prompt,\n  signal,\n  loggerLevel,\n  stepDescription,\n  loggerModel,\n  loggerTemperature,\n  loggerMaxTokens,\n  customLoggerPrompt\n) {\n  const apiKey = localStorage.getItem('apiKey');\n\n  const mainSettings = JSON.parse(localStorage.getItem('mainSettings') || '{}');\n  const loggerPrompts = mainSettings.loggerPrompts || getDefaultLoggerPromptsHome();\n\n  let loggerPromptText = '';\n\n  if (loggerLevel === 'custom' && customLoggerPrompt) {\n      loggerPromptText = customLoggerPrompt\n          .replace('{{beforeText}}', beforeText)\n          .replace('{{afterText}}', afterText);\n  } else {\n      loggerPromptText = loggerPrompts[loggerLevel] || 'Опишите изменения между текстом до и после обработки.';\n  }\n\n  const systemPrompt = `Ты - AI помощник для логирования изменений текста. Твоя задача - анализировать изменения между исходным и полученным текстами и предоставлять отчет пользователю.\n  \n  Примеры отчета для разных уровней детализации:\n\n  1. Минимальный уровень:\n  {\n      \"level\": \"minimal\",\n      \"message\": \"Текст был сокращен и упрощен.\"\n  }\n\n  2. Средний уровень:\n  {\n      \"level\": \"medium\",\n      \"message\": \"Текст был сокращен, удалены лишние подробности. Улучшена структура предложений для большей ясности.\"\n  }\n\n  3. Максимальный уровень:\n  {\n      \"level\": \"maximal\",\n      \"message\": \"Текст был переработан для сокращения и упрощения. Конкретно, удалены повторяющиеся идеи во втором абзаце. В третьем предложении исправлена грамматическая ошибка: 'он есть' заменено на 'он'. Язык стал более формальным и профессиональным.\",\n      \"details\": \"Детальное описание изменений...\",\n      \"examples\": [\"Пример 1\", \"Пример 2\"]\n  }\n\n  Твой отчет должен соответствовать выбранному уровню детализации и включать только необходимые поля для этого уровня. Другие уровни не нужны. Ответ должен быть валидным JSON объектом без дополнительных комментариев или пояснений.\n  `;\n\n  const userPrompt =\n      loggerLevel === 'custom' && customLoggerPrompt\n          ? loggerPromptText\n          : `${loggerPromptText}\\n\\nПромпт: \"${prompt.name}\"\\n\\nТекст до обработки: \"${beforeText}\"\\n\\nТекст после обработки: \"${afterText}\"`;\n\n  const requestBody = {\n      model: loggerModel,\n      messages: [\n          { role: 'system', content: systemPrompt },\n          { role: 'user', content: userPrompt },\n      ],\n      temperature: loggerTemperature,\n      max_tokens: loggerMaxTokens,\n  };\n\n  try {\n      const response = await fetch('https://openrouter.ai/api/v1/chat/completions', {\n          method: 'POST',\n          headers: {\n              Authorization: `Bearer ${apiKey}`,\n              'Content-Type': 'application/json',\n              'HTTP-Referer': 'https://www.office.com',\n              'X-Title': 'Word Logger',\n          },\n          body: JSON.stringify(requestBody),\n          signal: signal,\n      });\n\n      if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const data = await response.json();\n      console.log('Ответ от сервера (Логер):', data.choices[0].message.content.trim());\n\n      let loggerOutputRaw = data.choices[0].message.content.trim();\n\n      // Парсинг JSON ответа\n      let loggerOutput;\n      try {\n          loggerOutput = JSON.parse(loggerOutputRaw);\n      } catch (parseError) {\n          console.error('Ошибка при парсинге JSON ответа логера:', parseError);\n          return null;\n      }\n\n      // Проверка корректности JSON\n      if (!loggerOutput.level || !loggerOutput.message) {\n          console.error('Некорректный формат JSON ответа логера.');\n          return null;\n      }\n\n      return {\n          stepDescription,\n          promptName: prompt.name,\n          loggerOutput,\n      };\n  } catch (error) {\n      if (error.name === 'AbortError') {\n          console.log('Запрос был отменен.');\n          return null;\n      } else {\n          console.error('Error in processLogger:', error);\n          return null;\n      }\n  }\n}\n\n\nfunction displayLoggerOutputs(loggerOutputs, containerId) {\n  const loggerDiv = document.getElementById(containerId);\n  loggerDiv.innerHTML = '';\n\n  const accordionId = `${containerId}-accordion`;\n\n  let accordionHTML = `<div class=\"accordion\" id=\"${accordionId}\">`;\n\n  loggerOutputs.forEach((log, index) => {\n      const collapseId = `${accordionId}-collapse-${index}`;\n      const headerId = `${accordionId}-heading-${index}`;\n\n      // Определение цвета и иконки в зависимости от уровня\n      let headerClass = '';\n      let iconClass = '';\n      let cardHeaderContent = '';\n\n      switch (log.loggerOutput.level) {\n          case 'minimal':\n              headerClass = 'bg-info text-white';\n              iconClass = 'fas fa-info-circle';\n              break;\n          case 'medium':\n              headerClass = 'bg-warning text-dark';\n              iconClass = 'fas fa-exclamation-triangle';\n              break;\n          case 'maximal':\n              headerClass = 'bg-danger text-white';\n              iconClass = 'fas fa-exclamation-circle';\n              break;\n          default:\n              headerClass = 'bg-secondary text-white';\n              iconClass = 'fas fa-question-circle';\n      }\n\n      // Форматирование содержимого логов\n      const formattedLog = formatLoggerOutput(log.loggerOutput);\n\n      accordionHTML += `\n          <div class=\"card\">\n              <div class=\"card-header ${headerClass}\" id=\"${headerId}\">\n                  <h2 class=\"mb-0\">\n                      <button class=\"btn btn-link text-white\" type=\"button\" data-toggle=\"collapse\" data-target=\"#${collapseId}\" aria-expanded=\"${index === 0 ? 'true' : 'false'}\" aria-controls=\"${collapseId}\">\n                          <i class=\"${iconClass}\"></i> ${log.stepDescription}: ${log.promptName}\n                      </button>\n                  </h2>\n              </div>\n              <div id=\"${collapseId}\" class=\"collapse ${index === 0 ? 'show' : ''}\" aria-labelledby=\"${headerId}\" data-parent=\"#${accordionId}\">\n                  <div class=\"card-body\">\n                      ${formattedLog}\n                  </div>\n              </div>\n          </div>\n      `;\n  });\n\n  accordionHTML += '</div>';\n\n  loggerDiv.innerHTML = accordionHTML;\n}\n\nfunction formatLoggerOutput(loggerOutput) {\n  let html = `\n      <p><strong>Уровень:</strong> ${capitalizeFirstLetter(loggerOutput.level)}</p>\n      <p><strong>Сообщение:</strong> ${loggerOutput.message}</p>\n  `;\n\n  if (loggerOutput.level === 'medium') {\n      if (loggerOutput.details) {\n          html += `<p><strong>Детали:</strong> ${loggerOutput.details}</p>`;\n      }\n  }\n\n  if (loggerOutput.level === 'maximal') {\n      if (loggerOutput.details) {\n          html += `<p><strong>Детали:</strong> ${loggerOutput.details}</p>`;\n      }\n      if (loggerOutput.examples && Array.isArray(loggerOutput.examples)) {\n          html += `<p><strong>Примеры:</strong></p><ul>`;\n          loggerOutput.examples.forEach(example => {\n              html += `<li>${example}</li>`;\n          });\n          html += `</ul>`;\n      }\n  }\n\n  return html;\n}\n\nfunction capitalizeFirstLetter(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\n\nfunction showLoadingHome(isLoading, useProgressBar = false) {\n  const loadingElement = document.getElementById('fuuga_loading');\n  const processButton = document.getElementById('fuuga_process-text');\n  const cancelButton = document.getElementById('fuuga_cancel-process');\n  const progressContainer = document.getElementById('fuuga_progress-container');\n  const spinner = document.getElementById('fuuga_spinner');\n  if (isLoading) {\n      loadingElement.style.display = 'block';\n      processButton.disabled = true;\n      cancelButton.style.display = 'inline-block';\n      if (useProgressBar) {\n          progressContainer.style.display = 'block';\n          spinner.style.display = 'none';\n      } else {\n          progressContainer.style.display = 'none';\n          spinner.style.display = 'block';\n      }\n  } else {\n      loadingElement.style.display = 'none';\n      processButton.disabled = false;\n      cancelButton.style.display = 'none';\n      progressContainer.style.display = 'none';\n      spinner.style.display = 'none';\n  }\n}\n\nfunction showMultipromptLoading(isLoading) {\n  const loadingElement = document.getElementById('fuuga_multiprompt-loading');\n  const processButton = document.getElementById('fuuga_process-multiprompt-text');\n  const cancelButton = document.getElementById('fuuga_cancel-multiprompt-process');\n  const progressContainer = document.getElementById('fuuga_multiprompt-progress-container');\n  const spinner = document.getElementById('fuuga_multiprompt-spinner');\n  if (isLoading) {\n      loadingElement.style.display = 'block';\n      processButton.disabled = true;\n      cancelButton.style.display = 'inline-block';\n      progressContainer.style.display = 'block';\n      spinner.style.display = 'none';\n  } else {\n      loadingElement.style.display = 'none';\n      processButton.disabled = false;\n      cancelButton.style.display = 'none';\n      progressContainer.style.display = 'none';\n      spinner.style.display = 'none';\n  }\n}\n\nfunction showModalAlert(message) {\n  const modalHtml = `\n      <div class=\"modal fade\" id=\"fuuga_alertModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"fuuga_alertModalLabel\" aria-hidden=\"true\">\n        <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\n          <div class=\"modal-content\">\n            <div class=\"modal-header\">\n              <h5 class=\"modal-title\" id=\"fuuga_alertModalLabel\">Внимание</h5>\n              <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Закрыть\">\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n            </div>\n            <div class=\"modal-body\">\n              ${message}\n            </div>\n            <div class=\"modal-footer\">\n              <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\">ОК</button>\n            </div>\n          </div>\n        </div>\n      </div>\n  `;\n\n  $('body').append(modalHtml);\n  $('#fuuga_alertModal').modal('show');\n\n  $('#fuuga_alertModal').on('hidden.bs.modal', function () {\n      $('#fuuga_alertModal').remove();\n  });\n}\n\n// Preset Functions\nfunction initializePresetSelect() {\n  $('#fuuga_preset-select').select2({\n      width: '100%',\n      placeholder: 'Выберите пресет',\n  });\n}\n\nfunction populatePresetSelect() {\n  const select = $('#fuuga_preset-select');\n  select.empty();\n\n  // Add \"Current Settings\" option\n  const currentOption = new Option('Текущие настройки', 'current', false, false);\n  select.append(currentOption);\n\n  let presets = JSON.parse(localStorage.getItem('homePresets') || '[]');\n  let lastSelectedPreset = localStorage.getItem('homeLastSelectedPreset') || null;\n\n  presets.forEach(preset => {\n      const option = new Option(preset.name, preset.name, false, false);\n      select.append(option);\n  });\n\n  if (lastSelectedPreset && lastSelectedPreset !== 'current') {\n      select.val(lastSelectedPreset).trigger('change');\n  } else {\n      // Set \"Current Settings\" if no last selected preset\n      select.val('current').trigger('change');\n  }\n}\n\nfunction loadSelectedPreset() {\n  window.isLoadingPreset = true;\n\n  const presetName = $('#fuuga_preset-select').val();\n  if (!presetName || presetName === 'current') {\n      // If \"Current Settings\" is selected, do nothing\n      window.isLoadingPreset = false;\n      return;\n  }\n\n  let presets = JSON.parse(localStorage.getItem('homePresets') || '[]');\n  const preset = presets.find(p => p.name === presetName);\n  if (!preset) {\n      window.isLoadingPreset = false;\n      return;\n  }\n\n  // Load settings from preset\n  const settings = preset.settings;\n  document.getElementById('fuuga_apply-formatting').checked = settings.applyFormatting;\n  document.getElementById('fuuga_split-into-chunks-checkbox').checked = settings.splitIntoChunks;\n  document.getElementById('fuuga_chunk-size').value = settings.chunkSize;\n  document.getElementById('fuuga_max-chars').value = settings.maxChars;\n  document.getElementById('fuuga_temperature').value = settings.temperature;\n  document.getElementById('fuuga_max-tokens').value = settings.maxTokens;\n  document.getElementById('fuuga_formatting-temperature').value = settings.formattingTemperature;\n  document.getElementById('fuuga_formatting-max-tokens').value = settings.formattingMaxTokens;\n  document.getElementById('fuuga_enable-logger').checked = settings.enableLogger;\n  document.getElementById('fuuga_logger-level').value = settings.loggerLevel;\n  document.getElementById('fuuga_custom-logger-prompt').value = settings.customLoggerPrompt;\n  document.getElementById('fuuga_logger-temperature').value = settings.loggerTemperature;\n  document.getElementById('fuuga_logger-max-tokens').value = settings.loggerMaxTokens;\n  document.getElementById('fuuga_edit-logger-prompts').checked = settings.editLoggerPrompts;\n\n  $('#fuuga_formatting-model').val(settings.formattingModel).trigger('change');\n  $('#fuuga_logger-model').val(settings.loggerModel).trigger('change');\n\n  // Load logger prompts\n  document.getElementById('fuuga_logger-prompt-minimal').value =\n      settings.loggerPrompts.minimal || '';\n  document.getElementById('fuuga_logger-prompt-medium').value =\n      settings.loggerPrompts.medium || '';\n  document.getElementById('fuuga_logger-prompt-maximal').value =\n      settings.loggerPrompts.maximal || '';\n\n  // Show or hide custom logger prompt container\n  if (settings.loggerLevel === 'custom') {\n      document.getElementById('fuuga_custom-logger-prompt-container').style.display = 'block';\n  } else {\n      document.getElementById('fuuga_custom-logger-prompt-container').style.display = 'none';\n  }\n\n  // Show or hide logger prompts accordion\n  const editLoggerPrompts = document.getElementById('fuuga_edit-logger-prompts').checked;\n  const loggerPromptsAccordion = document.getElementById('fuuga_logger-prompts-accordion');\n  loggerPromptsAccordion.style.display = editLoggerPrompts ? 'block' : 'none';\n\n  // Save settings to localStorage\n  saveHomeSettingsHome();\n\n  // Set last selected preset\n  localStorage.setItem('homeLastSelectedPreset', presetName);\n\n  // Update preset JSON\n  updatePresetJSON();\n\n  window.isLoadingPreset = false;\n}\n\nfunction saveCurrentSettingsAsPreset() {\n  const presetNameInput = document.getElementById('fuuga_preset-name');\n  const presetName = presetNameInput.value.trim();\n  if (!presetName) {\n      displayPresetMessage('Название пресета не может быть пустым.', 'danger');\n      return;\n  }\n\n  if (presetName.toLowerCase() === 'current' || presetName === 'Текущие настройки') {\n      displayPresetMessage('Название пресета не может быть \"Текущие настройки\".', 'danger');\n      return;\n  }\n\n  const preset = {\n      name: presetName,\n      settings: getCurrentSettings(),\n  };\n\n  let presets = JSON.parse(localStorage.getItem('homePresets') || '[]');\n\n  // Check if preset with same name exists\n  const existingIndex = presets.findIndex(p => p.name === presetName);\n  if (existingIndex !== -1) {\n      // Offer to overwrite existing preset\n      showPresetConfirmation(`Пресет с названием \"${presetName}\" уже существует. Перезаписать его?`, () => {\n          presets[existingIndex] = preset;\n          localStorage.setItem('homePresets', JSON.stringify(presets));\n          populatePresetSelect();\n\n          // Select the newly created preset\n          $('#fuuga_preset-select').val(preset.name).trigger('change');\n          localStorage.setItem('homeLastSelectedPreset', preset.name);\n\n          displayPresetMessage('Пресет сохранен.', 'success');\n\n          // Clear preset name input\n          presetNameInput.value = '';\n\n          // Update preset JSON\n          updatePresetJSON();\n      });\n  } else {\n      presets.push(preset);\n      localStorage.setItem('homePresets', JSON.stringify(presets));\n      populatePresetSelect();\n\n      // Select the newly created preset\n      $('#fuuga_preset-select').val(preset.name).trigger('change');\n      localStorage.setItem('homeLastSelectedPreset', preset.name);\n\n      displayPresetMessage('Пресет сохранен.', 'success');\n\n      // Clear preset name input\n      presetNameInput.value = '';\n\n      // Update preset JSON\n      updatePresetJSON();\n  }\n}\n\nfunction deleteSelectedPreset() {\n  const presetName = $('#fuuga_preset-select').val();\n  if (!presetName || presetName === 'current') {\n      displayPresetMessage('Нет выбранного пресета для удаления.', 'danger');\n      return;\n  }\n\n  showPresetConfirmation(`Вы уверены, что хотите удалить пресет \"${presetName}\"?`, () => {\n      let presets = JSON.parse(localStorage.getItem('homePresets') || '[]');\n      presets = presets.filter(p => p.name !== presetName);\n      localStorage.setItem('homePresets', JSON.stringify(presets));\n\n      // Reset preset selection\n      $('#fuuga_preset-select').val('current').trigger('change');\n      localStorage.removeItem('homeLastSelectedPreset');\n\n      populatePresetSelect();\n\n      displayPresetMessage('Пресет удален.', 'success');\n\n      // Clear JSON field\n      document.getElementById('fuuga_preset-json').value = '';\n  });\n}\n\nfunction updatePresetJSON() {\n  const presetName = $('#fuuga_preset-select').val();\n  if (!presetName || presetName === 'current') {\n      document.getElementById('fuuga_preset-json').value = '';\n      return;\n  }\n\n  let presets = JSON.parse(localStorage.getItem('homePresets') || '[]');\n  const preset = presets.find(p => p.name === presetName);\n  if (!preset) {\n      document.getElementById('fuuga_preset-json').value = '';\n      return;\n  }\n\n  const presetJSON = JSON.stringify(preset, null, 2);\n  document.getElementById('fuuga_preset-json').value = presetJSON;\n}\n\nfunction getDefaultLoggerPromptsHome() {\n  return {\n      minimal: 'Опишите кратко изменения между текстом до и после обработки.',\n      medium: 'Опишите изменения между текстом до и после обработки, упомяните ключевые изменения.',\n      maximal: 'Детально опишите все изменения между текстом до и после обработки, включая использование промпта.',\n  };\n}\n\n\n\nfunction copyPresetJSON() {\n  const presetJSONTextarea = document.getElementById('fuuga_preset-json');\n  presetJSONTextarea.select();\n  document.execCommand('copy');\n  displayPresetMessage('JSON пресета скопирован в буфер обмена.', 'success');\n}\n\nfunction importPresetFromJSONHome() {\n  const presetJSON = document.getElementById('fuuga_preset-json-import').value;\n  if (!presetJSON) {\n      displayPresetMessage('Поле JSON пустое.', 'danger');\n      return;\n  }\n\n  try {\n      const preset = JSON.parse(presetJSON);\n      if (!preset.name || !preset.settings) {\n          displayPresetMessage('Некорректный формат пресета.', 'danger');\n          return;\n      }\n\n      if (preset.name.toLowerCase() === 'current' || preset.name === 'Текущие настройки') {\n          displayPresetMessage('Название пресета не может быть \"Текущие настройки\".', 'danger');\n          return;\n      }\n\n      let presets = JSON.parse(localStorage.getItem('homePresets') || '[]');\n\n      // Check if preset with same name exists\n      const existingIndex = presets.findIndex(p => p.name === preset.name);\n      if (existingIndex !== -1) {\n          showPresetConfirmation(`Пресет с названием \"${preset.name}\" уже существует. Перезаписать его?`, () => {\n              presets[existingIndex] = preset;\n              localStorage.setItem('homePresets', JSON.stringify(presets));\n              populatePresetSelect();\n              $('#fuuga_preset-select').val(preset.name).trigger('change');\n              localStorage.setItem('homeLastSelectedPreset', preset.name);\n\n              displayPresetMessage('Пресет импортирован.', 'success');\n              updatePresetJSON();\n          });\n      } else {\n          presets.push(preset);\n          localStorage.setItem('homePresets', JSON.stringify(presets));\n          populatePresetSelect();\n          $('#fuuga_preset-select').val(preset.name).trigger('change');\n          localStorage.setItem('homeLastSelectedPreset', preset.name);\n\n          displayPresetMessage('Пресет импортирован.', 'success');\n          updatePresetJSON();\n      }\n  } catch (error) {\n      console.error('Ошибка при импорте пресета:', error);\n      displayPresetMessage('Ошибка при импорте пресета. Проверьте формат JSON.', 'danger');\n  }\n}\n\nfunction getCurrentSettings() {\n  const mainSettings = JSON.parse(localStorage.getItem('mainSettings') || '{}');\n\n  // Do not include lastSelectedPromptIndex and lastSelectedMultipromptIndices in presets\n  const { lastSelectedPromptIndex, lastSelectedMultipromptIndices, ...settings } = mainSettings;\n\n  return settings;\n}\n\nfunction displayPresetMessage(message, type) {\n  const messageDiv = document.getElementById('fuuga_preset-message');\n  messageDiv.innerHTML = `<div class=\"alert alert-${type}\">${message}</div>`;\n  setTimeout(() => {\n      messageDiv.innerHTML = '';\n  }, 3000);\n}\n\nfunction showPresetConfirmation(message, onConfirm) {\n  const confirmationDiv = document.getElementById('fuuga_preset-confirmation');\n  const confirmationMessage = document.getElementById('fuuga_preset-confirmation-message');\n  const confirmYesButton = document.getElementById('fuuga_preset-confirm-yes');\n  const confirmNoButton = document.getElementById('fuuga_preset-confirm-no');\n\n  confirmationMessage.textContent = message;\n  confirmationDiv.style.display = 'block';\n\n  // Remove previous event listeners\n  confirmYesButton.onclick = null;\n  confirmNoButton.onclick = null;\n\n  confirmYesButton.onclick = () => {\n      confirmationDiv.style.display = 'none';\n      onConfirm();\n  };\n\n  confirmNoButton.onclick = () => {\n      confirmationDiv.style.display = 'none';\n  };\n}\n\n// Additional code to fix the Tools tab issue\n async function showSelectedTextInfoHome() {\n  try {\n      await Word.run(async (context) => {\n          const selection = context.document.getSelection();\n          const wordsInfo = await getWordsInfo(context, selection);\n\n          if (wordsInfo.length > 0) {\n              // Подсчёт различных свойств\n              const colorCounts = {};\n              const fontCounts = {};\n              const sizeCounts = {};\n\n              wordsInfo.forEach(word => {\n                  const color = word.color || 'default';\n                  const font = word.fontName || 'default';\n                  const size = word.size || 'default';\n\n                  colorCounts[color] = (colorCounts[color] || 0) + 1;\n                  fontCounts[font] = (fontCounts[font] || 0) + 1;\n                  sizeCounts[size] = (sizeCounts[size] || 0) + 1;\n              });\n\n              const baseColor = getMostCommonValueHome(colorCounts);\n              const baseFont = getMostCommonValueHome(fontCounts);\n              const baseSize = getMostCommonValueHome(sizeCounts);\n\n              displayWordsInfo(wordsInfo, baseColor, baseFont, baseSize);\n          } else {\n              const textInfoDiv = document.getElementById('fuuga_selected-text-info');\n              textInfoDiv.innerHTML = '<p class=\"text-warning\">Пожалуйста, выделите текст для получения информации.</p>';\n          }\n      });\n  } catch (error) {\n      console.error('Error in showSelectedTextInfo:', error);\n      const textInfoDiv = document.getElementById('fuuga_selected-text-info');\n      textInfoDiv.innerHTML = '<p class=\"text-danger\">Произошла ошибка при получении информации о выделенном тексте. Пожалуйста, попробуйте еще раз.</p>';\n  }\n}\n\nfunction getMostCommonValueHome(counts) {\n  return Object.entries(counts).reduce((a, b) => a[1] >= b[1] ? a : b)[0];\n}\n\n\n\n\n\n\n// prompts.js\n\n\n\n function initPrompts() {\n    const promptsTab = document.getElementById('prompts');\n    promptsTab.innerHTML = `\n        <div class=\"mt-3\">\n            <!-- Навигация по основным табам -->\n            <ul class=\"nav nav-tabs\" id=\"crocodile_promptsMainTab\" role=\"tablist\">\n                <li class=\"nav-item\">\n                    <a class=\"nav-link active\" id=\"crocodile_prompts-main-tab\" data-toggle=\"tab\" href=\"#crocodile_promptsMainContent\" role=\"tab\" aria-controls=\"crocodile_promptsMainContent\" aria-selected=\"true\">Промпты</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" id=\"crocodile_presets-main-tab\" data-toggle=\"tab\" href=\"#crocodile_presetsMainContent\" role=\"tab\" aria-controls=\"crocodile_presetsMainContent\" aria-selected=\"false\">Пресеты</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" id=\"crocodile_settings-main-tab\" data-toggle=\"tab\" href=\"#crocodile_settingsMainContent\" role=\"tab\" aria-controls=\"crocodile_settingsMainContent\" aria-selected=\"false\">Настройки</a>\n                </li>\n            </ul>\n            <!-- Содержимое основных табов -->\n            <div class=\"tab-content\" id=\"crocodile_promptsMainTabContent\">\n                <!-- Промпты -->\n                <div class=\"tab-pane fade show active\" id=\"crocodile_promptsMainContent\" role=\"tabpanel\" aria-labelledby=\"crocodile_prompts-main-tab\">\n                    <!-- Навигация по подтабам в Промптах -->\n                    <ul class=\"nav nav-tabs mt-3\" id=\"crocodile_promptsSubTab\" role=\"tablist\">\n                        <li class=\"nav-item\">\n                            <a class=\"nav-link active\" id=\"crocodile_view-prompt-tab\" data-toggle=\"tab\" href=\"#crocodile_viewPromptTabContent\" role=\"tab\" aria-controls=\"crocodile_viewPromptTabContent\" aria-selected=\"true\">Просмотр</a>\n                        </li>\n                        <li class=\"nav-item\">\n                            <a class=\"nav-link\" id=\"crocodile_create-prompt-tab\" data-toggle=\"tab\" href=\"#crocodile_createPromptTabContent\" role=\"tab\" aria-controls=\"crocodile_createPromptTabContent\" aria-selected=\"false\">Создать</a>\n                        </li>\n                    </ul>\n                    <!-- Содержимое подтабов в Промптах -->\n                    <div class=\"tab-content\" id=\"crocodile_promptsSubTabContent\">\n                        <!-- Просмотр Промптов -->\n                        <div class=\"tab-pane fade show active\" id=\"crocodile_viewPromptTabContent\" role=\"tabpanel\" aria-labelledby=\"crocodile_view-prompt-tab\">\n                            <!-- Инструкция для Просмотра Промптов -->\n                            <div class=\"alert alert-info mt-3\">\n                                <strong>Инструкция:</strong>\n                                <p>Просматривайте и управляйте сохранёнными промптами. Вы можете фильтровать и сортировать промпты.</p>\n                            </div>\n                            <!-- Фильтр по тегам и сортировка -->\n                            <div class=\"mt-3 row\">\n                                <div class=\"col-md-6\">\n                                    <div class=\"form-group\">\n                                        <label for=\"crocodile_filter-tags-select\">Фильтр по тегам</label>\n                                        <select id=\"crocodile_filter-tags-select\" class=\"form-control\" multiple></select>\n                                    </div>\n                                </div>\n                                <div class=\"col-md-6\">\n                                    <div class=\"form-group\">\n                                        <label for=\"crocodile_sort-prompts-select\">Сортировка</label>\n                                        <select id=\"crocodile_sort-prompts-select\" class=\"form-control\">\n                                            <option value=\"name_asc\">По названию (A-Z)</option>\n                                            <option value=\"name_desc\">По названию (Z-A)</option>\n                                            <option value=\"length_asc\">По длине промпта (кратчайшие)</option>\n                                            <option value=\"length_desc\">По длине промпта (длиннейшие)</option>\n                                            <option value=\"model_asc\">По модели (A-Z)</option>\n                                            <option value=\"model_desc\">По модели (Z-A)</option>\n                                        </select>\n                                    </div>\n                                </div>\n                            </div>\n                            <!-- Список промптов -->\n                            <div id='crocodile_prompt-list-container' class='mt-4'>\n                                <!-- Здесь будет список промптов -->\n                                <div id=\"crocodile_prompt-list\"></div>\n                            </div>\n                        </div>\n                        <!-- Создать Промпт -->\n                        <div class=\"tab-pane fade\" id=\"crocodile_createPromptTabContent\" role=\"tabpanel\" aria-labelledby=\"crocodile_create-prompt-tab\">\n                            <!-- Инструкция для Создания Промптов -->\n                            <div class=\"alert alert-info mt-3\">\n                                <strong>Инструкция:</strong>\n                                <p>Создавайте новые промпты, указывая название, модель, текст промпта и теги. Вы можете выбрать существующие теги или добавить новые.</p>\n                            </div>\n                            <!-- Форма для добавления/редактирования промптов -->\n                            <div class=\"mt-3\">\n                                <div class=\"form-group\">\n                                    <label for=\"crocodile_prompt-name-input\">Название промпта</label>\n                                    <input type=\"text\" id=\"crocodile_prompt-name-input\" class=\"form-control\" placeholder=\"Введите название промпта\" title=\"Введите название промпта\">\n                                </div>\n                                <div class=\"form-group\">\n                                    <label for=\"crocodile_prompt-model-select\">Модель</label>\n                                    <select id=\"crocodile_prompt-model-select\" class=\"form-control mt-2 select2-init-prompt-models\"></select>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label for=\"crocodile_prompt-textarea-input\">Текст промпта</label>\n                                    <textarea id=\"crocodile_prompt-textarea-input\" class=\"form-control mt-2\" rows=\"5\" placeholder=\"Текст промпта\"></textarea>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label for=\"crocodile_prompt-tags-input\">Теги</label>\n                                    <select id=\"crocodile_prompt-tags-input\" class=\"form-control mt-2\" multiple></select>\n                                </div>\n                                <!-- Новые кнопки -->\n                                <div class=\"mt-2\">\n                                    <button id=\"crocodile_save-prompt-btn\" class=\"btn btn-primary\">Сохранить промпт</button>\n                                    <button id=\"crocodile_clear-input-btn\" class=\"btn btn-secondary ml-2\">Очистить ввод</button>\n                                    <button id=\"crocodile_cancel-edit-btn\" class=\"btn btn-warning ml-2\" style=\"display: none;\">Отменить редактирование</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div> <!-- crocodile_promptsSubTabContent -->\n                </div> <!-- crocodile_promptsMainContent -->\n                <!-- Пресеты -->\n                <div class='tab-pane fade' id='crocodile_presetsMainContent' role='tabpanel' aria-labelledby='crocodile_presets-main-tab'>\n                    <!-- Навигация по подтабам в Пресетах -->\n                    <ul class=\"nav nav-tabs mt-3\" id=\"crocodile_presetsSubTab\" role=\"tablist\">\n                        <li class=\"nav-item\">\n                            <a class=\"nav-link active\" id=\"crocodile_view-preset-tab\" data-toggle=\"tab\" href=\"#crocodile_viewPresetTabContent\" role=\"tab\" aria-controls=\"crocodile_viewPresetTabContent\" aria-selected=\"true\">Просмотр</a>\n                        </li>\n                        <li class=\"nav-item\">\n                            <a class=\"nav-link\" id=\"crocodile_manage-preset-tab\" data-toggle=\"tab\" href=\"#crocodile_managePresetTabContent\" role=\"tab\" aria-controls=\"crocodile_managePresetTabContent\" aria-selected=\"false\">Управление</a>\n                        </li>\n                    </ul>\n                    <!-- Содержимое подтабов в Пресетах -->\n                    <div class=\"tab-content\" id=\"crocodile_presetsSubTabContent\">\n                        <!-- Просмотр Пресетов -->\n                        <div class=\"tab-pane fade show active\" id=\"crocodile_viewPresetTabContent\" role=\"tabpanel\" aria-labelledby=\"crocodile_view-preset-tab\">\n                            <!-- Инструкция для Просмотра Пресетов -->\n                            <div class=\"alert alert-info mt-3\">\n                                <strong>Инструкция:</strong>\n                                <p>Управляйте пресетами ваших промптов. Вы можете просматривать содержимое пресетов и добавлять их к текущим или заменять текущие.</p>\n                            </div>\n                            <div class=\"mt-3\">\n                                <div class=\"form-group\">\n                                    <label for=\"crocodile_preset-select-prompts\">Выберите пресет:</label>\n                                    <select id=\"crocodile_preset-select-prompts\" class=\"form-control\" title=\"Выберите пресет для просмотра\"></select>\n                                </div>\n                                <div class=\"mt-2\">\n                                    <button id=\"crocodile_add-preset-to-prompts-btn\" class=\"btn btn-success mr-2\">Добавить к текущим промптам</button>\n                                    <button id=\"crocodile_replace-prompts-with-preset-btn\" class=\"btn btn-warning mr-2\">Заменить текущие промпты</button>\n                                    <button id=\"crocodile_delete-preset-btn\" class=\"btn btn-danger\">Удалить выбранный пресет</button>\n                                </div>\n                                <!-- Предпросмотр пресета -->\n                                <div class=\"mt-4\">\n                                    <h5>Предпросмотр пресета (<span id=\"crocodile_preset-count\">0</span> промптов):</h5>\n                                    <div id=\"crocodile_preset-preview\"></div>\n                                </div>\n                            </div>\n                        </div>\n                        <!-- Управление Пресетами -->\n                        <div class=\"tab-pane fade\" id=\"crocodile_managePresetTabContent\" role=\"tabpanel\" aria-labelledby=\"crocodile_manage-preset-tab\">\n                            <!-- Инструкция для Управления Пресетов -->\n                            <div class=\"alert alert-info mt-3\">\n                                <strong>Инструкция:</strong>\n                                <p>Создавайте новые пресеты, экспортируйте и импортируйте их в формате JSON.</p>\n                            </div>\n                            <!-- Форма для добавления пресета -->\n                            <div class=\"mt-3\">\n                                <div class=\"form-group\">\n                                    <label for=\"crocodile_preset-name-input\">Название пресета</label>\n                                    <input type=\"text\" id=\"crocodile_preset-name-input\" class=\"form-control\" placeholder=\"Введите название пресета\">\n                                </div>\n                                <button id=\"crocodile_save-preset-btn\" class=\"btn btn-primary\">Сохранить текущие промпты как пресет</button>\n                            </div>\n                            <!-- Выбор пресета для экспорта -->\n                            <div class=\"mt-4\">\n                                <div class=\"form-group\">\n                                    <label for=\"crocodile_preset-select-in-manage\">Выберите пресет для экспорта:</label>\n                                    <select id=\"crocodile_preset-select-in-manage\" class=\"form-control\" title=\"Выберите пресет для управления\"></select>\n                                </div>\n                            </div>\n                            <!-- Экспорт/Импорт пресета -->\n                            <div class=\"mt-4\">\n                                <div class=\"form-group\">\n                                    <label for=\"crocodile_preset-json-input\">JSON Пресета</label>\n                                    <textarea id=\"crocodile_preset-json-input\" class=\"form-control\" rows=\"5\"></textarea>\n                                </div>\n                                <button id=\"crocodile_-preset-btn\" class=\"btn btn-secondary mr-2\">Экспортировать выбранный пресет</button>\n                                <button id=\"crocodile_clear-preset-json-btn\" class=\"btn btn-secondary mr-2\">Очистить поле JSON</button>\n                                <button id=\"crocodile_import-preset-btn\" class=\"btn btn-secondary\">Импортировать пресет из JSON</button>\n                            </div>\n                        </div>\n                    </div> <!-- crocodile_presetsSubTabContent -->\n                </div> <!-- crocodile_presetsMainContent -->\n                <!-- Настройки -->\n                <div class='tab-pane fade' id='crocodile_settingsMainContent' role='tabpanel' aria-labelledby='crocodile_settings-main-tab'>\n                    <div class=\"mt-3\">\n                        <h4>Настройки</h4>\n                        <button id=\"crocodile_delete-all-prompts-btn\" class=\"btn btn-danger mt-2\">Удалить все текущие промпты</button>\n                        <button id=\"crocodile_delete-all-presets-btn\" class=\"btn btn-danger mt-2\">Удалить все текущие пресеты</button>\n                    </div>\n                </div>\n            </div> <!-- crocodile_promptsMainTabContent end -->\n        </div> <!-- main container end -->\n    `;\n\n    // Инициализация модальных окон (если еще не добавлены)\n    if (!document.getElementById('crocodile_alertModal')) {\n        document.body.insertAdjacentHTML('beforeend', `\n            <!-- Alert Modal -->\n            <div class=\"modal fade\" id=\"crocodile_alertModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"crocodile_alertModalTitle\" aria-hidden=\"true\">\n              <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\n                <div class=\"modal-content\">\n                  <div class=\"modal-header\">\n                    <h5 id=\"crocodile_alertModalTitle\" class=\"modal-title\">Сообщение</h5>\n                    <button type=\"button\" class=\"close btn\" data-dismiss=\"modal\" aria-label=\"Закрыть\">\n                      <span aria-hidden=\"true\">&times;</span>\n                    </button>\n                  </div>\n                  <div id=\"crocodile_alertModalBody\" class=\"modal-body\">\n                    ...\n                  </div>\n                  <div class=\"modal-footer\">\n                    <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\">ОК</button>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <!-- Confirm Modal -->\n            <div class=\"modal fade\" id=\"crocodile_confirmModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"crocodile_confirmModalTitle\" aria-hidden=\"true\">\n              <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\n                <div class=\"modal-content\">\n                  <div class=\"modal-header\">\n                    <h5 id=\"crocodile_confirmModalTitle\" class=\"modal-title\">Подтверждение</h5>\n                    <button type=\"button\" class=\"close btn\" data-dismiss=\"modal\" aria-label=\"Закрыть\">\n                      <span aria-hidden=\"true\">&times;</span>\n                    </button>\n                  </div>\n                  <div id=\"crocodile_confirmModalBody\" class=\"modal-body\">\n                    ...\n                  </div>\n                  <div class=\"modal-footer\">\n                    <button id=\"crocodile_confirmModalCancel\" type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Отмена</button>\n                    <button id=\"crocodile_confirmModalOk\" type=\"button\" class=\"btn btn-primary\">ОК</button>\n                  </div>\n                </div>\n              </div>\n            </div>\n        `);\n    }\n\n    // Инициализация табов после вставки HTML\n    initializePromptsTabs();\n\n    // Инициализация селекторов\n    $('#crocodile_prompt-model-select').select2({\n        width: '100%',\n        placeholder: 'Выберите модель',\n    });\n\n    $('#crocodile_filter-tags-select').select2({\n        width: '100%',\n        placeholder: 'Выберите теги для фильтрации',\n        allowClear: true,\n    });\n\n    $('#crocodile_prompt-tags-input').select2({\n        width: '100%',\n        placeholder: 'Выберите или введите теги',\n        tags: true,\n        tokenSeparators: [',', ' '],\n        createTag: function (params) {\n            return {\n                id: params.term,\n                text: params.term,\n                newTag: true // add additional parameters\n            };\n        }\n    });\n\n    $('#crocodile_sort-prompts-select').select2({\n        width: '100%',\n        minimumResultsForSearch: Infinity // скрыть строку поиска\n    });\n\n    // Заполнение списка моделей и тегов\n    populateModelSelectPrompt();\n    populateTagsFilter();\n\n    // Заполнение списка пресетов\n    populatePresetSelectPrompts();\n    populatePresetSelectInManage();\n\n    // Обработчики событий для кнопок\n    document.getElementById('crocodile_save-prompt-btn').onclick = savePrompt;\n    document.getElementById('crocodile_add-preset-to-prompts-btn').onclick = addPresetToPrompts;\n    document.getElementById('crocodile_replace-prompts-with-preset-btn').onclick = replacePromptsWithPreset;\n    document.getElementById('crocodile_delete-preset-btn').onclick = deleteSelectedPresetPrompts;\n    document.getElementById('crocodile_delete-all-prompts-btn').onclick = deleteAllPrompts;\n    document.getElementById('crocodile_delete-all-presets-btn').onclick = deleteAllPresets;\n    document.getElementById('crocodile_save-preset-btn').onclick = saveCurrentPromptsAsPreset;\n    document.getElementById('crocodile_-preset-btn').onclick = PresetToJSON;\n    document.getElementById('crocodile_import-preset-btn').onclick = importPresetFromJSONPrompts;\n    document.getElementById('crocodile_clear-preset-json-btn').onclick = clearPresetJSONField;\n\n    // Обработчики событий для новых кнопок\n    document.getElementById('crocodile_clear-input-btn').onclick = clearInputFields;\n    document.getElementById('crocodile_cancel-edit-btn').onclick = cancelEditPrompt;\n\n    // Обработчик для изменения выбранного пресета\n    $('#crocodile_preset-select-prompts').on('change', loadSelectedPresetPrompts);\n\n    // Инициализация подтабов после вставки HTML\n    initializePromptsSubTabs();\n    initializePresetsSubTabs();\n\n    // Обновляем список промптов\n    updatePromptList();\n}\n\nfunction initializePromptsTabs() {\n    $('#crocodile_promptsMainTab a[data-toggle=\"tab\"]').on('click', function (e) {\n        e.preventDefault();\n        $(this).tab('show');\n    });\n}\n\nfunction initializePromptsSubTabs() {\n    $('#crocodile_promptsSubTab a[data-toggle=\"tab\"]').on('click', function (e) {\n        e.preventDefault();\n        $(this).tab('show');\n    });\n\n    // Фильтрация и сортировка промптов при изменении выбора\n    $('#crocodile_filter-tags-select').on('change', function () {\n        filterAndSortPrompts();\n    });\n\n    $('#crocodile_sort-prompts-select').on('change', function () {\n        filterAndSortPrompts();\n    });\n}\n\nfunction initializePresetsSubTabs() {\n    $('#crocodile_presetsSubTab a[data-toggle=\"tab\"]').on('click', function (e) {\n        e.preventDefault();\n        $(this).tab('show');\n    });\n}\n\n// Функция для отображения алерта\nfunction showAlertPrompt(message) {\n    $('#crocodile_alertModalBody').text(message);\n    $('#crocodile_alertModal').modal('show');\n}\n\n// Функция для отображения конфирма\nfunction showConfirm(message) {\n    return new Promise((resolve, reject) => {\n        $('#crocodile_confirmModalBody').text(message);\n        $('#crocodile_confirmModal').modal('show');\n        $('#crocodile_confirmModalOk').off('click').on('click', () => {\n            $('#crocodile_confirmModal').modal('hide');\n            resolve(true);\n        });\n        $('#crocodile_confirmModalCancel').off('click').on('click', () => {\n            $('#crocodile_confirmModal').modal('hide');\n            resolve(false);\n        });\n        // Обработка закрытия модального окна\n        $('#crocodile_confirmModal').off('hidden.bs.modal').on('hidden.bs.modal', () => {\n            resolve(false);\n        });\n    });\n}\n\nfunction populateModelSelectPrompt() {\n    const select = $('#crocodile_prompt-model-select');\n    select.empty();\n    const models = JSON.parse(localStorage.getItem('models') || '[]');\n    models.forEach(model => {\n        const option = new Option(model.name, model.id, false, false);\n        select.append(option);\n    });\n    select.trigger('change');\n}\n\nfunction populateTagsFilter() {\n    const selectFilter = $('#crocodile_filter-tags-select');\n    const selectPromptTags = $('#crocodile_prompt-tags-input');\n    selectFilter.empty();\n    selectPromptTags.empty();\n\n    const prompts = getPrompts();\n    const tagsMap = new Map();\n    prompts.forEach(prompt => {\n        if (prompt.tags) {\n            prompt.tags.forEach(tag => {\n                if (tagsMap.has(tag)) {\n                    tagsMap.set(tag, tagsMap.get(tag) + 1);\n                } else {\n                    tagsMap.set(tag, 1);\n                }\n            });\n        }\n    });\n\n    const tags = Array.from(tagsMap.entries()).sort();\n\n    tags.forEach(([tag, count]) => {\n        const optionText = `${tag} (${count})`;\n        const optionFilter = new Option(optionText, tag, false, false);\n        const optionPromptTag = new Option(tag, tag, false, false);\n        selectFilter.append(optionFilter);\n        selectPromptTags.append(optionPromptTag);\n    });\n\n    selectFilter.trigger('change');\n    selectPromptTags.trigger('change');\n}\n\nfunction populatePresetSelectPrompts() {\n    const select = $('#crocodile_preset-select-prompts');\n    select.empty();\n    const presets = JSON.parse(localStorage.getItem('promptPresetsAkula') || '[]');\n    if (presets.length === 0) {\n        select.append(new Option('Нет сохранённых пресетов', '', false, false));\n    } else {\n        select.append(new Option('Выберите пресет', '', false, false));\n        presets.forEach(preset => {\n            select.append(new Option(preset.name, preset.name, false, false));\n        });\n    }\n    select.trigger('change');\n}\n\n// Функция для очистки всех полей ввода\nfunction clearInputFields() {\n    document.getElementById('crocodile_prompt-name-input').value = '';\n    $('#crocodile_prompt-model-select').val(null).trigger('change');\n    document.getElementById('crocodile_prompt-textarea-input').value = '';\n    $('#crocodile_prompt-tags-input').val(null).trigger('change');\n    \n    // Если находимся в режиме редактирования, выйти из него\n    const saveButton = document.getElementById('crocodile_save-prompt-btn');\n    if (saveButton.textContent === 'Обновить промпт') {\n        saveButton.textContent = 'Сохранить промпт';\n        saveButton.onclick = savePrompt;\n        \n        // Скрыть кнопку \"Отменить редактирование\"\n        document.getElementById('crocodile_cancel-edit-btn').style.display = 'none';\n    }\n}\n\n// Функция для отмены режима редактирования\nfunction cancelEditPrompt() {\n    clearInputFields();\n    showAlertPrompt('Редактирование отменено.');\n}\n\n\nfunction populatePresetSelectInManage() {\n    const select = $('#crocodile_preset-select-in-manage');\n    select.empty();\n    const presets = JSON.parse(localStorage.getItem('promptPresetsAkula') || '[]');\n    if (presets.length === 0) {\n        select.append(new Option('Нет сохранённых пресетов', '', false, false));\n    } else {\n        select.append(new Option('Выберите пресет', '', false, false));\n        presets.forEach(preset => {\n            select.append(new Option(preset.name, preset.name, false, false));\n        });\n    }\n    select.trigger('change');\n}\n\nasync function savePrompt() {\n    const name = document.getElementById('crocodile_prompt-name-input').value.trim();\n    const model = $('#crocodile_prompt-model-select').val();\n    const text = document.getElementById('crocodile_prompt-textarea-input').value.trim();\n    let tags = $('#crocodile_prompt-tags-input').val();\n\n    if (name && model && text) {\n        const now = new Date();\n        const prompts = getPrompts();\n        // Проверка на существование промпта с таким же названием\n        const existingIndex = prompts.findIndex(p => p.name === name);\n        if (existingIndex !== -1) {\n            const confirmOverwrite = await showConfirm(`Промпт с названием \"${name}\" уже существует. Перезаписать его?`);\n            if (!confirmOverwrite) {\n                return;\n            }\n            prompts[existingIndex] = {\n                name,\n                model,\n                text,\n                tags,\n                createdAt: prompts[existingIndex].createdAt || now.toISOString(),\n                updatedAt: now.toISOString()\n            };\n        } else {\n            prompts.push({\n                name,\n                model,\n                text,\n                tags,\n                createdAt: now.toISOString(),\n                updatedAt: now.toISOString()\n            });\n        }\n        savePrompts(prompts);\n        updatePromptList();\n        updatePromptSelect();\n        populateTagsFilter(); // Обновляем список тегов в фильтре и в форме\n        document.getElementById('crocodile_prompt-name-input').value = '';\n        $('#crocodile_prompt-model-select').val(null).trigger('change');\n        document.getElementById('crocodile_prompt-textarea-input').value = '';\n        $('#crocodile_prompt-tags-input').val(null).trigger('change');\n\n        showAlertPrompt('Промпт успешно сохранён.');\n    } else {\n        showAlertPrompt('Пожалуйста, заполните все поля.');\n    }\n}\n\nfunction updatePromptList() {\n    const listContainer = document.getElementById('crocodile_prompt-list');\n    const prompts = getPrompts();\n    const filterTags = $('#crocodile_filter-tags-select').val() || [];\n    const sortBy = $('#crocodile_sort-prompts-select').val() || 'name_asc';\n    listContainer.innerHTML = '';\n\n    // Обеспечиваем наличие дат\n    const now = new Date().toISOString();\n    prompts.forEach(prompt => {\n        if (!prompt.createdAt) {\n            prompt.createdAt = now;\n        }\n        if (!prompt.updatedAt) {\n            prompt.updatedAt = prompt.createdAt;\n        }\n    });\n    savePrompts(prompts);\n\n    // Создаем массив с промптами и их оригинальными индексами\n    let filteredPrompts = prompts.map((prompt, index) => ({ prompt, originalIndex: index }));\n\n    // Фильтрация по тегам\n    if (filterTags.length > 0) {\n        filteredPrompts = filteredPrompts.filter(({ prompt }) => {\n            if (prompt.tags && prompt.tags.length > 0) {\n                return filterTags.every(tag => prompt.tags.includes(tag));\n            }\n            return false;\n        });\n    }\n\n    // Сортировка\n    filteredPrompts.sort((a, b) => {\n        const promptA = a.prompt;\n        const promptB = b.prompt;\n        switch (sortBy) {\n            case 'name_asc':\n                return promptA.name.localeCompare(promptB.name);\n            case 'name_desc':\n                return promptB.name.localeCompare(promptA.name);\n            case 'length_asc':\n                return promptA.text.length - promptB.text.length;\n            case 'length_desc':\n                return promptB.text.length - promptA.text.length;\n            case 'model_asc':\n                return promptA.model.localeCompare(promptB.model);\n            case 'model_desc':\n                return promptB.model.localeCompare(promptA.model);\n            default:\n                return 0;\n        }\n    });\n\n    if (filteredPrompts.length === 0) {\n        listContainer.innerHTML = '<p class=\"text-muted\">Промпты не найдены.</p>';\n        return;\n    }\n\n    // Создание карточек с правильными индексами\n    filteredPrompts.forEach(({ prompt, originalIndex }) => {\n        const card = createPromptCard(prompt, originalIndex, {\n            buttons: [\n                { text: 'Редактировать', className: 'btn-primary edit-prompt', data: { index: originalIndex } },\n                { text: 'Дублировать', className: 'btn-info duplicate-prompt', data: { index: originalIndex } },\n                { text: 'Удалить', className: 'btn-danger delete-prompt', data: { index: originalIndex } },\n            ],\n            eventHandlers: {\n                '.edit-prompt': (e) => editPrompt(e.target.dataset.index),\n                '.duplicate-prompt': (e) => duplicatePrompt(e.target.dataset.index),\n                '.delete-prompt': (e) => deletePrompt(e.target.dataset.index),\n            },\n        });\n        listContainer.appendChild(card);\n    });\n}\n\n\nfunction createPromptCard(prompt, index, options = {}) {\n    const card = document.createElement('div');\n    card.className = 'card mt-2';\n    const promptLength = prompt.text.length;\n    const createdAt = new Date(prompt.createdAt).toLocaleString();\n    const updatedAt = prompt.updatedAt ? new Date(prompt.updatedAt).toLocaleString() : createdAt;\n\n    let dateInfo = `<small class=\"text-muted\">Создано: ${createdAt}`;\n    if (prompt.updatedAt && prompt.updatedAt !== prompt.createdAt) {\n        dateInfo += ` | Изменено: ${updatedAt}`;\n    }\n    dateInfo += '</small>';\n\n    let buttonsHTML = '';\n    if (options.buttons && options.buttons.length > 0) {\n        buttonsHTML = options.buttons.map(btn => {\n            const dataAttributes = Object.entries(btn.data || {}).map(([key, value]) => `data-${key}=\"${value}\"`).join(' ');\n            return `<button class=\"btn btn-sm ${btn.className} mr-2\" ${dataAttributes}>${btn.text}</button>`;\n        }).join('');\n    }\n\n    card.innerHTML = `\n        <div class=\"card-body\">\n            <p><strong>Название:</strong> ${prompt.name}</p>\n            <p><strong>Модель:</strong> ${prompt.model}</p>\n            <p><strong>Промпт (${promptLength}):</strong> ${prompt.text}</p>\n            ${prompt.tags && prompt.tags.length > 0 ? `<p><strong>Теги:</strong> ${prompt.tags.join(', ')}</p>` : ''}\n            <p>${dateInfo}</p>\n            ${buttonsHTML}\n        </div>\n    `;\n\n    // Now attach event handlers if needed\n    if (options.eventHandlers) {\n        Object.entries(options.eventHandlers).forEach(([selector, handler]) => {\n            const elements = card.querySelectorAll(selector);\n            elements.forEach(element => {\n                element.addEventListener('click', handler);\n            });\n        });\n    }\n    return card;\n}\n\nasync function deletePrompt(index) {\n    const confirmDelete = await showConfirm('Вы уверены, что хотите удалить этот промпт?');\n    if (!confirmDelete) {\n        return;\n    }\n    const prompts = getPrompts();\n    prompts.splice(index, 1);\n    savePrompts(prompts);\n    updatePromptList();\n    updatePromptSelect();\n    populateTagsFilter(); // Обновляем список тегов в фильтре\n    showAlertPrompt('Промпт удалён.');\n}\n\nfunction editPrompt(index) {\n    index = Number(index); // Преобразуем в число\n    const prompts = getPrompts();\n    const prompt = prompts[index];\n    document.getElementById('crocodile_prompt-name-input').value = prompt.name;\n    $('#crocodile_prompt-model-select').val(prompt.model).trigger('change');\n    document.getElementById('crocodile_prompt-textarea-input').value = prompt.text;\n    $('#crocodile_prompt-tags-input').val(prompt.tags).trigger('change');\n    \n    const saveButton = document.getElementById('crocodile_save-prompt-btn');\n    saveButton.textContent = 'Обновить промпт';\n    saveButton.onclick = () => {\n        updatePrompt(index);\n        saveButton.textContent = 'Сохранить промпт';\n        saveButton.onclick = savePrompt;\n        \n        // Скрыть кнопку \"Отменить редактирование\"\n        document.getElementById('crocodile_cancel-edit-btn').style.display = 'none';\n    };\n    \n    // Показать кнопку \"Отменить редактирование\"\n    document.getElementById('crocodile_cancel-edit-btn').style.display = 'inline-block';\n    \n    // Переключаемся на вкладку \"Создать\"\n    $('#crocodile_promptsSubTab a[href=\"#crocodile_createPromptTabContent\"]').tab('show');\n}\n\nasync function updatePrompt(index) {\n    const name = document.getElementById('crocodile_prompt-name-input').value.trim();\n    const model = $('#crocodile_prompt-model-select').val();\n    const text = document.getElementById('crocodile_prompt-textarea-input').value.trim();\n    const tags = $('#crocodile_prompt-tags-input').val();\n\n    if (name && model && text) {\n        const now = new Date();\n        const prompts = getPrompts();\n        prompts[index] = {\n            name,\n            model,\n            text,\n            tags,\n            createdAt: prompts[index].createdAt || now.toISOString(),\n            updatedAt: now.toISOString()\n        };\n        savePrompts(prompts);\n        updatePromptList();\n        updatePromptSelect();\n        populateTagsFilter(); // Обновляем список тегов в фильтре\n        document.getElementById('crocodile_prompt-name-input').value = '';\n        $('#crocodile_prompt-model-select').val(null).trigger('change');\n        document.getElementById('crocodile_prompt-textarea-input').value = '';\n        $('#crocodile_prompt-tags-input').val(null).trigger('change');\n        showAlertPrompt('Промпт обновлён.');\n    } else {\n        showAlertPrompt('Пожалуйста, заполните все поля.');\n    }\n}\n\nfunction duplicatePrompt(index) {\n    const prompts = getPrompts();\n    const prompt = prompts[index];\n    document.getElementById('crocodile_prompt-name-input').value = prompt.name + ' (копия)';\n    $('#crocodile_prompt-model-select').val(prompt.model).trigger('change');\n    document.getElementById('crocodile_prompt-textarea-input').value = prompt.text;\n    $('#crocodile_prompt-tags-input').val(prompt.tags).trigger('change');\n    document.getElementById('crocodile_save-prompt-btn').textContent = 'Сохранить промпт';\n    document.getElementById('crocodile_save-prompt-btn').onclick = savePrompt;\n    // Переключаемся на вкладку \"Создать\"\n    $('#crocodile_promptsSubTab a[href=\"#crocodile_createPromptTabContent\"]').tab('show');\n}\n\nfunction filterAndSortPrompts() {\n    updatePromptList();\n}\n\nfunction addSinglePromptFromPreset(index) {\n    const presetName = $('#crocodile_preset-select-prompts').val();\n    if (!presetName) return;\n\n    const presets = JSON.parse(localStorage.getItem('promptPresetsAkula') || '[]');\n    const preset = presets.find(p => p.name === presetName);\n    if (!preset) return;\n\n    const presetPrompt = preset.prompts[index];\n\n    const prompts = getPrompts();\n    const exists = prompts.some(p => p.name === presetPrompt.name);\n    if (exists) {\n        const idx = prompts.findIndex(p => p.name === presetPrompt.name);\n        prompts[idx] = presetPrompt;\n    } else {\n        prompts.push(presetPrompt);\n    }\n    savePrompts(prompts);\n    updatePromptList();\n    updatePromptSelect();\n    populateTagsFilter(); // Обновляем список тегов в фильтре\n    showAlertPrompt(`Промпт \"${presetPrompt.name}\" добавлен к текущим промптам.`);\n}\n\nasync function deleteAllPrompts() {\n    const confirmDelete = await showConfirm('Вы уверены, что хотите удалить все текущие промпты? Это действие нельзя будет отменить.');\n    if (!confirmDelete) return;\n\n    savePrompts([]);\n    updatePromptList();\n    updatePromptSelect();\n    populateTagsFilter(); // Обновляем список тегов в фильтре\n    showAlertPrompt('Все промпты удалены.');\n}\n\nasync function deleteAllPresets() {\n    const confirmDelete = await showConfirm('Вы уверены, что хотите удалить все текущие пресеты? Это действие нельзя будет отменить.');\n    if (!confirmDelete) return;\n\n    localStorage.removeItem('promptPresetsAkula');\n    populatePresetSelectPrompts();\n    populatePresetSelectInManage();\n    document.getElementById('crocodile_preset-preview').innerHTML = '';\n    document.getElementById('crocodile_preset-count').textContent = '0';\n    showAlertPrompt('Все пресеты удалены.');\n}\n\nasync function saveCurrentPromptsAsPreset() {\n    const presetName = document.getElementById('crocodile_preset-name-input').value.trim();\n    if (!presetName) {\n        showAlertPrompt('Пожалуйста, введите название пресета.');\n        return;\n    }\n    const prompts = getPrompts();\n    if (prompts.length === 0) {\n        showAlertPrompt('Нет промптов для сохранения в пресет.');\n        return;\n    }\n\n    let presets = JSON.parse(localStorage.getItem('promptPresetsAkula') || '[]');\n\n    // Проверяем, существует ли пресет с таким именем\n    const existingIndex = presets.findIndex(p => p.name === presetName);\n    if (existingIndex !== -1) {\n        const confirmOverwrite = await showConfirm(`Пресет с названием \"${presetName}\" уже существует. Перезаписать его?`);\n        if (!confirmOverwrite) return;\n        presets[existingIndex] = { name: presetName, prompts };\n    } else {\n        presets.push({ name: presetName, prompts });\n    }\n\n    localStorage.setItem('promptPresetsAkula', JSON.stringify(presets));\n    populatePresetSelectPrompts();\n    populatePresetSelectInManage();\n    $('#crocodile_preset-select-prompts').val(presetName).trigger('change');\n    $('#crocodile_preset-select-in-manage').val(presetName).trigger('change');\n    showAlertPrompt('Пресет успешно сохранён.');\n}\n\nfunction PresetToJSON() {\n    const presetName = $('#crocodile_preset-select-in-manage').val();\n    if (!presetName) {\n        showAlertPrompt('Нет выбранного пресета для экспорта.');\n        return;\n    }\n\n    const presets = JSON.parse(localStorage.getItem('promptPresetsAkula') || '[]');\n    const preset = presets.find(p => p.name === presetName);\n    if (!preset) {\n        showAlertPrompt('Выбранный пресет не найден.');\n        return;\n    }\n\n    const presetJSON = JSON.stringify(preset, null, 2);\n    // Copy to clipboard\n    navigator.clipboard.writeText(presetJSON).then(() => {\n        document.getElementById('crocodile_preset-json-input').value = presetJSON; // Optionally populate the textarea\n        showAlertPrompt('JSON выбранного пресета скопирован в буфер обмена.');\n    }).catch(err => {\n        console.error('Ошибка при копировании в буфер обмена:', err);\n        showAlertPrompt('Ошибка при копировании в буфер обмена.');\n    });\n}\n\nfunction clearPresetJSONField() {\n    document.getElementById('crocodile_preset-json-input').value = '';\n}\n\nfunction importPresetFromJSONPrompts() {\n    const presetJSON = document.getElementById('crocodile_preset-json-input').value;\n    if (!presetJSON) {\n        showAlertPrompt('Поле JSON Пресета пустое.');\n        return;\n    }\n\n    try {\n        const preset = JSON.parse(presetJSON);\n        if (!preset.name || !preset.prompts) {\n            showAlertPrompt('Некорректный формат пресета.');\n            return;\n        }\n\n        let presets = JSON.parse(localStorage.getItem('promptPresetsAkula') || '[]');\n\n        // Проверяем, существует ли пресет с таким именем\n        const existingIndex = presets.findIndex(p => p.name === preset.name);\n        if (existingIndex !== -1) {\n            showConfirm(`Пресет с названием \"${preset.name}\" уже существует. Перезаписать его?`).then(confirmOverwrite => {\n                if (!confirmOverwrite) return;\n                presets[existingIndex] = preset;\n                localStorage.setItem('promptPresetsAkula', JSON.stringify(presets));\n                populatePresetSelectPrompts();\n                populatePresetSelectInManage();\n                $('#crocodile_preset-select-prompts').val(preset.name).trigger('change');\n                $('#crocodile_preset-select-in-manage').val(preset.name).trigger('change');\n                showAlertPrompt('Пресет успешно импортирован.');\n            });\n        } else {\n            presets.push(preset);\n            localStorage.setItem('promptPresetsAkula', JSON.stringify(presets));\n            populatePresetSelectPrompts();\n            populatePresetSelectInManage();\n            $('#crocodile_preset-select-prompts').val(preset.name).trigger('change');\n            $('#crocodile_preset-select-in-manage').val(preset.name).trigger('change');\n            showAlertPrompt('Пресет успешно импортирован.');\n        }\n    } catch (error) {\n        console.error('Ошибка при импорте пресета:', error);\n        showAlertPrompt('Ошибка при импорте пресета. Проверьте формат JSON.');\n    }\n}\n\nfunction addPresetToPrompts() {\n    const presetName = $('#crocodile_preset-select-prompts').val();\n    if (!presetName) {\n        showAlertPrompt('Нет выбранного пресета для добавления.');\n        return;\n    }\n    const presets = JSON.parse(localStorage.getItem('promptPresetsAkula') || '[]');\n    const preset = presets.find(p => p.name === presetName);\n    if (!preset) return;\n\n    const prompts = getPrompts();\n    preset.prompts.forEach(presetPrompt => {\n        const exists = prompts.some(p => p.name === presetPrompt.name);\n        if (exists) {\n            const index = prompts.findIndex(p => p.name === presetPrompt.name);\n            prompts[index] = presetPrompt;\n        } else {\n            prompts.push(presetPrompt);\n        }\n    });\n    savePrompts(prompts);\n    updatePromptList();\n    updatePromptSelect();\n    populateTagsFilter(); // Обновляем список тегов в фильтре\n    showAlertPrompt('Промпты из пресета добавлены к текущим промптам.');\n}\n\n\nasync function replacePromptsWithPreset() {\n    const presetName = $('#crocodile_preset-select-prompts').val();\n    if (!presetName) {\n        showAlertPrompt('Нет выбранного пресета для замены.');\n        return;\n    }\n    const confirmReplace = await showConfirm('Вы уверены, что хотите заменить текущие промпты на выбранный пресет? Это действие нельзя будет отменить.');\n    if (!confirmReplace) return;\n\n    const presets = JSON.parse(localStorage.getItem('promptPresetsAkula') || '[]');\n    const preset = presets.find(p => p.name === presetName);\n    if (!preset) return;\n\n    savePrompts(preset.prompts);\n    updatePromptList();\n    updatePromptSelect();\n    populateTagsFilter(); // Обновляем список тегов в фильтре\n    showAlertPrompt('Текущие промпты заменены на промпты из пресета.');\n}\n\nasync function deleteSelectedPresetPrompts() {\n    const presetName = $('#crocodile_preset-select-prompts').val();\n    if (!presetName) {\n        showAlertPrompt('Нет выбранного пресета для удаления.');\n        return;\n    }\n    const confirmDelete = await showConfirm(`Вы уверены, что хотите удалить пресет \"${presetName}\"?`);\n    if (!confirmDelete) return;\n\n    let presets = JSON.parse(localStorage.getItem('promptPresetsAkula') || '[]');\n    presets = presets.filter(p => p.name !== presetName);\n    localStorage.setItem('promptPresetsAkula', JSON.stringify(presets));\n\n    // Обновляем селектор пресетов и предпросмотр\n    populatePresetSelectPrompts();\n    document.getElementById('crocodile_preset-preview').innerHTML = '';\n    document.getElementById('crocodile_preset-count').textContent = '0';\n    showAlertPrompt('Пресет удалён.');\n}\n\nfunction loadSelectedPresetPrompts() {\n    const presetName = $('#crocodile_preset-select-prompts').val();\n    const previewDiv = document.getElementById('crocodile_preset-preview');\n    const presetCountSpan = document.getElementById('crocodile_preset-count');\n    previewDiv.innerHTML = '';\n    presetCountSpan.textContent = '0';\n\n    if (!presetName) {\n        return;\n    }\n\n    const presets = JSON.parse(localStorage.getItem('promptPresetsAkula') || '[]');\n    const preset = presets.find(p => p.name === presetName);\n    if (!preset) {\n        return;\n    }\n\n    presetCountSpan.textContent = preset.prompts.length;\n\n    if (preset.prompts.length === 0) {\n        previewDiv.innerHTML = '<p class=\"text-muted\">Пресет пуст.</p>';\n    } else {\n        previewDiv.innerHTML = ''; // Clear the previewDiv\n        preset.prompts.forEach((prompt, index) => {\n            const card = createPromptCard(prompt, index, {\n                buttons: [\n                    { text: 'Добавить этот промпт', className: 'btn-primary add-single-prompt', data: { 'prompt-index': index } },\n                ],\n                eventHandlers: {\n                    '.add-single-prompt': (e) => addSinglePromptFromPreset(e.target.dataset.promptIndex),\n                },\n            });\n            previewDiv.appendChild(card);\n        });\n    }\n}\n\n\n\nconst OPENROUTER_BASE_URL = \"https://openrouter.ai/api/v1\";\n\n async function loadModels() {\n    try {\n        const response = await axios.get(`${OPENROUTER_BASE_URL}/models`);\n        const models = response.data.data;\n        localStorage.setItem('models', JSON.stringify(models));\n        populateModelSelect(models);\n    } catch (error) {\n        console.error('Error loading models:', error);\n    }\n}\n\n async function generateTextWithAI(systemPrompt, userPrompt, model, signal) {\n    const apiKey = localStorage.getItem('apiKey');\n\n    try {\n        const response = await fetch(`${OPENROUTER_BASE_URL}/chat/completions`, {\n            method: 'POST',\n            signal,\n            headers: {\n                'Authorization': `Bearer ${apiKey}`,\n                'Content-Type': 'application/json',\n                'HTTP-Referer': 'https://www.office.com',\n                'X-Title': 'Word AI Assistant',\n            },\n            body: JSON.stringify({\n                model: model,\n                messages: [\n                    { role: \"system\", content: systemPrompt },\n                    { role: \"user\", content: userPrompt }\n                ],\n            }),\n        });\n\n        if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n        }\n\n        const data = await response.json();\n        return data.choices[0].message.content.trim();\n    } catch (error) {\n        console.error('Error in generateTextWithAI:', error);\n        throw error;\n    }\n}\n\n async function generateTextWithAIFormat(systemPrompt, userPrompt, model, signal) {\n    const apiKey = localStorage.getItem('apiKey');\n\n    try {\n        const response = await fetch(`${OPENROUTER_BASE_URL}/chat/completions`, {\n            method: 'POST',\n            signal,\n            headers: {\n                'Authorization': `Bearer ${apiKey}`,\n                'Content-Type': 'application/json',\n                'HTTP-Referer': 'https://www.office.com',\n                'X-Title': 'Word AI Assistant',\n            },\n            body: JSON.stringify({\n                model: model,\n                messages: [\n                    { role: \"system\", content: systemPrompt },\n                    { role: \"user\", content: userPrompt }\n                ],\n            }),\n        });\n\n        if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n        }\n\n        const data = await response.json();\n        return data.choices[0].message.content.trim();\n    } catch (error) {\n        console.error('Error in generateTextWithAI:', error);\n        throw error;\n    }\n}\n\n\n function initSettings() {\n    const settingsTab = document.getElementById('settings');\n    settingsTab.innerHTML = `\n        <div class=\"mt-3\">\n            <!-- Инструкция -->\n            <div class=\"alert alert-info\">\n                <strong>Настройки:</strong>\n                <p>Здесь вы можете ввести ваш API-ключ для доступа к сервисам OpenRouter.</p>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"api-key\" class=\"form-label\">API Ключ:</label>\n                <input type=\"password\" id=\"api-key\" class=\"form-control\" placeholder=\"Введите ваш API ключ\" title=\"Введите ваш API ключ для доступа к сервисам OpenRouter\">\n            </div>\n        </div>\n    `;\n\n    document.getElementById('api-key').onchange = saveApiKey;\n\n    loadSettings();\n}\n\nfunction saveApiKey() {\n    const apiKey = document.getElementById('api-key').value;\n    localStorage.setItem('apiKey', apiKey);\n}\n\nfunction loadSettings() {\n    const apiKey = localStorage.getItem('apiKey') || '';\n    document.getElementById('api-key').value = apiKey;\n}\n\n\n\n function populateModelSelect(models) {\n    const promptModelSelect = $('#prompt-model');\n    const formattingModelSelect = $('#formatting-model');\n\n    [promptModelSelect, formattingModelSelect].forEach(select => {\n        select.empty();\n        models.forEach(model => {\n            const option = new Option(model.name, model.id, false, false);\n            select.append(option);\n        });\n        select.trigger('change');\n    });\n\n    // Устанавливаем значение по умолчанию для formatting-model\n    const defaultModel = models.find(model => model.id === 'openai/gpt-4-mini') || models[0];\n    if (defaultModel) {\n        formattingModelSelect.val(defaultModel.id).trigger('change');\n    }\n\n    // Загружаем сохраненное значение, если оно есть\n    const savedModel = localStorage.getItem('formattingModel');\n    if (savedModel && models.some(model => model.id === savedModel)) {\n        formattingModelSelect.val(savedModel).trigger('change');\n    }\n}\n\n function initTests() {\n    const testsTab = document.getElementById('tests');\n    testsTab.innerHTML = `\n        <h2>Тесты выделения текста</h2>\n        <button id=\"kuga_save-selection\" class=\"btn btn-primary mb-2\">Сохранить выделение</button>\n        <button id=\"kuga_restore-selection\" class=\"btn btn-success mb-2\" style=\"display: none;\">Восстановить выделение</button>\n        <button id=\"kuga_delete-selection\" class=\"btn btn-danger mb-2\" style=\"display: none;\">Удалить выделение</button>\n        <button id=\"kuga_highlight-selection\" class=\"btn btn-warning mb-2\" style=\"display: none;\">Покрасить текст в желтый</button>\n        <div id=\"kuga_selection-info\" class=\"mt-2\"></div>\n        <div id=\"kuga_full-selection\" class=\"mt-2\" style=\"white-space: pre-wrap;\"></div>\n    `;\n\n    let savedSelection = null;\n\n    document.getElementById('kuga_save-selection').addEventListener('click', saveSelection);\n    document.getElementById('kuga_restore-selection').addEventListener('click', restoreSelection);\n    document.getElementById('kuga_delete-selection').addEventListener('click', deleteSelection);\n    document.getElementById('kuga_highlight-selection').addEventListener('click', highlightSelection);\n\n    async function saveSelection() {\n        try {\n            await Word.run(async (context) => {\n                const selection = context.document.getSelection();\n                selection.load('text');\n                await context.sync();\n\n                if (selection.text.trim().length > 0) {\n                    const timestamp = Date.now();\n                    const startMarker = `START_TIMESTAMP${timestamp}`;\n                    const endMarker = `END_TIMESTAMP${timestamp}`;\n\n                    const startRange = selection.insertText(startMarker, Word.InsertLocation.before);\n                    const endRange = selection.insertText(endMarker, Word.InsertLocation.after);\n\n                    startRange.font.size = 1;\n                    endRange.font.size = 1;\n                    startRange.font.color = \"white\";\n                    endRange.font.color = \"white\";\n                    await context.sync();\n\n                    savedSelection = { timestamp, text: selection.text };\n                    localStorage.setItem('savedSelection', JSON.stringify(savedSelection));\n\n                    document.getElementById('kuga_selection-info').textContent = 'Выделение сохранено';\n                    document.getElementById('kuga_full-selection').textContent = selection.text;\n                    document.getElementById('kuga_restore-selection').style.display = 'inline-block';\n                    document.getElementById('kuga_delete-selection').style.display = 'inline-block';\n                    document.getElementById('kuga_highlight-selection').style.display = 'inline-block';\n                } else {\n                    document.getElementById('kuga_selection-info').textContent = 'Ничего не выделено';\n                }\n            });\n        } catch (error) {\n            console.error('Ошибка при сохранении выделения:', error);\n            document.getElementById('kuga_selection-info').textContent = 'Ошибка при сохранении выделения';\n        }\n    }\n\n    async function restoreSelection() {\n        const saved = localStorage.getItem('savedSelection');\n        if (!saved) {\n            document.getElementById('kuga_selection-info').textContent = 'Нет сохраненного выделения';\n            return;\n        }\n\n        const { timestamp } = JSON.parse(saved);\n\n        try {\n            await Word.run(async (context) => {\n                const body = context.document.body;\n                const startSearch = body.search(`START_TIMESTAMP${timestamp}`, { matchCase: true });\n                const endSearch = body.search(`END_TIMESTAMP${timestamp}`, { matchCase: true });\n\n                context.load(startSearch, 'items');\n                context.load(endSearch, 'items');\n                await context.sync();\n\n                if (startSearch.items.length > 0 && endSearch.items.length > 0) {\n                    const startRange = startSearch.items[0];\n                    const endRange = endSearch.items[0];\n                    const fullRange = startRange.expandTo(endRange);\n                    fullRange.select();\n\n                    document.getElementById('kuga_selection-info').textContent = 'Выделение восстановлено';\n                } else {\n                    document.getElementById('kuga_selection-info').textContent = 'Маркеры не найдены';\n                }\n            });\n        } catch (error) {\n            console.error('Ошибка при восстановлении выделения:', error);\n            document.getElementById('kuga_selection-info').textContent = `Ошибка: ${error.message}`;\n        }\n    }\n\n    async function highlightSelection() {\n        const saved = localStorage.getItem('savedSelection');\n        if (!saved) {\n            document.getElementById('kuga_selection-info').textContent = 'Нет сохраненного выделения';\n            return;\n        }\n\n        const { timestamp } = JSON.parse(saved);\n\n        try {\n            await Word.run(async (context) => {\n                const body = context.document.body;\n                const startSearch = body.search(`START_TIMESTAMP${timestamp}`, { matchCase: true });\n                const endSearch = body.search(`END_TIMESTAMP${timestamp}`, { matchCase: true });\n\n                context.load(startSearch, 'items');\n                context.load(endSearch, 'items');\n                await context.sync();\n\n                if (startSearch.items.length > 0 && endSearch.items.length > 0) {\n                    const startRange = startSearch.items[0];\n                    const endRange = endSearch.items[0];\n                    const fullRange = startRange.expandTo(endRange);\n\n                    // Покрасить текст в желтый\n                    fullRange.font.highlightColor = 'yellow';\n                    await context.sync();\n\n                    document.getElementById('kuga_selection-info').textContent = 'Текст покрашен в желтый';\n                } else {\n                    document.getElementById('kuga_selection-info').textContent = 'Маркеры не найдены';\n                }\n            });\n        } catch (error) {\n            console.error('Ошибка при покраске текста:', error);\n            document.getElementById('kuga_selection-info').textContent = `Ошибка: ${error.message}`;\n        }\n    }\n\n    async function deleteSelection() {\n        const saved = localStorage.getItem('savedSelection');\n        if (!saved) {\n            document.getElementById('kuga_selection-info').textContent = 'Нет сохраненного выделения для удаления';\n            return;\n        }\n\n        const { timestamp } = JSON.parse(saved);\n\n        try {\n            await Word.run(async (context) => {\n                const body = context.document.body;\n                const startSearch = body.search(`START_TIMESTAMP${timestamp}`, { matchCase: true });\n                const endSearch = body.search(`END_TIMESTAMP${timestamp}`, { matchCase: true });\n\n                context.load(startSearch, 'items');\n                context.load(endSearch, 'items');\n                await context.sync();\n\n                if (startSearch.items.length > 0 && endSearch.items.length > 0) {\n                    const startRange = startSearch.items[0];\n                    const endRange = endSearch.items[0];\n\n                    startRange.delete();\n                    endRange.delete();\n                    await context.sync();\n\n                    localStorage.removeItem('savedSelection');\n                    savedSelection = null;\n\n                    document.getElementById('kuga_selection-info').textContent = 'Выделение удалено';\n                    document.getElementById('kuga_full-selection').textContent = '';\n                    document.getElementById('kuga_restore-selection').style.display = 'none';\n                    document.getElementById('kuga_delete-selection').style.display = 'none';\n                    document.getElementById('kuga_highlight-selection').style.display = 'none';\n                } else {\n                    document.getElementById('kuga_selection-info').textContent = 'Маркеры не найдены';\n                }\n            });\n        } catch (error) {\n            console.error('Ошибка при удалении выделения:', error);\n            document.getElementById('kuga_selection-info').textContent = `Ошибка: ${error.message}`;\n        }\n    }\n}\n\n function initGrammar() {\n    const grammarTab = document.getElementById('grammar');\n    grammarTab.innerHTML = `\n    <div class=\"mt-3\">\n        <!-- Навигация по табам -->\n        <ul class=\"nav nav-tabs\" id=\"grammarTab\" role=\"tablist\">\n            <li class=\"nav-item\">\n                <a class=\"nav-link active\" id=\"main-tab\" data-toggle=\"tab\" href=\"#mainContent\" role=\"tab\" aria-controls=\"mainContent\" aria-selected=\"true\">Основное</a>\n            </li>\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" id=\"settings-tab\" data-toggle=\"tab\" href=\"#settingsContent\" role=\"tab\" aria-controls=\"settingsContent\" aria-selected=\"false\">Настройки</a>\n            </li>\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" id=\"presets-tab\" data-toggle=\"tab\" href=\"#presetsContent\" role=\"tab\" aria-controls=\"presetsContent\" aria-selected=\"false\">Пресеты</a>\n            </li>\n        </ul>\n\n        <!-- Содержимое табов -->\n        <div class=\"tab-content\" id=\"grammarTabContent\">\n            <!-- Основное -->\n            <div class=\"tab-pane fade show active\" id=\"mainContent\" role=\"tabpanel\" aria-labelledby=\"main-tab\">\n                <!-- Инструкция по использованию -->\n                <div class=\"alert alert-info mt-3\">\n                    <strong>Инструкция:</strong>\n                    <ul>\n                        <li>Выберите модель и типы проверок, которые вы хотите применить к тексту.</li>\n                        <li>Выделите текст, который хотите проверить (от 1 до 4 абзацев).</li>\n                        <li>Нажмите кнопку \"Проверить\".</li>\n                    </ul>\n                </div>\n\n                <!-- Аккордеон для модели и типов проверок -->\n                <div class=\"accordion mt-3\" id=\"mainAccordion\">\n                    <div class=\"card\">\n                        <div class=\"card-header\" id=\"mainSettingsHeading\">\n                            <h2 class=\"mb-0\">\n                                <button class=\"btn btn-link\" type=\"button\" data-toggle=\"collapse\" data-target=\"#mainSettingsCollapse\" aria-expanded=\"true\" aria-controls=\"mainSettingsCollapse\">\n                                    Настройки модели и проверок\n                                </button>\n                            </h2>\n                        </div>\n                        <div id=\"mainSettingsCollapse\" class=\"collapse show\" aria-labelledby=\"mainSettingsHeading\" data-parent=\"#mainAccordion\">\n                            <div class=\"card-body\">\n                                <!-- Модель для проверки -->\n                                <div class=\"form-group\">\n                                    <label for=\"grammar-model\">Модель для проверки:</label>\n                                    <select id=\"grammar-model\" class=\"form-control\" title=\"Выберите модель нейросети для проверки текста\"></select>\n                                </div>\n                                <!-- Типы проверок -->\n                                <div class=\"form-group\">\n                                    <label>Типы проверок:</label>\n                                    <div class=\"form-check\">\n                                        <input class=\"form-check-input\" type=\"checkbox\" id=\"check-grammatical\">\n                                        <label class=\"form-check-label\" for=\"check-grammatical\" title=\"Проверка на грамматические ошибки\">\n                                            Грамматические (Beta)\n                                        </label>\n                                    </div>\n                                    <div class=\"form-check\">\n                                        <input class=\"form-check-input\" type=\"checkbox\" id=\"check-syntactic\">\n                                        <label class=\"form-check-label\" for=\"check-syntactic\" title=\"Проверка на синтаксические ошибки\">\n                                            Синтаксические (Beta)\n                                        </label>\n                                    </div>\n                                    <div class=\"form-check\">\n                                        <input class=\"form-check-input\" type=\"checkbox\" id=\"check-stylistic\" checked>\n                                        <label class=\"form-check-label\" for=\"check-stylistic\" title=\"Проверка на стилистические ошибки\">\n                                            Стилистические\n                                        </label>\n                                    </div>\n                                    <div class=\"form-check\">\n                                        <input class=\"form-check-input\" type=\"checkbox\" id=\"check-logical\" checked>\n                                        <label class=\"form-check-label\" for=\"check-logical\" title=\"Проверка на логические ошибки\">\n                                            Логические\n                                        </label>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <!-- Кнопки управления -->\n                <div class=\"form-group mt-3\" id=\"grammar-btn-group\">\n                    <div class=\"btn-group\" role=\"group\" id=\"buttonGroup\">\n                        <button id=\"check-grammar\" class=\"btn btn-primary\">Проверить</button>\n                        <button id=\"select-current-text\" class=\"btn btn-info\" style=\"display: none;\">Выделить текущий текст</button>\n                        <button id=\"finish-current-fragment\" class=\"btn btn-warning\" style=\"display: none;\">Завершить работу с фрагментом</button>\n                    </div>\n                </div>\n\n                <div id=\"kuga_selection-info\" class=\"mt-3\" style=\"display: none;\"></div>\n\n                <!-- Загрузчик и кнопка Отменить -->\n                <div id=\"loading\" class=\"mt-3 text-center\" style=\"display: none;\">\n                    <div id=\"progress-container\" style=\"display: none;\">\n                        <div class=\"progress\">\n                            <div id=\"progress-bar\" class=\"progress-bar\" role=\"progressbar\" style=\"width: 0%;\">0%</div>\n                        </div>\n                        <div id=\"progress-text\" class=\"mt-2\">Обработано 0 из 0 чанков</div>\n                    </div>\n                    <div id=\"spinner\" style=\"display: none;\">\n                        <div class=\"spinner-border text-primary\" role=\"status\">\n                            <span class=\"sr-only\">Загрузка...</span>\n                        </div>\n                    </div>\n                    <div class=\"mt-3\">\n                        <button id=\"cancel-check\" class=\"btn btn-secondary\">Отменить</button>\n                    </div>\n                </div>\n\n                <!-- Фильтр результатов -->\n                <div id=\"filter-container\" class=\"mt-3\" style=\"display: none;\">\n                    <label for=\"filter-select\">Фильтр результатов:</label>\n                    <select id=\"filter-select\" class=\"form-control\">\n                        <option value=\"all\">Все ошибки</option>\n                        <option value=\"can_edit\">Только исправляемые</option>\n                        <option value=\"cannot_edit\">Только не исправляемые</option>\n                    </select>\n                </div>\n\n                <!-- Вкладки для текущих ошибок и истории исправлений -->\n                <ul class=\"nav nav-tabs mt-3\" id=\"grammarTabs\" role=\"tablist\">\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link active\" id=\"current-tab\" data-toggle=\"tab\" href=\"#current\" role=\"tab\">Текущие ошибки</a>\n                    </li>\n\n    <li class=\"nav-item\">\n        <a class=\"nav-link\" id=\"history-tab\" data-toggle=\"tab\" href=\"#history\" role=\"tab\">История исправлений</a>\n    </li>\n</ul>\n<div class=\"tab-content\" id=\"grammarTabContent\">\n    <div class=\"tab-pane fade show active\" id=\"current\" role=\"tabpanel\">\n        <div id=\"grammar-results\"></div>\n    </div>\n    <div class=\"tab-pane fade\" id=\"history\" role=\"tabpanel\">\n        <div id=\"grammar-history\"></div>\n    </div>\n</div>\n            </div>\n\n            <!-- Настройки -->\n            <div class=\"tab-pane fade\" id=\"settingsContent\" role=\"tabpanel\" aria-labelledby=\"settings-tab\">\n                <!-- Инструкция для Настроек -->\n                <div class=\"alert alert-info mt-3\">\n                    <strong>Инструкция:</strong>\n                    <p>Здесь вы можете настроить параметры обработки текста, модели, ошибки и промпты.</p>\n                </div>\n\n                <!-- Навигация по подтабам Настроек -->\n                <ul class=\"nav nav-tabs mt-3\" id=\"settingsSubTab\" role=\"tablist\">\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link active\" id=\"text-processing-tab\" data-toggle=\"tab\" href=\"#textProcessingContent\" role=\"tab\" aria-controls=\"textProcessingContent\" aria-selected=\"true\">Настройки обработки текста</a>\n                    </li>\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link\" id=\"model-settings-tab\" data-toggle=\"tab\" href=\"#modelSettingsContent\" role=\"tab\" aria-controls=\"modelSettingsContent\" aria-selected=\"false\">Настройки модели</a>\n                    </li>\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link\" id=\"error-settings-tab\" data-toggle=\"tab\" href=\"#errorSettingsContent\" role=\"tab\" aria-controls=\"errorSettingsContent\" aria-selected=\"false\">Настройки ошибок</a>\n                    </li>\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link\" id=\"prompt-settings-tab\" data-toggle=\"tab\" href=\"#promptSettingsContent\" role=\"tab\" aria-controls=\"promptSettingsContent\" aria-selected=\"false\">Настройки промптов</a>\n                    </li>\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link\" id=\"additional-options-tab\" data-toggle=\"tab\" href=\"#additionalOptionsContent\" role=\"tab\" aria-controls=\"additionalOptionsContent\" aria-selected=\"false\">Дополнительные опции</a>\n                    </li>\n                </ul>\n\n                <!-- Содержимое подтабов Настроек -->\n                <div class=\"tab-content\" id=\"settingsSubTabContent\">\n                    <!-- Настройки обработки текста -->\n                    <div class=\"tab-pane fade show active\" id=\"textProcessingContent\" role=\"tabpanel\" aria-labelledby=\"text-processing-tab\">\n                        <div class=\"alert alert-info mt-3\">\n                            <p>Здесь вы можете настроить параметры обработки текста, такие как максимальное количество символов и разбивка на чанки.</p>\n                        </div>\n                        <!-- Максимальное количество символов -->\n                        <div class=\"form-group\">\n                            <label for=\"max-chars\">Максимальное количество символов для проверки (0 для без лимита):</label>\n                            <input type=\"number\" id=\"max-chars\" class=\"form-control\" value=\"2000\" min=\"0\">\n                        </div>\n                        <!-- Опция разбивать текст на чанки -->\n                        <div class=\"form-check mt-2\">\n                            <input class=\"form-check-input\" type=\"checkbox\" id=\"split-into-chunks-checkbox\">\n                            <label class=\"form-check-label\" for=\"split-into-chunks-checkbox\" title=\"Разбивать текст на небольшие части для обработки\">\n                                Разбивать текст на чанки\n                            </label>\n                        </div>\n                        <!-- Размер чанка -->\n                        <div class=\"form-group mt-2\">\n                            <label for=\"chunk-size\">Размер чанка (в предложениях):</label>\n                            <input type=\"number\" id=\"chunk-size\" class=\"form-control\" value=\"8\" min=\"1\">\n                        </div>\n                    </div>\n                    <!-- Настройки модели -->\n                    <div class=\"tab-pane fade\" id=\"modelSettingsContent\" role=\"tabpanel\" aria-labelledby=\"model-settings-tab\">\n                        <div class=\"alert alert-info mt-3\">\n                            <p>Здесь вы можете настроить параметры модели, такие как температура и максимальное количество токенов.</p>\n                        </div>\n                        <!-- Температура -->\n                        <div class=\"form-group\">\n                            <label for=\"temperature\">Температура (0.0 - 1.0):</label>\n                            <input type=\"number\" id=\"temperature\" class=\"form-control\" value=\"0.1\" min=\"0.0\" max=\"1.0\" step=\"0.1\" title=\"Контролирует степень случайности модели. Низкие значения делают ответы более детерминированными\">\n                        </div>\n                        <!-- Максимальное количество токенов -->\n                        <div class=\"form-group\">\n                            <label for=\"max-tokens\">Максимальное количество токенов:</label>\n                            <input type=\"number\" id=\"max-tokens\" class=\"form-control\" value=\"4000\" min=\"1\" title=\"Максимальное количество токенов в ответе модели\">\n                        </div>\n                        <!-- Опция включения response_format -->\n                        <div class=\"form-check mt-2\">\n                            <input class=\"form-check-input\" type=\"checkbox\" id=\"response-format-checkbox\">\n                            <label class=\"form-check-label\" for=\"response-format-checkbox\" title=\"Использовать определенный формат ответа от модели\">\n                                Использовать response_format: {\"type\": \"json_object\"}\n                            </label>\n                        </div>\n                    </div>\n                    <!-- Настройки ошибок -->\n                    <div class=\"tab-pane fade\" id=\"errorSettingsContent\" role=\"tabpanel\" aria-labelledby=\"error-settings-tab\">\n                        <div class=\"alert alert-info mt-3\">\n                            <p>Здесь вы можете настроить параметры обработки ошибок, такие как повтор запроса при ошибке.</p>\n                        </div>\n                        <!-- Повторить в случае ошибки -->\n                        <div class=\"form-check mt-2\">\n                            <input class=\"form-check-input\" type=\"checkbox\" id=\"retry-on-error-checkbox\" checked>\n                            <label class=\"form-check-label\" for=\"retry-on-error-checkbox\" title=\"Автоматически повторить запрос при возникновении ошибки\">\n                                Повторить в случае ошибки\n                            </label>\n                        </div>\n                        <!-- Количество повторов -->\n                        <div class=\"form-group mt-2\">\n                            <label for=\"retry-count\">Количество повторов при ошибке:</label>\n                            <input type=\"number\" id=\"retry-count\" class=\"form-control\" value=\"3\" min=\"1\" title=\"Сколько раз повторять запрос при ошибке\">\n                        </div>\n                    </div>\n                    <!-- Настройки промптов -->\n                    <div class=\"tab-pane fade\" id=\"promptSettingsContent\" role=\"tabpanel\" aria-labelledby=\"prompt-settings-tab\">\n                        <div class=\"alert alert-info mt-3\">\n                            <p>Здесь вы можете настроить промпты для модели.</p>\n                        </div>\n                        <!-- Опция редактирования промптов -->\n                        <div class=\"form-check mt-3\">\n                            <input class=\"form-check-input\" type=\"checkbox\" id=\"edit-prompts-checkbox\" checked>\n                            <label class=\"form-check-label\" for=\"edit-prompts-checkbox\" title=\"Позволяет редактировать системные промпты\">\n                                Редактировать системные промпты\n                            </label>\n                        </div>\n                        <!-- Аккордеон для редактирования промптов -->\n                        <div id=\"prompts-accordion\" class=\"mt-3\">\n                            <div class=\"accordion\" id=\"promptsAccordion\">\n                                <!-- Промпт роли -->\n                                <div class=\"card\">\n                                    <div class=\"card-header\" id=\"headingRolePrompt\">\n                                        <h2 class=\"mb-0\">\n                                            <button class=\"btn btn-link\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapseRolePrompt\" aria-expanded=\"true\" aria-controls=\"collapseRolePrompt\">\n                                                Промпт роли\n                                            </button>\n                                        </h2>\n                                    </div>\n                                    <div id=\"collapseRolePrompt\" class=\"collapse\" aria-labelledby=\"headingRolePrompt\" data-parent=\"#promptsAccordion\">\n                                        <div class=\"card-body\">\n                                            <textarea id=\"prompt-role\" class=\"form-control\" rows=\"3\" placeholder=\"Например: Ты - опытный редактор и лингвист.\" title=\"Устанавливает роль для модели\"></textarea>\n                                        </div>\n                                    </div>\n                                </div>\n                                <!-- Грамматические ошибки -->\n                                <div class=\"card\">\n                                    <div class=\"card-header\" id=\"headingGrammar\">\n                                        <h2 class=\"mb-0\">\n                                            <button class=\"btn btn-link collapsed\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapseGrammar\" aria-expanded=\"false\" aria-controls=\"collapseGrammar\">\n                                                Грамматические ошибки\n                                            </button>\n                                        </h2>\n                                    </div>\n                                    <div id=\"collapseGrammar\" class=\"collapse\" aria-labelledby=\"headingGrammar\" data-parent=\"#promptsAccordion\">\n                                        <div class=\"card-body\"> <textarea id=\"prompt-grammatical\" class=\"form-control\" rows=\"5\" title=\"Инструкции для поиска грамматических ошибок\"></textarea>\n</div>\n                                    </div>\n                                </div>\n                                <!-- Синтаксические ошибки -->\n                                <div class=\"card\">\n                                    <div class=\"card-header\" id=\"headingSyntactic\">\n                                        <h2 class=\"mb-0\">\n                                            <button class=\"btn btn-link collapsed\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapseSyntactic\" aria-expanded=\"false\" aria-controls=\"collapseSyntactic\">\n                                                Синтаксические ошибки\n                                            </button>\n                                        </h2>\n                                    </div>\n                                    <div id=\"collapseSyntactic\" class=\"collapse\" aria-labelledby=\"headingSyntactic\" data-parent=\"#promptsAccordion\">\n                                        <div class=\"card-body\">\n                                            <textarea id=\"prompt-syntactic\" class=\"form-control\" rows=\"5\" title=\"Инструкции для поиска синтаксических ошибок\"></textarea>\n                                        </div>\n                                    </div>\n                                </div>\n                                <!-- Стилистические ошибки -->\n                                <div class=\"card\">\n                                    <div class=\"card-header\" id=\"headingStylistic\">\n                                        <h2 class=\"mb-0\">\n                                            <button class=\"btn btn-link collapsed\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapseStylistic\" aria-expanded=\"false\" aria-controls=\"collapseStylistic\">\n                                                Стилистические ошибки\n                                            </button>\n                                        </h2>\n                                    </div>\n                                    <div id=\"collapseStylistic\" class=\"collapse\" aria-labelledby=\"headingStylistic\" data-parent=\"#promptsAccordion\">\n                                        <div class=\"card-body\">\n                                            <textarea id=\"prompt-stylistic\" class=\"form-control\" rows=\"5\" title=\"Инструкции для поиска стилистических ошибок\"></textarea>\n                                        </div>\n                                    </div>\n                                </div>\n                                <!-- Логические ошибки -->\n                                <div class=\"card\">\n                                    <div class=\"card-header\" id=\"headingLogical\">\n                                        <h2 class=\"mb-0\">\n                                            <button class=\"btn btn-link collapsed\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapseLogical\" aria-expanded=\"false\" aria-controls=\"collapseLogical\">\n                                                Логические ошибки\n                                            </button>\n                                        </h2>\n                                    </div>\n                                    <div id=\"collapseLogical\" class=\"collapse\" aria-labelledby=\"headingLogical\" data-parent=\"#promptsAccordion\">\n                                        <div class=\"card-body\">\n                                            <textarea id=\"prompt-logical\" class=\"form-control\" rows=\"5\" title=\"Инструкции для поиска логических ошибок\"></textarea>\n                                        </div>\n                                    </div>\n                                </div>\n                                <!-- Примечание о проверяемом тексте -->\n                                <div class=\"card\">\n                                    <div class=\"card-header\" id=\"headingTextNote\">\n                                        <h2 class=\"mb-0\">\n                                            <button class=\"btn btn-link collapsed\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapseTextNote\" aria-expanded=\"false\" aria-controls=\"collapseTextNote\">\n                                                Примечание о проверяемом тексте\n                                            </button>\n                                        </h2>\n                                    </div>\n                                    <div id=\"collapseTextNote\" class=\"collapse\" aria-labelledby=\"headingTextNote\" data-parent=\"#promptsAccordion\">\n                                        <div class=\"card-body\">\n                                            <textarea id=\"prompt-text-note\" class=\"form-control\" rows=\"3\" placeholder=\"Например: Текст является научной статьей по физике.\" title=\"Дополнительная информация о тексте для модели\"></textarea>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <!-- Кнопка сброса промптов -->\n                            <button id=\"reset-prompts\" class=\"btn btn-secondary mt-3\">Сбросить промпты</button>\n                            <div id=\"prompt-message\" class=\"mt-2\"></div>\n                        </div>\n                    </div>\n                    <!-- Дополнительные опции -->\n                    <div class=\"tab-pane fade\" id=\"additionalOptionsContent\" role=\"tabpanel\" aria-labelledby=\"additional-options-tab\">\n                        <div class=\"alert alert-info mt-3\">\n                            <p>Здесь вы можете настроить дополнительные опции для отображения результатов.</p>\n                        </div>\n                        <!-- Выделение проблемного текста -->\n                        <div class=\"form-check\">\n                            <input class=\"form-check-input\" type=\"checkbox\" id=\"highlight-checkbox\" checked>\n                            <label class=\"form-check-label\" for=\"highlight-checkbox\" title=\"Выделить проблемный текст в документе\">\n                                Выделять проблемный текст\n                            </label>\n                        </div>\n                        <!-- Добавление комментариев -->\n                        <div class=\"form-check mt-2\">\n                            <input class=\"form-check-input\" type=\"checkbox\" id=\"comment-checkbox\">\n                            <label class=\"form-check-label\" for=\"comment-checkbox\" title=\"Добавить комментарии к проблемному тексту\">\n                                Добавлять комментарии к проблемному тексту\n                            </label>\n                        </div>\n                        <!-- Изменение цвета исправленного текста -->\n                        <div class=\"form-check mt-2\">\n                            <input class=\"form-check-input\" type=\"checkbox\" id=\"highlight-corrected-checkbox\" checked>\n                            <label class=\"form-check-label\" for=\"highlight-corrected-checkbox\" title=\"Изменять цвет исправленного текста\">\n                                Изменять цвет исправленного текста\n                            </label>\n                        </div>\n                        <!-- Удалять подсветку при завершении работы с фрагментом -->\n                        <div class=\"form-check mt-2\">\n                            <input class=\"form-check-input\" type=\"checkbox\" id=\"remove-highlight-on-finish-checkbox\">\n                            <label class=\"form-check-label\" for=\"remove-highlight-on-finish-checkbox\" title=\"Удалять подсветку при завершении работы с фрагментом\">\n                                Удалять подсветку при завершении работы с фрагментом\n                            </label>\n                        </div>\n                        <button id=\"remove-all-markers\" class=\"btn btn-danger\">Удалить все маркеры из текста</button>\n                        <!-- Message area -->\n                        <div id=\"message\" class=\"mt-3\"></div>\n                    </div>\n                </div>\n            </div>\n            <!-- Пресеты -->\n            <div class=\"tab-pane fade\" id=\"presetsContent\" role=\"tabpanel\" aria-labelledby=\"presets-tab\">\n                <!-- Инструкция для Пресетов -->\n                <div class=\"alert alert-info mt-3\">\n                    <strong>Инструкция:</strong>\n                    <p>Здесь вы можете сохранять, экспортировать и импортировать ваши настройки в виде пресетов.</p>\n                </div>\n                <!-- Навигация по подтабам Пресетов -->\n                <ul class=\"nav nav-tabs mt-3\" id=\"presetsSubTab\" role=\"tablist\">\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link active\" id=\"save-preset-tab\" data-toggle=\"tab\" href=\"#savePresetContent\" role=\"tab\" aria-controls=\"savePresetContent\" aria-selected=\"true\">Сохранить</a>\n                    </li>\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link\" id=\"-preset-tab\" data-toggle=\"tab\" href=\"#PresetContent\" role=\"tab\" aria-controls=\"PresetContent\" aria-selected=\"false\">Экспорт</a>\n                    </li>\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link\" id=\"import-preset-tab\" data-toggle=\"tab\" href=\"#importPresetContent\" role=\"tab\" aria-controls=\"importPresetContent\" aria-selected=\"false\">Импорт</a>\n                    </li>\n                </ul>\n                <!-- Содержимое подтабов Пресетов -->\n                <div class=\"tab-content\" id=\"presetsSubTabContent\">\n                    <!-- Сохранить пресет -->\n                    <div class=\"tab-pane fade show active\" id=\"savePresetContent\" role=\"tabpanel\" aria-labelledby=\"save-preset-tab\">\n                        <div class=\"alert alert-info mt-3\">\n                            <p>Здесь вы можете сохранить текущие настройки как пресет.</p>\n                        </div>\n                        <!-- Выбор пресета -->\n                        <div class=\"form-group\">\n                            <label for=\"preset-select\">Выберите пресет:</label>\n                            <select id=\"preset-select\" class=\"form-control\" title=\"Выберите сохраненный пресет настроек\"></select>\n                        </div>\n                        <!-- Имя пресета для сохранения -->\n                        <div class=\"form-group\">\n                            <label for=\"preset-name\">Название пресета для сохранения:</label>\n                            <input type=\"text\" id=\"preset-name\" class=\"form-control\" placeholder=\"Введите название пресета\" title=\"Введите название для сохранения текущих настроек как пресет\">\n                        </div>\n                        <!-- Кнопки для управления пресетами -->\n                        <div class=\"form-group mt-3\">\n                            <button id=\"save-preset\" class=\"btn btn-primary\">Сохранить текущие настройки как пресет</button>\n                            <button id=\"delete-preset\" class=\"btn btn-danger\">Удалить выбранный пресет</button>\n                        </div>\n                    </div>\n                    <!-- Экспорт пресета -->\n                    <div class=\"tab-pane fade\" id=\"PresetContent\" role=\"tabpanel\" aria-labelledby=\"-preset-tab\">\n                        <div class=\"alert alert-info mt-3\">\n                            <p>Здесь вы можете экспортировать выбранный пресет в формате JSON.</p>\n                        </div>\n                        <label for=\"preset-json\">Экспорт пресета (JSON):</label>\n                        <textarea id=\"preset-json\" class=\"form-control\" rows=\"5\" readonly title=\"Скопируйте этот JSON для экспорта пресета\"></textarea>\n                        <button id=\"copy-preset-json\" class=\"btn btn-secondary mt-2\">Скопировать JSON</button>\n                    </div>\n                    <!-- Импорт пресета -->\n                    <div class=\"tab-pane fade\" id=\"importPresetContent\" role=\"tabpanel\" aria-labelledby=\"import-preset-tab\">\n                        <div class=\"alert alert-info mt-3\">\n                            <p>Здесь вы можете импортировать пресет из JSON.</p>\n                        </div>\n                        <label for=\"preset-json-import\">Импорт пресета (JSON):</label>\n                        <textarea id=\"preset-json-import\" class=\"form-control\" rows=\"5\" title=\"Вставьте JSON для импорта пресета\"></textarea>\n                        <button id=\"import-preset\" class=\"btn btn-secondary mt-2\">Импортировать пресет</button>\n                    </div>\n                </div>\n                <!-- Сообщения о действиях с пресетами -->\n                        <div id=\"preset-message\" class=\"mt-2\"></div>\n                <div id=\"preset-confirmation\" class=\"mt-2\" style=\"display:none;\">\n                            <div class=\"alert alert-warning\">\n                                <p id=\"preset-confirmation-message\"></p>\n                                <button id=\"preset-confirm-yes\" class=\"btn btn-danger\">Да</button>\n                                <button id=\"preset-confirm-no\" class=\"btn btn-secondary\">Нет</button>\n                            </div>\n                        </div>\n                <!-- Кнопка сброса настроек -->\n                <button id=\"reset-settings\" class=\"btn btn-secondary mt-3\">Сбросить настройки</button>\n                <div id=\"reset-message\" class=\"mt-2\"></div>\n            </div>\n        </div>\n    </div>\n`;\n\n    // Инициализация селекторов и загрузка настроек\n    initializeGrammarModelSelect();\n    initializePresetSelectGrammar();\n\n    // Загрузка сохраненных настроек\n    loadGrammarSettings();\n    loadGrammarPrompts();\n    \n    // addSelectCurrentTextButton();\n\n    // Обработчики событий для настроек\n    document.getElementById('check-grammar').onclick = checkGrammarGrammar;\n    document.getElementById('highlight-checkbox').onchange = () => { saveGrammarSettings(); updatePresetJSONGrammar(); };\n    document.getElementById('comment-checkbox').onchange = () => { saveGrammarSettings(); updatePresetJSONGrammar(); };\n    document.getElementById('highlight-corrected-checkbox').onchange = () => { saveGrammarSettings(); updatePresetJSONGrammar(); };\n    document.getElementById('check-grammatical').onchange = () => { saveGrammarSettings(); updatePresetJSONGrammar(); };\n    document.getElementById('check-syntactic').onchange = () => { saveGrammarSettings(); updatePresetJSONGrammar(); };\n    document.getElementById('check-stylistic').onchange = () => { saveGrammarSettings(); updatePresetJSONGrammar(); };\n    document.getElementById('check-logical').onchange = () => { saveGrammarSettings(); updatePresetJSONGrammar(); };\n    document.getElementById('split-into-chunks-checkbox').onchange = () => { saveGrammarSettings(); updatePresetJSONGrammar(); };\n    document.getElementById('chunk-size').onchange = () => { saveGrammarSettings(); updatePresetJSONGrammar(); };\n    document.getElementById('max-chars').onchange = () => { saveGrammarSettings(); updatePresetJSONGrammar(); };\n    document.getElementById('temperature').onchange = () => { saveGrammarSettings(); updatePresetJSONGrammar(); };\n    document.getElementById('max-tokens').onchange = () => { saveGrammarSettings(); updatePresetJSONGrammar(); };\n    document.getElementById('response-format-checkbox').onchange = () => { saveGrammarSettings(); updatePresetJSONGrammar(); };\n    document.getElementById('retry-on-error-checkbox').onchange = () => { saveGrammarSettings(); updatePresetJSONGrammar(); };\n    document.getElementById('retry-count').onchange = () => { saveGrammarSettings(); updatePresetJSONGrammar(); };\n    document.getElementById('edit-prompts-checkbox').onchange = () => { togglePromptsEditorGrammar(); updatePresetJSONGrammar(); };\n\n    // Обработчики для промптов\n    document.getElementById('prompt-role').addEventListener('input', () => { saveGrammarPrompts(); updatePresetJSONGrammar(); });\n    document.getElementById('prompt-grammatical').addEventListener('input', () => { saveGrammarPrompts(); updatePresetJSONGrammar(); });\n    document.getElementById('prompt-syntactic').addEventListener('input', () => { saveGrammarPrompts(); updatePresetJSONGrammar(); });\n    document.getElementById('prompt-stylistic').addEventListener('input', () => { saveGrammarPrompts(); updatePresetJSONGrammar(); });\n    document.getElementById('prompt-logical').addEventListener('input', () => { saveGrammarPrompts(); updatePresetJSONGrammar(); });\n    document.getElementById('prompt-text-note').addEventListener('input', () => { saveGrammarPrompts(); updatePresetJSONGrammar(); });\n\n    // Обработчик для кнопки сброса промптов\n    document.getElementById('reset-prompts').onclick = () => { resetGrammarPrompts(); updatePresetJSONGrammar(); };\n\n    // Обработчик для кнопки сброса настроек\n    document.getElementById('reset-settings').onclick = resetGrammarSettings;\n\n    // Обработчики для пресетов\n    document.getElementById('preset-select').onchange = loadSelectedPresetGrammar;\n    document.getElementById('save-preset').onclick = saveCurrentSettingsAsPresetGrammar;\n    document.getElementById('delete-preset').onclick = deleteSelectedPresetGrammar;\n    document.getElementById('copy-preset-json').onclick = copyPresetJSONGrammar;\n    document.getElementById('import-preset').onclick = importPresetFromJSONGrammar;\n\n    // Обработчик события для кнопки \"Отменить\"\n    document.getElementById('cancel-check').onclick = cancelCheckGrammar;\n\n    // Обработчик для фильтра результатов\n    document.getElementById('filter-select').onchange = () => displayResultsGrammar(window.grammarResults);\n\n    document.getElementById('select-current-text').onclick = selectCurrentText\n    document.getElementById('finish-current-fragment').onclick = finishCurrentFragment\n\n    document.getElementById('remove-all-markers').onclick = cleanAllTimestampsGrammar;\n\n    // Переменная для хранения контроллера отмены\n    window.abortController = null;\n\n    // Глобальная переменная\n    window.isLoadingPreset = false;\n\n    window.currentSelectionTimestamp = null;\n    window.isGrammarCheckCompleted = false;\n\n    window.appliedCorrections = [];\n    window.savedSelection =  null;\n\n    // Вызываем функцию установки обработчиков после инициализации интерфейса\n    // addGrammarButtons();\n    setupSettingsChangeHandlersGrammar();\n}\n\nasync function selectCurrentText() {\n    try {\n        await Word.run(async (context) => {\n            const body = context.document.body;\n\n            // Поиск START_TIMESTAMP\n            const startSearch = body.search(\"START_TIMESTAMP\", { matchCase: true });\n            startSearch.load(\"items\");\n            await context.sync();\n\n            // Поиск END_TIMESTAMP\n            const endSearch = body.search(\"END_TIMESTAMP\", { matchCase: true });\n            endSearch.load(\"items\");\n            await context.sync();\n\n            console.log(startSearch, endSearch)\n\n            if (startSearch.items.length > 0 && endSearch.items.length > 0) {\n                const startRange = startSearch.items[0];\n                const endRange = endSearch.items[0];\n\n                // Создаем диапазон от начала START_TIMESTAMP до конца END_TIMESTAMP\n                const fullRange = startRange.expandTo(endRange);\n\n                // Выделяем текст\n                fullRange.select();\n\n                console.log('Текущий текст выделен');\n                document.getElementById('kuga_selection-info').textContent = 'Текст между маркерами выделен';\n            } else {\n                console.log('Маркеры не найдены');\n                document.getElementById('kuga_selection-info').textContent = 'Маркеры не найдены';\n            }\n        });\n    } catch (error) {\n        console.error('Ошибка при выделении текущего текста:', error);\n        document.getElementById('kuga_selection-info').textContent = `Ошибка: ${error.message}`;\n    }\n}\n\n\n\n// Добавьте эти вспомогательные функции\nasync function markSelectedText(text) {\n    try {\n        await Word.run(async (context) => {\n            const selection = context.document.getSelection();\n            currentSelectionTimestamp = Date.now();\n            const startMarker = `START_TIMESTAMP`;\n            const endMarker = `END_TIMESTAMP`;\n\n            selection.insertText(startMarker, Word.InsertLocation.before);\n            selection.insertText(endMarker, Word.InsertLocation.after);\n\n            const startRange = context.document.body.search(startMarker, { matchCase: true }).getFirst();\n            const endRange = context.document.body.search(endMarker, { matchCase: true }).getFirst();\n\n            startRange.font.size = 1;\n            endRange.font.size = 1;\n            startRange.font.color = \"white\";\n            endRange.font.color = \"white\";\n\n            await context.sync();\n\n            localStorage.setItem('currentSelectionTimestamp', currentSelectionTimestamp);\n        });\n    } catch (error) {\n        console.error('Ошибка при маркировке выделенного текста:', error);\n    }\n}\n\n\nasync function getSavedSelectionRange(context) {\n    const body = context.document.body;\n    const startMarker = `START_TIMESTAMP`;\n    const endMarker = `END_TIMESTAMP`;\n\n    const startSearch = body.search(startMarker, { matchCase: true });\n    const endSearch = body.search(endMarker, { matchCase: true });\n\n    context.load(startSearch, 'items');\n    context.load(endSearch, 'items');\n    await context.sync();\n\n    if (startSearch.items.length > 0 && endSearch.items.length > 0) {\n        const startRange = startSearch.items[0];\n        const endRange = endSearch.items[0];\n        const fullRange = startRange.expandTo(endRange);\n        return fullRange;\n    } else {\n        return null;\n    }\n}\n\n\nasync function finishCurrentFragment() {\n    try {\n        await cleanAllTimestampsGrammar();\n\n        if(settings.removeHighlightOnFinish){\n            await removeAllHighlights();\n        }\n        \n        window.appliedCorrections = [];\n        window.grammarResults = [];\n        document.getElementById('grammar-results').innerHTML = '';\n        document.getElementById('grammar-history').innerHTML = '';\n        document.getElementById('filter-container').style.display = 'none';\n\n        // Скрываем кнопки\n        document.getElementById('select-current-text').style.display = 'none';\n        document.getElementById('finish-current-fragment').style.display = 'none';\n\n        console.log('Работа с текущим фрагментом завершена');\n    } catch (error) {\n        console.error('Ошибка при завершении работы с фрагментом:', error);\n    }\n}\n\nasync function removeAllHighlights() {\n    try {\n        await Word.run(async (context) => {\n            const fullRange = context.document.body.getRange();\n            fullRange.load(\"text\");\n            await context.sync();\n\n            const fragments = splitLongText(fullRange.text, 250);\n\n            for (let fragment of fragments) {\n                const ranges = fullRange.search(fragment, { matchCase: true, matchWholeWord: false });\n                ranges.load(\"items\");\n                await context.sync();\n\n                for (let range of ranges.items) {\n                    range.font.load(\"highlightColor\");\n                    await context.sync();\n\n                    console.log(range.font.highlightColor)\n\n                    range.font.highlightColor = null\n\n                    if (range.font.highlightColor === 'yellow' ||\n                        range.font.highlightColor === 'green' ||\n                        range.font.highlightColor === 'lightGreen') {\n                        range.font.highlightColor = 'noHighlight';\n                    }\n                }\n                await context.sync();\n            }\n\n            console.log('Все выделения удалены');\n        });\n    } catch (error) {\n        console.error('Ошибка при удалении выделений:', error);\n    }\n}\n\n\n// function splitLongText(text, maxLength) {\n//     const words = text.split(' ');\n//     const fragments = [];\n//     let currentFragment = '';\n\n//     for (let word of words) {\n//         if ((currentFragment + ' ' + word).length > maxLength && currentFragment.length > 0) {\n//             fragments.push(currentFragment.trim());\n//             currentFragment = '';\n//         }\n//         currentFragment += (currentFragment ? ' ' : '') + word;\n//     }\n\n//     if (currentFragment.length > 0) {\n//         fragments.push(currentFragment.trim());\n//     }\n\n//     return fragments;\n// }\n\n\n\n\nfunction addToHistory(correction) {\n    // Добавляем поле для отслеживания, было ли исправление применено автоматически или отмечено как решенное вручную\n    correction.resolvedManually = !correction.can_edit;\n    appliedCorrections.push(correction);\n}\n\nfunction markAsResolved(errorIndex, results, buttonElement) {\n    const error = results[errorIndex];\n    if (!error) return;\n\n    // Добавляем ошибку в историю исправлений\n    addToHistory(error);\n\n    // Удаляем ошибку из массива результатов\n    results.splice(errorIndex, 1);\n\n    // Перерисовываем список ошибок\n    displayResultsGrammar(results);\n\n    // Обновляем историю исправлений\n    displayCorrectionHistory();\n\n    // Проверяем, остались ли ошибки\n    checkIfNoErrorsLeft();\n}\n\n\nfunction initializeGrammarModelSelect() {\n    $('#grammar-model').select2({\n        width: '100%',\n        placeholder: 'Выберите модель для проверки',\n    }).on('select2:opening', function () {\n        setTimeout(() => {\n            $('.select2-search__field').get(0).focus();\n        }, 0);\n    }).on('change', function () {\n        const selectedModel = $(this).val();\n        localStorage.setItem('grammarModel', selectedModel);\n        updatePresetJSONGrammar();\n    });\n\n    populateGrammarModelSelect();\n}\n\nfunction populateGrammarModelSelect() {\n    const select = $('#grammar-model');\n    const models = JSON.parse(localStorage.getItem('models') || '[]');\n    console.log('Loaded models:', models); // Логирование загруженных моделей\n    select.empty();\n    let defaultModelId = null;\n    models.forEach((model, index) => {\n        const option = new Option(model.name, model.id, false, false);\n        select.append(option);\n        // Устанавливаем defaultModelId на первую модель, если оно еще не установлено\n        if (!defaultModelId) {\n            defaultModelId = model.id;\n        }\n        // Если вы хотите установить конкретную модель по умолчанию, раскомментируйте и отредактируйте следующую строку\n        if (model.id === 'anthropic/claude-3.5-sonnet:beta') {\n            defaultModelId = model.id;\n        } \n        // а\n    });\n    console.log('Default model ID:', defaultModelId); // Логирование ID модели по умолчанию\n\n    const savedModel = localStorage.getItem('grammarModel');\n    console.log('Saved model:', savedModel); // Логирование сохранённой модели\n\n    if (savedModel && models.some(model => model.id === savedModel)) {\n        select.val(savedModel).trigger('change');\n        console.log(`Selected saved model: ${savedModel}`);\n    } else if (defaultModelId) {\n        select.val(defaultModelId).trigger('change');\n        console.log(`Selected default model: ${defaultModelId}`);\n    } else {\n        console.log('No models available to select');\n    }\n}\n\n\n\nfunction initializePresetSelectGrammar() {\n    populatePresetSelectGrammar();\n\n    $('#preset-select').select2({\n        width: '100%',\n        placeholder: 'Выберите пресет',\n    }).on('select2:opening', function () {\n        setTimeout(() => {\n            $('.select2-search__field').get(0).focus();\n        }, 0);\n    });\n}\n\nfunction populatePresetSelectGrammar() {\n    const select = $('#preset-select');\n    select.empty();\n\n    // Добавляем опцию \"Текущие настройки\"\n    const currentOption = new Option('Текущие настройки', 'current', false, false);\n    select.append(currentOption);\n\n    let presets = JSON.parse(localStorage.getItem('grammarPresets') || '[]');\n    let lastSelectedPreset = localStorage.getItem('lastSelectedPreset') || null;\n\n    presets.forEach(preset => {\n        const option = new Option(preset.name, preset.name, false, false);\n        select.append(option);\n    });\n\n    if (lastSelectedPreset && lastSelectedPreset !== 'current') {\n        select.val(lastSelectedPreset).trigger('change');\n    } else {\n        // Устанавливаем \"Текущие настройки\", если нет последнего выбранного пресета\n        select.val('current').trigger('change');\n    }\n}\n\n\n\nfunction getBooleanSettingGrammar(key, defaultValue) {\n    const value = localStorage.getItem(key);\n    if (value === null || value === undefined) {\n        return defaultValue;\n    }\n    return (value === 'true');\n}\n\nfunction getNumericSettingGrammar(key, defaultValue) {\n    const value = localStorage.getItem(key);\n    if (value === null || value === undefined) {\n        return defaultValue;\n    }\n    const num = parseFloat(value);\n    return isNaN(num) ? defaultValue : num;\n}\n\nfunction loadGrammarSettings() {\n    const lastSelectedPreset = localStorage.getItem('lastSelectedPreset');\n    if (lastSelectedPreset && lastSelectedPreset !== 'current') {\n        let presets = JSON.parse(localStorage.getItem('grammarPresets') || '[]');\n        const preset = presets.find(p => p.name === lastSelectedPreset);\n        if (preset) {\n            $('#preset-select').val(preset.name).trigger('change');\n            loadSelectedPresetGrammar();\n            return;\n        } else {\n            localStorage.removeItem('lastSelectedPreset');\n            // Устанавливаем \"Текущие настройки\", если пресет не найден\n            $('#preset-select').val('current').trigger('change');\n        }\n    } else {\n        // Устанавливаем \"Текущие настройки\", если нет последнего выбранного пресета\n        $('#preset-select').val('current').trigger('change');\n    }\n\n    // Далее загружаем настройки из localStorage\n    const highlight = getBooleanSettingGrammar('highlightErrors', true);\n    document.getElementById('highlight-checkbox').checked = highlight;\n\n    const addComments = getBooleanSettingGrammar('addComments', false);\n    document.getElementById('comment-checkbox').checked = addComments;\n\n    const highlightCorrected = getBooleanSettingGrammar('highlightCorrected', true);\n    document.getElementById('highlight-corrected-checkbox').checked = highlightCorrected;\n\n    const checkGrammatical = getBooleanSettingGrammar('checkGrammatical', false);\n    const checkSyntactic = getBooleanSettingGrammar('checkSyntactic', false);\n    const checkStylistic = getBooleanSettingGrammar('checkStylistic', true);\n    const checkLogical = getBooleanSettingGrammar('checkLogical', true);\n\n    document.getElementById('check-grammatical').checked = checkGrammatical;\n    document.getElementById('check-syntactic').checked = checkSyntactic;\n    document.getElementById('check-stylistic').checked = checkStylistic;\n    document.getElementById('check-logical').checked = checkLogical;\n\n    const splitIntoChunks = getBooleanSettingGrammar('splitIntoChunks', false);\n    document.getElementById('split-into-chunks-checkbox').checked = splitIntoChunks;\n\n    const chunkSize = getNumericSettingGrammar('chunkSize', 8);\n    document.getElementById('chunk-size').value = chunkSize;\n\n    const maxChars = getNumericSettingGrammar('maxChars', 2000);\n    document.getElementById('max-chars').value = maxChars;\n\n    const temperature = getNumericSettingGrammar('temperature', 0.1);\n    document.getElementById('temperature').value = temperature;\n\n    const maxTokens = getNumericSettingGrammar('maxTokens', 4000);\n    document.getElementById('max-tokens').value = maxTokens;\n\n    const responseFormat = getBooleanSettingGrammar('responseFormat', false);\n    document.getElementById('response-format-checkbox').checked = responseFormat;\n\n    const retryOnError = getBooleanSettingGrammar('retryOnError', true);\n    document.getElementById('retry-on-error-checkbox').checked = retryOnError;\n\n    const retryCount = getNumericSettingGrammar('retryCount', 3);\n    document.getElementById('retry-count').value = retryCount;\n\n    const editPrompts = getBooleanSettingGrammar('editPrompts', true);\n    document.getElementById('edit-prompts-checkbox').checked = editPrompts;\n\n    const removeHighlightOnFinish = getBooleanSettingGrammar('removeHighlightOnFinish', false);\n    document.getElementById('remove-highlight-on-finish-checkbox').checked = removeHighlightOnFinish;\n\n\n\n    togglePromptsEditorGrammar();\n}\n\n\nfunction saveGrammarSettings() {\n    const highlight = document.getElementById('highlight-checkbox').checked;\n    localStorage.setItem('highlightErrors', highlight);\n\n    const addComments = document.getElementById('comment-checkbox').checked;\n    localStorage.setItem('addComments', addComments);\n\n    const highlightCorrected = document.getElementById('highlight-corrected-checkbox').checked;\n    localStorage.setItem('highlightCorrected', highlightCorrected);\n\n    const checkGrammatical = document.getElementById('check-grammatical').checked;\n    const checkSyntactic = document.getElementById('check-syntactic').checked;\n    const checkStylistic = document.getElementById('check-stylistic').checked;\n    const checkLogical = document.getElementById('check-logical').checked;\n\n    localStorage.setItem('checkGrammatical', checkGrammatical);\n    localStorage.setItem('checkSyntactic', checkSyntactic);\n    localStorage.setItem('checkStylistic', checkStylistic);\n    localStorage.setItem('checkLogical', checkLogical);\n\n    const splitIntoChunks = document.getElementById('split-into-chunks-checkbox').checked;\n    localStorage.setItem('splitIntoChunks', splitIntoChunks);\n\n    const chunkSize = document.getElementById('chunk-size').value;\n    localStorage.setItem('chunkSize', chunkSize);\n\n    const maxChars = document.getElementById('max-chars').value;\n    localStorage.setItem('maxChars', maxChars);\n\n    const temperature = parseFloat(document.getElementById('temperature').value);\n    localStorage.setItem('temperature', temperature);\n\n    const maxTokens = parseInt(document.getElementById('max-tokens').value, 10);\n    localStorage.setItem('maxTokens', maxTokens);\n\n    const responseFormat = document.getElementById('response-format-checkbox').checked;\n    localStorage.setItem('responseFormat', responseFormat);\n\n    const retryOnError = document.getElementById('retry-on-error-checkbox').checked;\n    localStorage.setItem('retryOnError', retryOnError);\n\n    const retryCount = parseInt(document.getElementById('retry-count').value, 10);\n    localStorage.setItem('retryCount', retryCount);\n\n    const editPrompts = document.getElementById('edit-prompts-checkbox').checked;\n    localStorage.setItem('editPrompts', editPrompts);\n\n    const removeHighlightOnFinish = document.getElementById('remove-highlight-on-finish-checkbox').checked;\n    localStorage.setItem('removeHighlightOnFinish', removeHighlightOnFinish);\n\n\n    togglePromptsEditorGrammar();\n}\n\nfunction resetGrammarSettings() {\n    // Очистка настроек из localStorage\n    localStorage.removeItem('highlightErrors');\n    localStorage.removeItem('addComments');\n    localStorage.removeItem('highlightCorrected');\n    localStorage.removeItem('checkGrammatical');\n    localStorage.removeItem('checkSyntactic');\n    localStorage.removeItem('checkStylistic');\n    localStorage.removeItem('checkLogical');\n    localStorage.removeItem('splitIntoChunks');\n    localStorage.removeItem('chunkSize');\n    localStorage.removeItem('maxChars');\n    localStorage.removeItem('temperature');\n    localStorage.removeItem('maxTokens');\n    localStorage.removeItem('responseFormat');\n    localStorage.removeItem('retryOnError');\n    localStorage.removeItem('retryCount');\n    localStorage.removeItem('editPrompts');\n    localStorage.removeItem('promptRole');\n    localStorage.removeItem('promptGrammatical');\n    localStorage.removeItem('promptSyntactic');\n    localStorage.removeItem('promptStylistic');\n    localStorage.removeItem('promptLogical');\n    localStorage.removeItem('promptTextNote');\n    localStorage.removeItem('grammarModel');\n    localStorage.removeItem('lastSelectedPreset');\n\n    // Очищаем выбор пресета\n    $('#preset-select').val(null).trigger('change');\n\n    // Перезагрузка настроек и промптов\n    loadGrammarSettings();\n    loadGrammarPrompts();\n\n    // Обновляем селектор модели после сброса\n    populateGrammarModelSelect();\n\n    // Очищаем JSON текстовое поле\n    document.getElementById('preset-json').value = '';\n\n    // Отображение сообщения об успешном сбросе настроек\n    displayResetMessageGrammar('Настройки сброшены к значениям по умолчанию.');\n}\n\n\nfunction displayResetMessageGrammar(message) {\n    const messageDiv = document.getElementById('reset-message');\n    messageDiv.innerHTML = `<div class=\"alert alert-info\">${message}</div>`;\n    setTimeout(() => {\n        messageDiv.innerHTML = '';\n    }, 3000);\n}\n\nfunction togglePromptsEditorGrammar() {\n    const editPrompts = document.getElementById('edit-prompts-checkbox').checked;\n    const promptsAccordion = document.getElementById('prompts-accordion');\n    promptsAccordion.style.display = editPrompts ? 'block' : 'none';\n}\n\nfunction loadGrammarPrompts() {\n    const defaultPrompts = getDefaultPromptsGrammar();\n\n    const promptRole = localStorage.getItem('promptRole') || defaultPrompts['role'];\n    const promptGrammatical = localStorage.getItem('promptGrammatical') || defaultPrompts['грамматическая'];\n    const promptSyntactic = localStorage.getItem('promptSyntactic') || defaultPrompts['синтаксическая'];\n    const promptStylistic = localStorage.getItem('promptStylistic') || defaultPrompts['стилистическая'];\n    const promptLogical = localStorage.getItem('promptLogical') || defaultPrompts['логическая'];\n    const promptTextNote = localStorage.getItem('promptTextNote') || '';\n\n    document.getElementById('prompt-role').value = promptRole;\n    document.getElementById('prompt-grammatical').value = promptGrammatical;\n    document.getElementById('prompt-syntactic').value = promptSyntactic;\n    document.getElementById('prompt-stylistic').value = promptStylistic;\n    document.getElementById('prompt-logical').value = promptLogical;\n    document.getElementById('prompt-text-note').value = promptTextNote;\n}\n\nfunction saveGrammarPrompts() {\n    const promptRole = document.getElementById('prompt-role').value;\n    const promptGrammatical = document.getElementById('prompt-grammatical').value;\n    const promptSyntactic = document.getElementById('prompt-syntactic').value;\n    const promptStylistic = document.getElementById('prompt-stylistic').value;\n    const promptLogical = document.getElementById('prompt-logical').value;\n    const promptTextNote = document.getElementById('prompt-text-note').value;\n\n    localStorage.setItem('promptRole', promptRole);\n    localStorage.setItem('promptGrammatical', promptGrammatical);\n    localStorage.setItem('promptSyntactic', promptSyntactic);\n    localStorage.setItem('promptStylistic', promptStylistic);\n    localStorage.setItem('promptLogical', promptLogical);\n    localStorage.setItem('promptTextNote', promptTextNote);\n\n    // Отображаем сообщение об успешном сохранении\n    displayPromptMessageGrammar('Промпты сохранены и будут применены при следующей проверке.');\n}\n\nfunction resetGrammarPrompts() {\n    const defaultPrompts = getDefaultPromptsGrammar();\n    document.getElementById('prompt-role').value = defaultPrompts['role'];\n    document.getElementById('prompt-grammatical').value = defaultPrompts['грамматическая'];\n    document.getElementById('prompt-syntactic').value = defaultPrompts['синтаксическая'];\n    document.getElementById('prompt-stylistic').value = defaultPrompts['стилистическая'];\n    document.getElementById('prompt-logical').value = defaultPrompts['логическая'];\n    document.getElementById('prompt-text-note').value = '';\n\n    saveGrammarPrompts();\n\n    // Отображаем сообщение об успешном сбросе\n    displayPromptMessageGrammar('Промпты сброшены к значениям по умолчанию.');\n}\n\nfunction displayPromptMessageGrammar(message) {\n    const messageDiv = document.getElementById('prompt-message');\n    messageDiv.innerHTML = `<div class=\"alert alert-info\">${message}</div>`;\n    setTimeout(() => {\n        messageDiv.innerHTML = '';\n    }, 3000);\n}\n\nfunction getCurrentSettingsGrammar() {\n    return {\n        highlightErrors: document.getElementById('highlight-checkbox').checked,\n        addComments: document.getElementById('comment-checkbox').checked,\n        highlightCorrected: document.getElementById('highlight-corrected-checkbox').checked,\n        checkGrammatical: document.getElementById('check-grammatical').checked,\n        checkSyntactic: document.getElementById('check-syntactic').checked,\n        checkStylistic: document.getElementById('check-stylistic').checked,\n        checkLogical: document.getElementById('check-logical').checked,\n        splitIntoChunks: document.getElementById('split-into-chunks-checkbox').checked,\n        chunkSize: document.getElementById('chunk-size').value,\n        maxChars: document.getElementById('max-chars').value,\n        temperature: document.getElementById('temperature').value,\n        maxTokens: document.getElementById('max-tokens').value,\n        responseFormat: document.getElementById('response-format-checkbox').checked,\n        retryOnError: document.getElementById('retry-on-error-checkbox').checked,\n        retryCount: document.getElementById('retry-count').value,\n        editPrompts: document.getElementById('edit-prompts-checkbox').checked,\n        removeHighlightOnFinish: document.getElementById('remove-highlight-on-finish-checkbox').checked,\n        grammarModel: $('#grammar-model').val(),\n    };\n}\n\nfunction getCurrentPromptsGrammar() {\n    return {\n        promptRole: document.getElementById('prompt-role').value,\n        promptGrammatical: document.getElementById('prompt-grammatical').value,\n        promptSyntactic: document.getElementById('prompt-syntactic').value,\n        promptStylistic: document.getElementById('prompt-stylistic').value,\n        promptLogical: document.getElementById('prompt-logical').value,\n        promptTextNote: document.getElementById('prompt-text-note').value,\n    };\n}\n\nfunction saveCurrentSettingsAsPresetGrammar() {\n    const presetNameInput = document.getElementById('preset-name');\n    const presetName = presetNameInput.value.trim();\n    if (!presetName) {\n        displayPresetMessageGrammar('Название пресета не может быть пустым.', 'danger');\n        return;\n    }\n\n    if (presetName.toLowerCase() === 'current' || presetName === 'Текущие настройки') {\n        displayPresetMessageGrammar('Название пресета не может быть \"Текущие настройки\".', 'danger');\n        return;\n    }\n\n    const preset = {\n        name: presetName,\n        settings: getCurrentSettingsGrammar(),\n        prompts: getCurrentPromptsGrammar(),\n    };\n\n    let presets = JSON.parse(localStorage.getItem('grammarPresets') || '[]');\n\n    // Проверяем, существует ли пресет с таким именем\n    const existingIndex = presets.findIndex(p => p.name === presetName);\n    if (existingIndex !== -1) {\n        // Предлагаем перезаписать существующий пресет\n        showPresetConfirmationGrammar(`Пресет с названием \"${presetName}\" уже существует. Перезаписать его?`, () => {\n            presets[existingIndex] = preset;\n            localStorage.setItem('grammarPresets', JSON.stringify(presets));\n            populatePresetSelectGrammar();\n\n            // Выбираем только что созданный пресет\n            $('#preset-select').val(preset.name).trigger('change');\n            localStorage.setItem('lastSelectedPreset', preset.name);\n\n            displayPresetMessageGrammar('Пресет сохранен.', 'success');\n\n            // Очищаем поле ввода названия пресета\n            presetNameInput.value = '';\n\n            // Обновляем JSON пресета\n            updatePresetJSONGrammar();\n        });\n    } else {\n        presets.push(preset);\n        localStorage.setItem('grammarPresets', JSON.stringify(presets));\n        populatePresetSelectGrammar();\n\n        // Выбираем только что созданный пресет\n        $('#preset-select').val(preset.name).trigger('change');\n        localStorage.setItem('lastSelectedPreset', preset.name);\n\n        displayPresetMessageGrammar('Пресет сохранен.', 'success');\n\n        // Очищаем поле ввода названия пресета\n        presetNameInput.value = '';\n\n        // Обновляем JSON пресета\n        updatePresetJSONGrammar();\n    }\n}\n\n\n\n\nfunction showPresetConfirmationGrammar(message, onConfirm) {\n    const confirmationDiv = document.getElementById('preset-confirmation');\n    const confirmationMessage = document.getElementById('preset-confirmation-message');\n    const confirmYesButton = document.getElementById('preset-confirm-yes');\n    const confirmNoButton = document.getElementById('preset-confirm-no');\n\n    confirmationMessage.textContent = message;\n    confirmationDiv.style.display = 'block';\n\n    // Удаляем предыдущие обработчики событий\n    confirmYesButton.onclick = null;\n    confirmNoButton.onclick = null;\n\n    confirmYesButton.onclick = () => {\n        confirmationDiv.style.display = 'none';\n        onConfirm();\n    };\n\n    confirmNoButton.onclick = () => {\n        confirmationDiv.style.display = 'none';\n    };\n}\n\n// ВАЖНОЕ ИЗМЕНЕНИЕ: Добавляем сброс выбора пресета при изменении настроек или промптов\n\nfunction setupSettingsChangeHandlersGrammar() {\n    // Функция для обработки изменений настроек\n    function onSettingsChange() {\n        if (window.isLoadingPreset) {\n            return;\n        }\n    \n        saveGrammarSettings();\n        saveGrammarPrompts();\n    \n        const currentSettings = getCurrentSettingsGrammar();\n        const currentPrompts = getCurrentPromptsGrammar();\n        let matchedPresetName = null;\n    \n        let presets = JSON.parse(localStorage.getItem('grammarPresets') || '[]');\n        for (let preset of presets) {\n            if (\n                areSettingsEqual(preset.settings, currentSettings) &&\n                areSettingsEqual(preset.prompts, currentPrompts)\n            ) {\n                matchedPresetName = preset.name;\n                break;\n            }\n        }\n    \n        if (matchedPresetName) {\n            // Выбираем соответствующий пресет без вызова события 'change'\n            $('#preset-select').val(matchedPresetName).trigger('change');\n            localStorage.setItem('lastSelectedPreset', matchedPresetName);\n        } else {\n            // Устанавливаем \"Текущие настройки\", если нет соответствующего пресета\n            $('#preset-select').val('current').trigger('change'); // Добавлено .trigger('change')\n            localStorage.removeItem('lastSelectedPreset');\n        }\n    \n        // Обновляем JSON пресета\n        updatePresetJSONGrammar();\n    }\n\n    const settingsElements = [\n        'highlight-checkbox',\n        'comment-checkbox',\n        'highlight-corrected-checkbox',\n        'check-grammatical',\n        'check-syntactic',\n        'check-stylistic',\n        'check-logical',\n        'split-into-chunks-checkbox',\n        'chunk-size',\n        'max-chars',\n        'temperature',\n        'max-tokens',\n        'response-format-checkbox',\n        'retry-on-error-checkbox',\n        'retry-count',\n        'edit-prompts-checkbox',\n    ];\n\n    settingsElements.forEach(id => {\n        const element = document.getElementById(id);\n        if (element) {\n            element.addEventListener('change', onSettingsChange);\n        }\n    });\n\n    // Навешиваем обработчики на промпты\n    const promptElements = [\n        'prompt-role',\n        'prompt-grammatical',\n        'prompt-syntactic',\n        'prompt-stylistic',\n        'prompt-logical',\n        'prompt-text-note',\n    ];\n\n    promptElements.forEach(id => {\n        const element = document.getElementById(id);\n        if (element) {\n            element.addEventListener('input', onSettingsChange);\n        }\n    });\n\n    // Обработчик для модели\n    $('#grammar-model').on('change', onSettingsChange);\n\n}\n\n\nfunction areSettingsEqual(obj1, obj2) {\n    const obj1Keys = Object.keys(obj1).sort();\n    const obj2Keys = Object.keys(obj2).sort();\n\n    if (obj1Keys.length !== obj2Keys.length) {\n        return false;\n    }\n\n    for (let i = 0; i < obj1Keys.length; i++) {\n        const key = obj1Keys[i];\n        if (key !== obj2Keys[i]) {\n            return false;\n        }\n        const val1 = obj1[key];\n        const val2 = obj2[key];\n\n        if (typeof val1 === 'object' && typeof val2 === 'object') {\n            if (!areSettingsEqual(val1, val2)) {\n                return false;\n            }\n        } else if (val1 !== val2) {\n            return false;\n        }\n    }\n    return true;\n}\n\n\n\n\n\nfunction loadSelectedPresetGrammar() {\n    window.isLoadingPreset = true;\n\n    const presetName = $('#preset-select').val();\n    if (!presetName || presetName === 'current') {\n        // Если выбран \"Текущие настройки\", ничего не делаем\n        window.isLoadingPreset = false;\n        return;\n    }\n\n    let presets = JSON.parse(localStorage.getItem('grammarPresets') || '[]');\n    const preset = presets.find(p => p.name === presetName);\n    if (!preset) {\n        window.isLoadingPreset = false;\n        return;\n    }\n\n    // Загрузка настроек из пресета\n    const settings = preset.settings;\n    document.getElementById('highlight-checkbox').checked = settings.highlightErrors;\n    document.getElementById('comment-checkbox').checked = settings.addComments;\n    document.getElementById('highlight-corrected-checkbox').checked = settings.highlightCorrected;\n    document.getElementById('check-grammatical').checked = settings.checkGrammatical;\n    document.getElementById('check-syntactic').checked = settings.checkSyntactic;\n    document.getElementById('check-stylistic').checked = settings.checkStylistic;\n    document.getElementById('check-logical').checked = settings.checkLogical;\n    document.getElementById('split-into-chunks-checkbox').checked = settings.splitIntoChunks;\n    document.getElementById('chunk-size').value = settings.chunkSize;\n    document.getElementById('max-chars').value = settings.maxChars;\n    document.getElementById('temperature').value = settings.temperature;\n    document.getElementById('max-tokens').value = settings.maxTokens;\n    document.getElementById('response-format-checkbox').checked = settings.responseFormat;\n    document.getElementById('retry-on-error-checkbox').checked = settings.retryOnError;\n    document.getElementById('retry-count').value = settings.retryCount;\n    document.getElementById('edit-prompts-checkbox').checked = settings.editPrompts;\n    document.getElementById('remove-highlight-on-finish-checkbox').checked = settings.removeHighlightOnFinish;\n    togglePromptsEditorGrammar();\n\n    // Загрузка промптов\n    const prompts = preset.prompts;\n    document.getElementById('prompt-role').value = prompts.promptRole;\n    document.getElementById('prompt-grammatical').value = prompts.promptGrammatical;\n    document.getElementById('prompt-syntactic').value = prompts.promptSyntactic;\n    document.getElementById('prompt-stylistic').value = prompts.promptStylistic;\n    document.getElementById('prompt-logical').value = prompts.promptLogical;\n    document.getElementById('prompt-text-note').value = prompts.promptTextNote;\n\n    // Обновляем селектор модели\n    if (settings.grammarModel) {\n        $('#grammar-model').val(settings.grammarModel).trigger('change');\n        // Дополнительно можно вызвать populateGrammarModelSelect(), если необходимо\n        populateGrammarModelSelect();\n    }\n\n    // Сохраняем последний выбранный пресет\n    localStorage.setItem('lastSelectedPreset', presetName);\n\n    // Сохраняем настройки и промпты в localStorage\n    saveGrammarSettings();\n    saveGrammarPrompts();\n\n    displayPresetMessageGrammar('Пресет загружен.', 'success');\n\n    // Обновляем JSON\n    updatePresetJSONGrammar();\n\n    window.isLoadingPreset = false;\n}\n\n\n\n\n\nfunction deleteSelectedPresetGrammar() {\n    const presetName = $('#preset-select').val();\n    if (!presetName || presetName === 'current') {\n        displayPresetMessageGrammar('Нет выбранного пресета для удаления.', 'danger');\n        return;\n    }\n\n    showPresetConfirmationGrammar(`Вы уверены, что хотите удалить пресет \"${presetName}\"?`, () => {\n        let presets = JSON.parse(localStorage.getItem('grammarPresets') || '[]');\n        presets = presets.filter(p => p.name !== presetName);\n        localStorage.setItem('grammarPresets', JSON.stringify(presets));\n\n        // Сбрасываем выбор пресета\n        $('#preset-select').val('current').trigger('change');\n        localStorage.removeItem('lastSelectedPreset');\n\n        populatePresetSelectGrammar();\n\n        displayPresetMessageGrammar('Пресет удален.', 'success');\n\n        // Очищаем поле JSON\n        document.getElementById('preset-json').value = '';\n    });\n}\n\nfunction updatePresetJSONGrammar() {\n    const presetName = $('#preset-select').val();\n    if (!presetName || presetName === 'current') {\n        document.getElementById('preset-json').value = '';\n        return;\n    }\n\n    let presets = JSON.parse(localStorage.getItem('grammarPresets') || '[]');\n    const preset = presets.find(p => p.name === presetName);\n    if (!preset) {\n        document.getElementById('preset-json').value = '';\n        return;\n    }\n\n    const presetJSON = JSON.stringify(preset, null, 2);\n    document.getElementById('preset-json').value = presetJSON;\n}\n\n\n\n\nfunction copyPresetJSONGrammar() {\n    const presetJSONTextarea = document.getElementById('preset-json');\n    presetJSONTextarea.select();\n    document.execCommand('copy');\n    displayPresetMessageGrammar('JSON пресета скопирован в буфер обмена.', 'success');\n}\n\nfunction displayPresetMessageGrammar(message, type) {\n    const messageDiv = document.getElementById('preset-message');\n    messageDiv.innerHTML = `<div class=\"alert alert-${type}\">${message}</div>`;\n    setTimeout(() => {\n        messageDiv.innerHTML = '';\n    }, 5000);\n}\n\nfunction getDefaultSettingsGrammar() {\n    return {\n        highlightErrors: true,\n        addComments: false,\n        highlightCorrected: true,\n        checkGrammatical: false,\n        checkSyntactic: false,\n        checkStylistic: true,\n        checkLogical: true,\n        splitIntoChunks: false,\n        chunkSize: 8,\n        maxChars: 2000,\n        temperature: 0.1,\n        maxTokens: 4000,\n        responseFormat: false,\n        retryOnError: true,\n        retryCount: 3,\n        editPrompts: true,\n        grammarModel: \"anthropic/claude-3.5-sonnet:beta\",\n        removeHighlightOnFinish: false, // Добавляем новую опцию\n    };\n}\n\nfunction getDefaultPromptsGrammar() {\n    return {\n        'role': 'Ты - опытный редактор и лингвист.',\n        'грамматическая': '- Ищи грамматические ошибки, связанные с неправильным употреблением частей речи, склонений и спряжений.',\n        'синтаксическая': '- Ищи синтаксические ошибки, связанные с неправильным построением предложений.',\n        'стилистическая': '- Ищи стилистические ошибки, связанные с использованием некорректных или неуместных выражений.',\n        'логическая': '- Ищи логические ошибки, связанные с противоречиями и несоответствиями в тексте.',\n    };\n}\n\nasync function cleanAllTimestampsGrammar() {\n    try {\n        await Word.run(async (context) => {\n            const body = context.document.body;\n\n            // Вспомогательная функция для удаления маркеров\n            async function removeMarkers(prefix) {\n                const searchPattern = `${prefix}*`; // Например, \"START_TIMESTAMP*\"\n                const searchResults = body.search(searchPattern, { matchWildcards: true });\n                searchResults.load(\"items\");\n                await context.sync();\n\n                for (let range of searchResults.items) {\n                    // Заменяем найденный текст на пустую строку\n                    range.insertText(\"\", Word.InsertLocation.replace);\n                }\n\n                await context.sync();\n            }\n\n            // Удаляем все START_TIMESTAMP{digits}\n            await removeMarkers(\"START_TIMESTAMP\");\n            // Удаляем все END_TIMESTAMP{digits}\n            await removeMarkers(\"END_TIMESTAMP\");\n\n            console.log(\"Все маркеры timestamp и связанные с ними цифры успешно удалены.\");\n            document.getElementById('message').innerHTML = '<div class=\"alert alert-success\">Все маркеры удалены</div>';\n            // Через 3 секунды удалим сообщение\n            setTimeout(() => {\n              document.getElementById('message').innerHTML = '';\n            }, 3000);\n        });\n    } catch (error) {\n        console.error('Ошибка при удалении маркеров:', error);\n        document.getElementById('message').innerHTML = `<div class=\"alert alert-danger\">Ошибка: ${error.message}</div>`;\n    }\n}\n\n\n\n\n\n\nasync function checkGrammarGrammar() {\n    try {\n        // Очищаем весь документ от timestamp-маркеров\n        await cleanAllTimestampsGrammar();\n        const selectionContext = await createSelectionMarkersGrammar();\n\n        const splitIntoChunks = document.getElementById('split-into-chunks-checkbox').checked;\n        const chunkSize = parseInt(document.getElementById('chunk-size').value, 10) || 5;\n\n        // Сбрасываем прогресс бар и список ошибок\n        document.getElementById('grammar-results').innerHTML = '';\n        resetProgressBarGrammar();\n\n        // Clear history\n        window.appliedCorrections = [];\n        displayCorrectionHistory()\n\n        showLoadingGrammar(true, splitIntoChunks);\n\n        // Скрываем фильтр результатов\n        document.getElementById('filter-container').style.display = 'none';\n\n        // Создаем новый AbortController для возможности отмены\n        window.abortController = new AbortController();\n\n        const maxChars = parseInt(document.getElementById('max-chars').value, 10) || 100;\n\n        if (selectionContext.text.length > 0) {\n            if (!splitIntoChunks && maxChars > 0 && selectionContext.text.length > maxChars) {\n                document.getElementById('grammar-results').innerHTML = `<p class=\"text-warning\">Выделенный текст слишком длинный (${selectionContext.text.length} символов). Пожалуйста, выделите меньше ${maxChars} символов или измените ограничение в настройках.</p>`;\n                showLoadingGrammar(false);\n                // Показываем кнопки после успешной проверки\n            document.getElementById('select-current-text').style.display = 'inline-block';\n            document.getElementById('finish-current-fragment').style.display = 'inline-block'\n                return;\n            }\n\n            const model = $('#grammar-model').val();\n            let result = [];\n\n            if (splitIntoChunks) {\n                const chunks = splitTextIntoChunksGrammar(selectionContext.text, chunkSize);\n                const totalChunks = chunks.length;\n                const progressBar = document.getElementById('progress-bar');\n                const progressText = document.getElementById('progress-text');\n\n                progressText.innerText = `Обработано 0 из ${totalChunks} чанков`;\n\n                for (let i = 0; i < chunks.length; i++) {\n                    const chunkResult = await analyzeTextWithRetryGrammar(chunks[i], model, window.abortController.signal);\n                    result = result.concat(chunkResult);\n\n                    const progressPercent = Math.round(((i + 1) / totalChunks) * 100);\n                    progressBar.style.width = `${progressPercent}%`;\n                    progressBar.innerText = `${progressPercent}%`;\n                    progressText.innerText = `Обработано ${i + 1} из ${totalChunks} чанков`;\n                }\n            } else {\n                const chunkResult = await analyzeTextWithRetryGrammar(selectionContext.text, model, window.abortController.signal);\n                result = result.concat(chunkResult);\n            }\n\n            window.grammarResults = result;\n\n            displayResultsGrammar(result);\n            await highlightTextGrammar(result, selectionContext);\n\n            if (result.length > 0) {\n                document.getElementById('filter-container').style.display = 'block';\n            }\n\n            isGrammarCheckCompleted = true;\n            document.getElementById('select-current-text').style.display = 'inline-block';\n            document.getElementById('finish-current-fragment').style.display = 'inline-block';\n        } else {\n            console.log(\"Текст не выделен\");\n            document.getElementById('grammar-results').innerHTML = '<p class=\"text-warning\">Пожалуйста, выделите текст для проверки.</p>';\n            showLoadingGrammar(false);\n        }\n    } catch (error) {\n        if (error.name === 'AbortError') {\n            console.log('Проверка отменена пользователем.');\n            document.getElementById('grammar-results').innerHTML = '<p class=\"text-info\">Проверка отменена.</p>';\n        } else {\n            console.error('Error in checkGrammarGrammar:', error);\n            document.getElementById('grammar-results').innerHTML = '<p class=\"text-danger\">Произошла ошибка при проверке. Пожалуйста, попробуйте еще раз.</p>';\n        }\n    } finally {\n        showLoadingGrammar(false);\n        window.abortController = null;\n    }\n}\n\n\n\nasync function cancelCheckGrammar() {\n    if (window.abortController) {\n        window.abortController.abort();\n        showLoadingGrammar(false);\n        window.abortController = null;\n        await resetProgressBarGrammar();\n        await cleanAllTimestampsGrammar();\n\n    }\n}\n\nfunction resetProgressBarGrammar() {\n    const progressBar = document.getElementById('progress-bar');\n    const progressText = document.getElementById('progress-text');\n    if (progressBar) {\n        progressBar.style.width = '0%';\n        progressBar.innerText = '0%';\n    }\n    if (progressText) {\n        progressText.innerText = 'Обработано 0 из 0 чанков';\n    }\n}\n\nfunction splitTextIntoChunksGrammar(text, chunkSize) {\n    const sentences = text.match(/[^.!?]+[.!?]+(\\s|$)|[^.!?]+$/g) || [text];\n    const chunks = [];\n    for (let i = 0; i < sentences.length; i += chunkSize) {\n        const chunk = sentences.slice(i, i + chunkSize).join(' ').trim();\n        chunks.push(chunk);\n    }\n    return chunks;\n}\n\nasync function analyzeTextWithRetryGrammar(text, model, signal) {\n    const retryOnError = document.getElementById('retry-on-error-checkbox').checked;\n    const retryCount = parseInt(document.getElementById('retry-count').value, 10) || 1;\n\n    let attempts = 0;\n    let lastError = null;\n\n    while (attempts < retryCount) {\n        try {\n            const result = await analyzeTextGrammar(text, model, signal);\n            return result;\n        } catch (error) {\n            lastError = error;\n            attempts++;\n            if (!retryOnError || attempts >= retryCount) {\n                throw error;\n            } else {\n                console.warn(`Попытка ${attempts} не удалась. Повторяем...`);\n            }\n        }\n    }\n\n    throw lastError;\n}\n\n\nasync function analyzeTextGrammar(text, model, signal) {\n    const apiKey = localStorage.getItem('apiKey');\n\n    // Получаем выбранные типы ошибок\n    const errorTypes = [];\n    const errorTypesMap = {};\n\n    const prompts = {};\n    const defaultPrompts = getDefaultPromptsGrammar();\n\n    if (document.getElementById('check-grammatical').checked) {\n        errorTypes.push('грамматические');\n        errorTypesMap['грамматическая'] = true;\n        prompts['грамматическая'] = document.getElementById('prompt-grammatical').value || defaultPrompts['грамматическая'];\n    }\n    if (document.getElementById('check-syntactic').checked) {\n        errorTypes.push('синтаксические');\n        errorTypesMap['синтаксическая'] = true;\n        prompts['синтаксическая'] = document.getElementById('prompt-syntactic').value || defaultPrompts['синтаксическая'];\n    }\n    if (document.getElementById('check-stylistic').checked) {\n        errorTypes.push('стилистические');\n        errorTypesMap['стилистическая'] = true;\n        prompts['стилистическая'] = document.getElementById('prompt-stylistic').value || defaultPrompts['стилистическая'];\n    }\n    if (document.getElementById('check-logical').checked) {\n        errorTypes.push('логические');\n        errorTypesMap['логическая'] = true;\n        prompts['логическая'] = document.getElementById('prompt-logical').value || defaultPrompts['логическая'];\n    }\n\n    if (errorTypes.length === 0) {\n        throw new Error('Не выбраны типы проверок');\n    }\n\n    const errorTypesString = errorTypes.join(', ');\n\n    // Получаем примечание о проверяемом тексте\n    const promptTextNote = document.getElementById('prompt-text-note').value || '';\n\n    // Получаем промпт роли\n    const promptRole = document.getElementById('prompt-role').value || defaultPrompts['role'];\n\n    // Получаем настройки модели\n    const temperature = parseFloat(document.getElementById('temperature').value) || 0.1;\n    const maxTokens = parseInt(document.getElementById('max-tokens').value, 10) || 8000;\n    const responseFormat = document.getElementById('response-format-checkbox').checked;\n\n    // Формируем системный промпт\n    const systemPrompt = `${promptRole} Твоя задача - проанализировать предоставленный текст и найти только следующие типы ошибок: ${errorTypesString}.\n\n${promptTextNote ? `Дополнительная информация о тексте: ${promptTextNote}\\n` : ''}\n\n${Object.keys(prompts).map(type => `Инструкция для \"${type}\" ошибок:\\n${prompts[type]}\\n`).join('\\n')}\n\nТвои инструкции:\n\n- Анализируй текст на уровне предложений и отдельных слов.\n\n- Ищи только указанные типы ошибок.\n\n- Игнорируй другие типы ошибок.\n\n- Если исправление можно внести напрямую в текст и оно не добавляет новой информации, установи \"can_edit\": true и предоставь поле \"text_to_change\" с исправленным текстом.\n\n- Если исправление невозможно внести напрямую в текст или добавляет новую информацию, установи \"can_edit\": false, предоставь поле \"suggestion\" с рекомендациями по улучшению и добавь поле \"example\" с примером улучшенного текста.\n\n- Возвращай результат в формате JSON-массива, где каждый элемент содержит:\n  1. \"text\": проблемный фрагмент текста (слово, фраза или предложение).\n  2. \"comment\": объяснение проблемы.\n  3. \"errorType\": тип ошибки (${Object.keys(errorTypesMap).map(type => `\"${type}\"`).join(', ')}).\n  4. \"can_edit\": true или false (указывает, можно ли внести исправление напрямую в текст).\n  5. Если \"can_edit\" равно true, добавь поле \"text_to_change\" с исправленным текстом.\n  6. Если \"can_edit\" равно false, добавь поле \"suggestion\" с рекомендациями по улучшению и поле \"example\" с примером улучшенного текста.\n\nПример ответа:\n\n${getExampleErrorsGrammar(Object.keys(errorTypesMap))}\n\nВажно:\n\n- Возвращай *только* JSON-массив без дополнительных пояснений или предисловий.\n\n- Если ошибок нет, верни пустой массив: [];\n\n- Убедись, что все строки в JSON корректно экранированы. В частности, любые двойные кавычки внутри значений строк должны быть экранированы обратным слешем (\\\\\"\").\n`;\n\n    const userPrompt = `Пожалуйста, проанализируй следующий текст:\n\n\"${text}\";\n`;\n// - Убедись, что все строки в JSON корректно экранированы. В частности, любые двойные кавычки внутри значений строк должны быть экранированы обратным слешем (\\\\\"\").\n// - Убедись, что все строки в JSON корректно экранированы. В частности, любые двойные кавычки внутри значений строк должны быть экранированы обратным слешем (\\\").\n\n    try {\n        const requestBody = {\n            model: model,\n            messages: [\n                { role: \"system\", content: systemPrompt },\n                { role: \"user\", content: userPrompt }\n            ],\n            temperature: temperature,\n            max_tokens: maxTokens,\n        };\n\n        if (responseFormat) {\n            requestBody.response_format = { \"type\": \"json_object\" };\n        }\n\n        const response = await fetch(\"https://openrouter.ai/api/v1/chat/completions\", {\n            method: 'POST',\n            headers: {\n                'Authorization': `Bearer ${apiKey}`,\n                'Content-Type': 'application/json',\n                'HTTP-Referer': 'https://www.office.com',\n                'X-Title': 'Word Grammar Checker',\n            },\n            body: JSON.stringify(requestBody),\n            signal: signal, // Передаем сигнал для возможности отмены\n        });\n\n        if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n        }\n\n        const data = await response.json();\n        console.log('Ответ от сервера:', data.choices[0].message.content.trim());\n\n        // Обработка потенциальных ошибок в JSON\n        const jsonResponse = safeJsonParseGrammar(data.choices[0].message.content.trim());\n        return jsonResponse;\n    } catch (error) {\n        if (error.name === 'AbortError') {\n            console.log('Запрос был отменен.');\n            throw error;\n        } else {\n            console.error('Error in analyzeTextGrammar:', error);\n            throw error;\n        }\n    }\n}\n\n\n// Функция безопасного парсинга JSON\nasync function safeJsonParseGrammar(str) {\n    try {\n        return JSON.parse(str);\n    } catch (error) {\n        console.warn('Первая попытка парсинга не удалась:', error);\n\n        const apiKey = localStorage.getItem('apiKey');\n\n        const prompt = `\nИсправь этот JSON и верни только исправленную версию. Следуй этим правилам:\n1. Все строковые значения должны быть в двойных кавычках.\n2. Все ключи объектов должны быть в двойных кавычках.\n3. Внутри строковых значений двойные кавычки должны быть экранированы обратным слешем.\n4. Не должно быть лишних запятых в конце массивов или объектов.\n5. Верни только исправленный JSON, без дополнительных комментариев.\n\nПример входных данных:\n[\n  {\n    text: 'Пример текста с \"кавычками\"',\n    errorType: 'синтаксическая',\n    can_edit: true,\n  },\n]\n\nПример ожидаемого вывода:\n[\n  {\n    \"text\": \"Пример текста с \\\\\"кавычками\\\\\"\",\n    \"errorType\": \"синтаксическая\",\n    \"can_edit\": true\n  }\n]\n\nИсправь следующий JSON:\n${str}\n`;\n\n        const response = await fetch(\"https://openrouter.ai/api/v1/chat/completions\", {\n            method: 'POST',\n            headers: {\n                'Authorization': `Bearer ${apiKey}`,\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                model: \"openai/gpt-4o-mini\",\n                messages: [{ role: \"user\", content: prompt }],\n                max_tokens: 16000,\n                temperature: 0.2\n            })\n        });\n\n        const data = await response.json();\n        const fixedStr = data.choices[0].message.content.trim();\n\n        try {\n            return JSON.parse(fixedStr);\n        } catch (innerError) {\n            console.error('Не удалось распарсить JSON даже после исправления GPT:', innerError);\n            throw innerError;\n        }\n    }\n}\n\n\n\nfunction getExampleErrorsGrammar(selectedErrorTypes) {\n    const examples = [];\n\n    if (selectedErrorTypes.includes('грамматическая')) {\n        // Примеры с can_edit: true\n        examples.push(`{\n    \"text\": \"Она сказал\",\n    \"comment\": \"Неправильное согласование рода в глаголе.\",\n    \"errorType\": \"грамматическая\",\n    \"can_edit\": true,\n    \"text_to_change\": \"Она сказала\"\n}`);\n        examples.push(`{\n    \"text\": \"Я иду в школу завтра.\",\n    \"comment\": \"Неправильное использование времени глагола.\",\n    \"errorType\": \"грамматическая\",\n    \"can_edit\": true,\n    \"text_to_change\": \"Я пойду в школу завтра.\"\n}`);\n        examples.push(`{\n    \"text\": \"У него есть две собаки и три кошка.\",\n    \"comment\": \"Неправильное согласование числительного и существительного.\",\n    \"errorType\": \"грамматическая\",\n    \"can_edit\": true,\n    \"text_to_change\": \"У него есть две собаки и три кошки.\"\n}`);\n\n        // Примеры с can_edit: false\n        examples.push(`{\n    \"text\": \"Бегу по дороге быстро.\",\n    \"comment\": \"Отсутствует подлежащее в предложении.\",\n    \"errorType\": \"грамматическая\",\n    \"can_edit\": false,\n    \"suggestion\": \"Добавить подлежащее для ясности.\",\n    \"example\": \"Я бегу по дороге быстро.\"\n}`);\n        examples.push(`{\n    \"text\": \"Придя домой, было тихо.\",\n    \"comment\": \"Неправильное употребление деепричастного оборота без подлежащего.\",\n    \"errorType\": \"грамматическая\",\n    \"can_edit\": false,\n    \"suggestion\": \"Переписать предложение, указав, кто пришел домой.\",\n    \"example\": \"Когда я пришёл домой, было тихо.\"\n}`);\n        examples.push(`{\n    \"text\": \"Книга, которую я читаю интересная.\",\n    \"comment\": \"Отсутствует запятая перед придаточным предложением.\",\n    \"errorType\": \"грамматическая\",\n    \"can_edit\": false,\n    \"suggestion\": \"Добавить запятую для правильной пунктуации.\",\n    \"example\": \"Книга, которую я читаю, интересная.\"\n}`);\n    }\n\n    if (selectedErrorTypes.includes('синтаксическая')) {\n        // Примеры с can_edit: true\n        examples.push(`{\n    \"text\": \"Я люблю читать книги смотреть фильмы.\",\n    \"comment\": \"Отсутствует союз между однородными членами предложения.\",\n    \"errorType\": \"синтаксическая\",\n    \"can_edit\": true,\n    \"text_to_change\": \"Я люблю читать книги и смотреть фильмы.\"\n}`);\n        examples.push(`{\n    \"text\": \"Она сказала что придет позже.\",\n    \"comment\": \"Отсутствует запятая перед придаточным предложением.\",\n    \"errorType\": \"синтаксическая\",\n    \"can_edit\": true,\n    \"text_to_change\": \"Она сказала, что придет позже.\"\n}`);\n        examples.push(`{\n    \"text\": \"После дождя дорога была скользкая она упала.\",\n    \"comment\": \"Отсутствует разделение на предложения или союз.\",\n    \"errorType\": \"синтаксическая\",\n    \"can_edit\": true,\n    \"text_to_change\": \"После дождя дорога была скользкая, и она упала.\"\n}`);\n\n        // Примеры с can_edit: false\n        examples.push(`{\n    \"text\": \"Мы приносим свои искренние извинения всем,кого могли забыть упомянуть здесь.\",\n    \"comment\": \"Синтаксическая ошибка: отсутствует пробел после запятой.\",\n    \"errorType\": \"синтаксическая\",\n    \"can_edit\": false,\n    \"suggestion\": \"Добавить пробел после запятой.\",\n    \"example\": \"Мы приносим свои искренние извинения всем, кого могли забыть упомянуть здесь.\"\n}`);\n        examples.push(`{\n    \"text\": \"Из-за того что шел дождь.\",\n    \"comment\": \"Неполное предложение: отсутствует главная часть.\",\n    \"errorType\": \"синтаксическая\",\n    \"can_edit\": false,\n    \"suggestion\": \"Добавить главную часть предложения для завершенности.\",\n    \"example\": \"Из-за того что шел дождь, мы остались дома.\"\n}`);\n        examples.push(`{\n    \"text\": \"Планируя поездку, была куплена карта.\",\n    \"comment\": \"Неясно, кто планировал поездку; неправильно построен деепричастный оборот.\",\n    \"errorType\": \"синтаксическая\",\n    \"can_edit\": false,\n    \"suggestion\": \"Переписать предложение для ясности.\",\n    \"example\": \"Планируя поездку, мы купили карту.\"\n}`);\n    }\n\n    if (selectedErrorTypes.includes('стилистическая')) {\n        // Примеры с can_edit: true\n        examples.push(`{\n    \"text\": \"Он встал рано утром, чтобы пойти на работку.\",\n    \"comment\": \"Нежелательное использование уменьшительно-ласкательного суффикса.\",\n    \"errorType\": \"стилистическая\",\n    \"can_edit\": true,\n    \"text_to_change\": \"Он встал рано утром, чтобы пойти на работу.\"\n}`);\n        examples.push(`{\n    \"text\": \"Она сказала ему, что это офигенно.\",\n    \"comment\": \"Нежелательное использование разговорного выражения.\",\n    \"errorType\": \"стилистическая\",\n    \"can_edit\": true,\n    \"text_to_change\": \"Она сказала ему, что это великолепно.\"\n}`);\n        examples.push(`{\n    \"text\": \"В результате он потерпел фиаско.\",\n    \"comment\": \"Стилистическая неточность: использование заимствованного слова, которое может быть заменено более подходящим.\",\n    \"errorType\": \"стилистическая\",\n    \"can_edit\": true,\n    \"text_to_change\": \"В результате он потерпел неудачу.\"\n}`);\n\n        // Примеры с can_edit: false\n        examples.push(`{\n    \"text\": \"Нам повезло, что мы получили отличную поддержку.\",\n    \"comment\": \"Стилистическая неточность: слово 'повезло' может преуменьшать усилия тех, кто оказал поддержку.\",\n    \"errorType\": \"стилистическая\",\n    \"can_edit\": false,\n    \"suggestion\": \"Заменить выражение на более признательное.\",\n    \"example\": \"Мы благодарны за отличную поддержку, которую получили.\"\n}`);\n        examples.push(`{\n    \"text\": \"Доклад был ничего так, слушатели остались довольны.\",\n    \"comment\": \"Неофициальный стиль изложения в формальном контексте.\",\n    \"errorType\": \"стилистическая\",\n    \"can_edit\": false,\n    \"suggestion\": \"Исправить выражение на более формальное.\",\n    \"example\": \"Доклад был информативным, и слушатели остались довольны.\"\n}`);\n        examples.push(`{\n    \"text\": \"Он сделал это быстрее всех, потому что он крутой.\",\n    \"comment\": \"Использование жаргонного слова в официальном тексте.\",\n    \"errorType\": \"стилистическая\",\n    \"can_edit\": false,\n    \"suggestion\": \"Заменить жаргонное слово на более подходящее.\",\n    \"example\": \"Он сделал это быстрее всех благодаря своим навыкам.\"\n}`);\n    }\n\n    if (selectedErrorTypes.includes('логическая')) {\n        // Примеры с can_edit: true\n        examples.push(`{\n    \"text\": \"Она родилась в 2000 году и в 1990 году окончила университет.\",\n    \"comment\": \"Логическая ошибка: невозможно окончить университет до рождения.\",\n    \"errorType\": \"логическая\",\n    \"can_edit\": true,\n    \"text_to_change\": \"Она родилась в 1970 году и в 1990 году окончила университет.\"\n}`);\n        examples.push(`{\n    \"text\": \"Он съел обед перед завтраком.\",\n    \"comment\": \"Логическая несостыковка во времени приема пищи.\",\n    \"errorType\": \"логическая\",\n    \"can_edit\": true,\n    \"text_to_change\": \"Он съел завтрак перед обедом.\"\n}`);\n        examples.push(`{\n    \"text\": \"Вода замерзает при 100 градусах Цельсия.\",\n    \"comment\": \"Неправильная температура замерзания воды.\",\n    \"errorType\": \"логическая\",\n    \"can_edit\": true,\n    \"text_to_change\": \"Вода замерзает при 0 градусах Цельсия.\"\n}`);\n\n        // Примеры с can_edit: false\n        examples.push(`{\n    \"text\": \"Этот квадрат имеет три стороны.\",\n    \"comment\": \"Логическое противоречие: квадрат не может иметь три стороны.\",\n    \"errorType\": \"логическая\",\n    \"can_edit\": false,\n    \"suggestion\": \"Уточнить форму или количество сторон фигуры.\",\n    \"example\": \"Этот треугольник имеет три стороны.\"\n}`);\n        examples.push(`{\n    \"text\": \"Он продал больше книг, чем любой другой автор, включая себя.\",\n    \"comment\": \"Логическая ошибка: некорректное сравнение с самим собой.\",\n    \"errorType\": \"логическая\",\n    \"can_edit\": false,\n    \"suggestion\": \"Пересмотреть формулировку сравнения.\",\n    \"example\": \"Он продал больше книг, чем любой другой автор.\"\n}`);\n        examples.push(`{\n    \"text\": \"Она всегда говорит правду, но ей нельзя доверять.\",\n    \"comment\": \"Логическое противоречие в характеристике.\",\n    \"errorType\": \"логическая\",\n    \"can_edit\": false,\n    \"suggestion\": \"Уточнить описание для устранения противоречия.\",\n    \"example\": \"Она часто обманывает, поэтому ей нельзя доверять.\"\n}`);\n    }\n\n    return `[\n  ${examples.join(',\\n  ')}\n]`;\n}\n\n\nfunction displayResultsGrammar(results, scrollPosition = 0) {\n    const resultsDiv = document.getElementById('grammar-results');\n    resultsDiv.innerHTML = '';\n\n    if (results.length === 0) {\n        resultsDiv.innerHTML = '<p class=\"text-success\">Ошибок не найдено. Текст выглядит хорошо!</p>';\n        return;\n    }\n\n    // Сохраняем текущую позицию прокрутки, если она не передана\n    if (scrollPosition === 0) {\n        scrollPosition = window.pageYOffset;\n    }\n\n    const filterValue = document.getElementById('filter-select').value;\n\n    // Группируем ошибки по типам\n    const groupedResults = {};\n    results.forEach((result, index) => {\n        const type = result.errorType || 'Другие';\n        if (!groupedResults[type]) {\n            groupedResults[type] = [];\n        }\n        result.index = index;\n\n        if (filterValue === 'can_edit' && !result.can_edit) {\n            return;\n        }\n        if (filterValue === 'cannot_edit' && result.can_edit) {\n            return;\n        }\n\n        groupedResults[type].push(result);\n    });\n\n    Object.keys(groupedResults).forEach(type => {\n        if (groupedResults[type].length === 0) {\n            delete groupedResults[type];\n        }\n    });\n\n    if (Object.keys(groupedResults).length === 0) {\n        resultsDiv.innerHTML = '<p class=\"text-info\">Нет ошибок для отображения по выбранному фильтру.</p>';\n        return;\n    }\n\n    const accordionId = 'grammarAccordion';\n    let accordionHTML = `<div class=\"accordion\" id=\"${accordionId}\">`;\n\n    Object.keys(groupedResults).forEach((type, index) => {\n        const errors = groupedResults[type];\n        const collapseId = `collapse${index}`;\n        accordionHTML += `\n            <div class=\"card\">\n                <div class=\"card-header\" id=\"heading${index}\">\n                    <h2 class=\"mb-0\">\n                        <button class=\"btn btn-link\" type=\"button\" data-toggle=\"collapse\" data-target=\"#${collapseId}\" aria-expanded=\"true\" aria-controls=\"${collapseId}\">\n                            ${type.charAt(0).toUpperCase() + type.slice(1)} ошибки (<span class=\"error-count\">${errors.length}</span>)\n                        </button>\n                    </h2>\n                </div>\n                <div id=\"${collapseId}\" class=\"collapse show\" aria-labelledby=\"heading${index}\" data-parent=\"#${accordionId}\">\n                    <div class=\"card-body\">\n                        ${errors.map((error, errorIndex) => `\n                            <div class=\"mb-3 p-3 border error-card ${errorIndex < errors.length - 1 ? 'border-bottom' : ''}\" data-error-index=\"${error.index}\" data-error-type=\"${type}\">\n                                <p><strong>Проблемный текст:</strong> <span class=\"text-danger\">${error.text}</span></p>\n                                <p><strong>Комментарий:</strong> ${error.comment}</p>\n                                ${error.can_edit ?\n                                `<p><strong>Исправление:</strong> <span class=\"text-success\">${error.text_to_change}</span></p>\n                                <div class=\"btn-group\" role=\"group\">\n                                    <button class=\"btn btn-sm btn-primary apply-suggestion\" data-error-index=\"${error.index}\">Применить исправление</button>\n                                    <button class=\"btn btn-sm btn-secondary mark-as-resolved\" data-error-index=\"${error.index}\">Отметить как решенную</button>\n                                </div>`\n                                 :\n                                `<p><strong>Рекомендации:</strong> ${error.originalComment || error.suggestion}</p>\n                                <p><strong>Пример улучшенного текста:</strong> <span class=\"text-info\">${error.example || ''}</span></p>\n                                ${error.originalComment ?\n                                    `<p class=\"text-warning\"><em>Исправление невозможно, т.к. исходный текст был изменен другим исправлением.</em></p>`\n                                    :\n                                    `<p><em>Исправление невозможно применить напрямую.</em></p>`\n                                }\n                                <button class=\"btn btn-sm btn-secondary mark-as-resolved\" data-error-index=\"${error.index}\">Отметить как решенную</button>`\n                                }\n                            </div>\n                        `).join('')}\n                    </div>\n                </div>\n            </div>\n        `;\n    });\n\n    accordionHTML += '</div>';\n    resultsDiv.innerHTML = accordionHTML;\n\n    // Добавляем обработчики для кнопок \"Применить исправление\"\n    const applyButtons = document.getElementsByClassName('apply-suggestion');\n    for (let button of applyButtons) {\n        button.addEventListener('click', function () {\n            const errorIndex = parseInt(this.dataset.errorIndex, 10);\n            applySuggestion(errorIndex, results, this);\n        });\n    }\n\n    // Добавляем обработчики для кнопок \"Отметить как решенную\"\n    const resolveButtons = document.getElementsByClassName('mark-as-resolved');\n    for (let button of resolveButtons) {\n        button.addEventListener('click', function () {\n            const errorIndex = parseInt(this.dataset.errorIndex, 10);\n            markAsResolved(errorIndex, results, this);\n        });\n    }\n\n    // Прокручиваем к последней ошибке\n    const lastErrorCard = document.querySelector('.error-card:last-child');\n    if (lastErrorCard) {\n        lastErrorCard.scrollIntoView({ behavior: 'smooth', block: 'center' });\n    }\n}\n\n\n\nasync function highlightTextGrammar(results, selectionContext) {\n    const highlight = document.getElementById('highlight-checkbox').checked;\n    const addComments = document.getElementById('comment-checkbox').checked;\n    if (!highlight && !addComments) return;\n\n    await Word.run(async (context) => {\n        const fullRange = await getSavedSelectionRange(context, selectionContext.timestamp);\n        if (!fullRange) {\n            console.error('Не удалось найти выделенный текст');\n            return;\n        }\n\n        for (let result of results) {\n            try {\n                const fragments = splitLongText(result.text, 250);\n\n                for (let fragment of fragments) {\n                    const ranges = fullRange.search(fragment, { matchCase: true, matchWholeWord: false });\n                    ranges.load(\"items\");\n                    await context.sync();\n\n                    if (ranges.items.length > 0) {\n                        for (let range of ranges.items) {\n                            if (highlight) {\n                                range.font.highlightColor = \"yellow\";\n                            }\n                            if (addComments && fragment === fragments[0]) {\n                                let commentText = `Тип ошибки: ${result.errorType}\\nКомментарий: ${result.comment}`;\n                                if (result.can_edit) {\n                                    commentText += `\\nИсправление: ${result.text_to_change}`;\n                                } else {\n                                    commentText += `\\nРекомендации: ${result.suggestion}\\nПример улучшенного текста: ${result.example}`;\n                                }\n                                range.insertComment(commentText);\n                            }\n                        }\n                    }\n                }\n                await context.sync();\n            } catch (error) {\n                console.log(`Error processing result: ${result.text}`, error);\n            }\n\n            await new Promise(resolve => setTimeout(resolve, 100));\n        }\n    }).catch(function (error) {\n        console.log('Error in highlightTextGrammar:', error);\n    });\n}\n\nasync function createSelectionMarkersGrammar() {\n    try {\n        return await Word.run(async (context) => {\n            const selection = context.document.getSelection();\n            selection.load(\"text\");\n            await context.sync();\n\n            const selectionText = selection.text.trim();\n            if (selectionText.length === 0) {\n                throw new Error(\"Нет выделенного текста\");\n            }\n\n            const startMarker = \"START_TIMESTAMP\";\n            const endMarker = \"END_TIMESTAMP\";\n\n            selection.insertText(startMarker, Word.InsertLocation.before);\n            selection.insertText(endMarker, Word.InsertLocation.after);\n\n            const startRange = context.document.body.search(startMarker, { matchCase: true }).getFirst();\n            const endRange = context.document.body.search(endMarker, { matchCase: true }).getFirst();\n\n            startRange.font.size = 1;\n            endRange.font.size = 1;\n            startRange.font.color = \"white\";\n            endRange.font.color = \"white\";\n\n            await context.sync();\n\n            return {\n                text: selectionText\n            };\n        });\n    } catch (error) {\n        console.error('Ошибка при создании маркеров выделения:', error);\n        throw error;\n    }\n}\n\n\n\n\nfunction splitLongText(text, maxLength) {\n    const words = text.split(' ');\n    const fragments = [];\n    let currentFragment = '';\n\n    for (let word of words) {\n        if ((currentFragment + ' ' + word).length > maxLength && currentFragment.length > 0) {\n            fragments.push(currentFragment.trim());\n            currentFragment = '';\n        }\n        currentFragment += (currentFragment ? ' ' : '') + word;\n    }\n\n    if (currentFragment.length > 0) {\n        fragments.push(currentFragment.trim());\n    }\n\n    return fragments;\n}\n\n\n// Функция показа загрузки\nfunction showLoadingGrammar(isLoading, useProgressBar = false) {\n    const loadingElement = document.getElementById('loading');\n    const checkButton = document.getElementById('check-grammar');\n    const progressContainer = document.getElementById('progress-container');\n    const spinner = document.getElementById('spinner');\n    if (isLoading) {\n        loadingElement.style.display = 'block';\n        checkButton.disabled = true;\n        if (useProgressBar) {\n            progressContainer.style.display = 'block';\n            spinner.style.display = 'none';\n        } else {\n            progressContainer.style.display = 'none';\n            spinner.style.display = 'block';\n        }\n    } else {\n        loadingElement.style.display = 'none';\n        checkButton.disabled = false;\n        progressContainer.style.display = 'none';\n        spinner.style.display = 'none';\n    }\n}\n\n\n// Continuing from where we left off in home.js\n\n// Implement Logger Settings with editable prompts and examples\n  \n  // Function to load logger prompts with examples\n  function loadLoggerPrompts() {\n    const defaultLoggerPrompts = getDefaultLoggerPromptsGrammar();\n  \n    const loggerPromptMinimal = localStorage.getItem('loggerPromptMinimal') || defaultLoggerPrompts['minimal'];\n    const loggerPromptMedium = localStorage.getItem('loggerPromptMedium') || defaultLoggerPrompts['medium'];\n    const loggerPromptMaximal = localStorage.getItem('loggerPromptMaximal') || defaultLoggerPrompts['maximal'];\n    const loggerPromptCustom = localStorage.getItem('loggerPromptCustom') || '';\n  \n    document.getElementById('fuuga_logger-prompt-minimal').value = loggerPromptMinimal;\n    document.getElementById('fuuga_logger-prompt-medium').value = loggerPromptMedium;\n    document.getElementById('fuuga_logger-prompt-maximal').value = loggerPromptMaximal;\n    document.getElementById('fuuga_custom-logger-prompt').value = loggerPromptCustom;\n  }\n  \n  // Function to save logger prompts\n  function saveLoggerPrompts() {\n    const loggerPromptMinimal = document.getElementById('fuuga_logger-prompt-minimal').value;\n    const loggerPromptMedium = document.getElementById('fuuga_logger-prompt-medium').value;\n    const loggerPromptMaximal = document.getElementById('fuuga_logger-prompt-maximal').value;\n    const loggerPromptCustom = document.getElementById('fuuga_custom-logger-prompt').value;\n  \n    localStorage.setItem('loggerPromptMinimal', loggerPromptMinimal);\n    localStorage.setItem('loggerPromptMedium', loggerPromptMedium);\n    localStorage.setItem('loggerPromptMaximal', loggerPromptMaximal);\n    localStorage.setItem('loggerPromptCustom', loggerPromptCustom);\n  \n    // Display message\n    displayPromptMessage('Промпты логера сохранены.');\n  }\n  \n  // Function to get default logger prompts with examples\n  function getDefaultLoggerPromptsGrammar() {\n    return {\n      'minimal': 'Опишите кратко изменения между текстом до и после обработки.',\n      'medium': 'Опишите изменения между текстом до и после обработки, упомяните ключевые изменения.',\n      'maximal': 'Детально опишите все изменения между текстом до и после обработки, включая использование промпта.',\n      'custom': ''\n    };\n  }\n  \n  // Function to reset logger prompts to defaults\n  function resetLoggerPrompts() {\n    const defaultLoggerPrompts = getDefaultLoggerPromptsGrammar();\n  \n    document.getElementById('fuuga_logger-prompt-minimal').value = defaultLoggerPrompts['minimal'];\n    document.getElementById('fuuga_logger-prompt-medium').value = defaultLoggerPrompts['medium'];\n    document.getElementById('fuuga_logger-prompt-maximal').value = defaultLoggerPrompts['maximal'];\n    document.getElementById('fuuga_custom-logger-prompt').value = defaultLoggerPrompts['custom'];\n  \n    saveLoggerPrompts();\n    displayPromptMessage('Промпты логера сброшены к значениям по умолчанию.');\n  }\n  \n  // Function to display messages\n  function displayPromptMessage(message) {\n    const messageDiv = document.getElementById('fuuga_logger-prompt-message');\n    messageDiv.innerHTML = `<div class=\"alert alert-info\">${message}</div>`;\n    setTimeout(() => {\n        messageDiv.innerHTML = '';\n    }, 3000);\n  }\n    \n  // Modify saveHomeSettings function to include saving logger prompts\n  function saveHomeSettingsGrammar() {\n    const mainSettings = JSON.parse(localStorage.getItem('mainSettings') || '{}');\n  \n    mainSettings.applyFormatting = document.getElementById('fuuga_apply-formatting').checked;\n  \n    mainSettings.splitIntoChunks = document.getElementById('fuuga_split-into-chunks-checkbox').checked;\n  \n    mainSettings.chunkSize = document.getElementById('fuuga_chunk-size').value;\n  \n    mainSettings.maxChars = document.getElementById('fuuga_max-chars').value;\n  \n    mainSettings.temperature = document.getElementById('fuuga_temperature').value;\n  \n    mainSettings.maxTokens = document.getElementById('fuuga_max-tokens').value;\n  \n    mainSettings.formattingTemperature = document.getElementById('fuuga_formatting-temperature').value;\n  \n    mainSettings.formattingMaxTokens = document.getElementById('fuuga_formatting-max-tokens').value;\n  \n    mainSettings.formattingModel = $('#fuuga_formatting-model').val();\n  \n    mainSettings.enableLogger = document.getElementById('fuuga_enable-logger').checked;\n  \n    mainSettings.loggerLevel = document.getElementById('fuuga_logger-level').value;\n  \n    mainSettings.loggerTemperature = document.getElementById('fuuga_logger-temperature').value;\n  \n    mainSettings.loggerMaxTokens = document.getElementById('fuuga_logger-max-tokens').value;\n  \n    mainSettings.loggerModel = $('#fuuga_logger-model').val();\n  \n    // Save last selected prompt index\n    const selectedPromptIndex = $('#fuuga_prompt-select').val();\n    mainSettings.lastSelectedPromptIndex = selectedPromptIndex || -1;\n  \n    // Save last selected multiprompt indices\n    const selectedMultipromptIndices = $('#fuuga_multiprompt-select').val();\n    mainSettings.lastSelectedMultipromptIndices = selectedMultipromptIndices || [];\n  \n    localStorage.setItem('mainSettings', JSON.stringify(mainSettings));\n  \n    // Save logger prompts\n    saveLoggerPrompts();\n  }\n  \n  // Implementing the Presets tab similar to grammar.js\n  \n  // Initialize Preset Select\n  function initializePresetSelectHome() {\n    populatePresetSelectHome();\n  \n    $('#fuuga_preset-select').select2({\n        width: '100%',\n        placeholder: 'Выберите пресет',\n    }).on('select2:opening', function () {\n        setTimeout(() => {\n            $('.select2-search__field').get(0).focus();\n        }, 0);\n    });\n  }\n  \n  // Populate Preset Select\n  function populatePresetSelectHome() {\n    const select = $('#fuuga_preset-select');\n    select.empty();\n  \n    // Add \"Current Settings\" option\n    const currentOption = new Option('Текущие настройки', 'current', false, false);\n    select.append(currentOption);\n  \n    let presets = JSON.parse(localStorage.getItem('homePresets') || '[]');\n    let lastSelectedPreset = localStorage.getItem('lastSelectedPresetHome') || null;\n  \n    presets.forEach(preset => {\n        const option = new Option(preset.name, preset.name, false, false);\n        select.append(option);\n    });\n  \n    if (lastSelectedPreset && lastSelectedPreset !== 'current') {\n        select.val(lastSelectedPreset).trigger('change');\n    } else {\n        select.val('current').trigger('change');\n    }\n  }\n  \n  // Function to get current settings and prompts\n  function getCurrentSettingsHome() {\n    const mainSettings = JSON.parse(localStorage.getItem('mainSettings') || '{}');\n    const loggerPrompts = {\n        loggerPromptMinimal: document.getElementById('fuuga_logger-prompt-minimal').value,\n        loggerPromptMedium: document.getElementById('fuuga_logger-prompt-medium').value,\n        loggerPromptMaximal: document.getElementById('fuuga_logger-prompt-maximal').value,\n        loggerPromptCustom: document.getElementById('fuuga_custom-logger-prompt').value,\n    };\n    return {\n        settings: mainSettings,\n        prompts: loggerPrompts,\n    };\n  }\n  \n  // Function to save current settings as a preset\n  function saveCurrentSettingsAsPresetHome() {\n    const presetNameInput = document.getElementById('fuuga_preset-name');\n    const presetName = presetNameInput.value.trim();\n    if (!presetName) {\n        displayPresetMessageHome('Название пресета не может быть пустым.', 'danger');\n        return;\n    }\n  \n    if (presetName.toLowerCase() === 'current' || presetName === 'Текущие настройки') {\n        displayPresetMessageHome('Название пресета не может быть \"Текущие настройки\".', 'danger');\n        return;\n    }\n  \n    const currentSettings = getCurrentSettingsHome();\n  \n    const preset = {\n        name: presetName,\n        settings: currentSettings.settings,\n        prompts: currentSettings.prompts,\n    };\n  \n    let presets = JSON.parse(localStorage.getItem('homePresets') || '[]');\n  \n    // Check if preset with the same name exists\n    const existingIndex = presets.findIndex(p => p.name === presetName);\n    if (existingIndex !== -1) {\n        // Offer to overwrite existing preset\n        showPresetConfirmationHome(`Пресет с названием \"${presetName}\" уже существует. Перезаписать его?`, () => {\n            presets[existingIndex] = preset;\n            localStorage.setItem('homePresets', JSON.stringify(presets));\n            populatePresetSelectHome();\n  \n            // Select the newly saved preset\n            $('#fuuga_preset-select').val(preset.name).trigger('change');\n            localStorage.setItem('lastSelectedPresetHome', preset.name);\n  \n            displayPresetMessageHome('Пресет сохранен.', 'success');\n  \n            // Clear the preset name input\n            presetNameInput.value = '';\n  \n            // Update preset JSON\n            updatePresetJSONHome();\n        });\n    } else {\n        presets.push(preset);\n        localStorage.setItem('homePresets', JSON.stringify(presets));\n        populatePresetSelectHome();\n  \n        // Select the newly saved preset\n        $('#fuuga_preset-select').val(preset.name).trigger('change');\n        localStorage.setItem('lastSelectedPresetHome', preset.name);\n  \n        displayPresetMessageHome('Пресет сохранен.', 'success');\n  \n        // Clear the preset name input\n        presetNameInput.value = '';\n  \n        // Update preset JSON\n        updatePresetJSONHome();\n    }\n  }\n  \n  // Function to show preset confirmation dialog\n  function showPresetConfirmationHome(message, onConfirm) {\n    const confirmationDiv = document.getElementById('fuuga_preset-confirmation');\n    const confirmationMessage = document.getElementById('fuuga_preset-confirmation-message');\n    const confirmYesButton = document.getElementById('fuuga_preset-confirm-yes');\n    const confirmNoButton = document.getElementById('fuuga_preset-confirm-no');\n  \n    confirmationMessage.textContent = message;\n    confirmationDiv.style.display = 'block';\n  \n    // Remove previous event handlers\n    confirmYesButton.onclick = null;\n    confirmNoButton.onclick = null;\n  \n    confirmYesButton.onclick = () => {\n        confirmationDiv.style.display = 'none';\n        onConfirm();\n    };\n  \n    confirmNoButton.onclick = () => {\n        confirmationDiv.style.display = 'none';\n    };\n  }\n  \n  // Function to delete selected preset\n  function deleteSelectedPresetHome() {\n    const presetName = $('#fuuga_preset-select').val();\n    if (!presetName || presetName === 'current') {\n        displayPresetMessageHome('Нет выбранного пресета для удаления.', 'danger');\n        return;\n    }\n  \n    showPresetConfirmationHome(`Вы уверены, что хотите удалить пресет \"${presetName}\"?`, () => {\n        let presets = JSON.parse(localStorage.getItem('homePresets') || '[]');\n        presets = presets.filter(p => p.name !== presetName);\n        localStorage.setItem('homePresets', JSON.stringify(presets));\n  \n        // Reset preset selection\n        $('#fuuga_preset-select').val('current').trigger('change');\n        localStorage.removeItem('lastSelectedPresetHome');\n  \n        populatePresetSelectHome();\n  \n        displayPresetMessageHome('Пресет удален.', 'success');\n  \n        // Clear the JSON field\n        document.getElementById('fuuga_preset-json').value = '';\n    });\n  }\n  \n  // Function to load selected preset\n  function loadSelectedPresetHome() {\n    window.isLoadingPreset = true;\n  \n    const presetName = $('#fuuga_preset-select').val();\n    if (!presetName || presetName === 'current') {\n        window.isLoadingPreset = false;\n        return;\n    }\n  \n    let presets = JSON.parse(localStorage.getItem('homePresets') || '[]');\n    const preset = presets.find(p => p.name === presetName);\n    if (!preset) {\n        window.isLoadingPreset = false;\n        return;\n    }\n  \n    // Load settings from preset\n    const settings = preset.settings;\n  \n    // Apply settings\n    document.getElementById('fuuga_apply-formatting').checked = settings.applyFormatting;\n    document.getElementById('fuuga_split-into-chunks-checkbox').checked = settings.splitIntoChunks;\n    document.getElementById('fuuga_chunk-size').value = settings.chunkSize;\n    document.getElementById('fuuga_max-chars').value = settings.maxChars;\n    document.getElementById('fuuga_temperature').value = settings.temperature;\n    document.getElementById('fuuga_max-tokens').value = settings.maxTokens;\n    document.getElementById('fuuga_formatting-temperature').value = settings.formattingTemperature;\n    document.getElementById('fuuga_formatting-max-tokens').value = settings.formattingMaxTokens;\n    document.getElementById('fuuga_enable-logger').checked = settings.enableLogger;\n    document.getElementById('fuuga_logger-level').value = settings.loggerLevel;\n    document.getElementById('fuuga_logger-temperature').value = settings.loggerTemperature;\n    document.getElementById('fuuga_logger-max-tokens').value = settings.loggerMaxTokens;\n  \n    if (settings.formattingModel) {\n        $('#fuuga_formatting-model').val(settings.formattingModel).trigger('change');\n    }\n    if (settings.loggerModel) {\n        $('#fuuga_logger-model').val(settings.loggerModel).trigger('change');\n    }\n  \n    // Load prompts\n    const prompts = preset.prompts;\n    document.getElementById('fuuga_logger-prompt-minimal').value = prompts.loggerPromptMinimal;\n    document.getElementById('fuuga_logger-prompt-medium').value = prompts.loggerPromptMedium;\n    document.getElementById('fuuga_logger-prompt-maximal').value = prompts.loggerPromptMaximal;\n    document.getElementById('fuuga_custom-logger-prompt').value = prompts.loggerPromptCustom;\n  \n    // Save last selected preset\n    localStorage.setItem('lastSelectedPresetHome', presetName);\n  \n    // Save settings\n    saveHomeSettingsGrammar();\n  \n    displayPresetMessageHome('Пресет загружен.', 'success');\n  \n    // Update JSON\n    updatePresetJSONHome();\n  \n    window.isLoadingPreset = false;\n  }\n  \n  // Function to update preset JSON textarea\n  function updatePresetJSONHome() {\n    const presetName = $('#fuuga_preset-select').val();\n    if (!presetName || presetName === 'current') {\n        document.getElementById('fuuga_preset-json').value = '';\n        return;\n    }\n  \n    let presets = JSON.parse(localStorage.getItem('homePresets') || '[]');\n    const preset = presets.find(p => p.name === presetName);\n    if (!preset) {\n        document.getElementById('fuuga_preset-json').value = '';\n        return;\n    }\n  \n    const presetJSON = JSON.stringify(preset, null, 2);\n    document.getElementById('fuuga_preset-json').value = presetJSON;\n  }\n  \n  // Function to copy preset JSON\n  function copyPresetJSONHome() {\n    const presetJSONTextarea = document.getElementById('fuuga_preset-json');\n    presetJSONTextarea.select();\n    document.execCommand('copy');\n    displayPresetMessageHome('JSON пресета скопирован в буфер обмена.', 'success');\n  }\n  \n  // Function to import preset from JSON\n  function importPresetFromJSONGrammar() {\n    const presetJSON = document.getElementById('preset-json-import').value;\n    if (!presetJSON) {\n        displayPresetMessageGrammar('Поле JSON пустое.', 'danger');\n        return;\n    }\n\n    try {\n        const preset = JSON.parse(presetJSON);\n        if (!preset.name || !preset.settings || !preset.prompts) {\n            displayPresetMessageGrammar('Некорректный формат пресета.', 'danger');\n            return;\n        }\n\n        if (preset.name.toLowerCase() === 'current' || preset.name === 'Текущие настройки') {\n            displayPresetMessageGrammar('Название пресета не может быть \"Текущие настройки\".', 'danger');\n            return;\n        }\n\n        preset.settings = { ...getDefaultSettingsGrammar(), ...preset.settings };\n        preset.prompts = { ...getDefaultPromptsGrammar(), ...preset.prompts };\n\n        let presets = JSON.parse(localStorage.getItem('grammarPresets') || '[]');\n\n        // Проверяем, существует ли пресет с таким именем\n        const existingIndex = presets.findIndex(p => p.name === preset.name);\n        if (existingIndex !== -1) {\n            showPresetConfirmationGrammar(`Пресет с названием \"${preset.name}\" уже существует. Перезаписать его?`, () => {\n                presets[existingIndex] = preset;\n                localStorage.setItem('grammarPresets', JSON.stringify(presets));\n                populatePresetSelectGrammar();\n                $('#preset-select').val(preset.name).trigger('change');\n                localStorage.setItem('lastSelectedPreset', preset.name);\n\n                displayPresetMessageGrammar('Пресет импортирован.', 'success');\n                updatePresetJSONGrammar();\n            });\n        } else {\n            presets.push(preset);\n            localStorage.setItem('grammarPresets', JSON.stringify(presets));\n            populatePresetSelectGrammar();\n            $('#preset-select').val(preset.name).trigger('change');\n            localStorage.setItem('lastSelectedPreset', preset.name);\n\n            displayPresetMessageGrammar('Пресет импортирован.', 'success');\n            updatePresetJSONGrammar();\n        }\n    } catch (error) {\n        console.error('Ошибка при импорте пресета:', error);\n        displayPresetMessageGrammar('Ошибка при импорте пресета. Проверьте формат JSON.', 'danger');\n    }\n}\n\n  // Function to display preset messages\n  function displayPresetMessageHome(message, type) {\n    const messageDiv = document.getElementById('fuuga_preset-message');\n    messageDiv.innerHTML = `<div class=\"alert alert-${type}\">${message}</div>`;\n    setTimeout(() => {\n        messageDiv.innerHTML = '';\n    }, 3000);\n  }\n  \n  \n  async function applySuggestion(errorIndex, results, buttonElement) {\n    const error = results[errorIndex];\n    if (!error) return;\n\n    if (!error.can_edit) {\n        displayErrorMessage(buttonElement, 'Это исправление не может быть применено напрямую.');\n        return;\n    }\n\n    // if (!isSimpleReplacement(error.text, error.text_to_change)) {\n    //     displayErrorMessage(buttonElement, 'Исправление содержит дополнительную информацию и не может быть применено напрямую.');\n    //     return;\n    // }\n\n    await Word.run(async (context) => {\n        const body = context.document.body;\n        const searchResults = body.search(error.text, { matchCase: true, matchWholeWord: false });\n        searchResults.load(\"items\");\n        await context.sync();\n\n        if (searchResults.items.length > 0) {\n            for (let range of searchResults.items) {\n                range.insertText(error.text_to_change, Word.InsertLocation.replace);\n\n                const highlightCorrected = document.getElementById('highlight-corrected-checkbox').checked;\n                if (highlightCorrected) {\n                    range.font.highlightColor = 'lightgreen';\n                }\n            }\n            await context.sync();\n\n            // Добавляем исправление в историю\n            addToHistory(error);\n\n            // Удаляем ошибку из массива результатов\n            results.splice(errorIndex, 1);\n\n            // Перерисовываем список ошибок\n            displayResultsGrammar(results);\n\n            // Обновляем историю исправлений\n            displayCorrectionHistory();\n\n            // Проверяем возможность применения оставшихся исправлений\n            await checkRemainingCorrections(results);\n\n            // Проверяем, остались ли ошибки\n            checkIfNoErrorsLeft();\n        } else {\n            displayErrorMessage(buttonElement, 'Не удалось найти текст для замены. Убедитесь, что текст не был изменен.');\n        }\n    }).catch(function (error) {\n        console.log('Error:', error);\n        displayErrorMessage(buttonElement, 'Произошла ошибка при применении исправления. Пожалуйста, попробуйте еще раз.');\n    });\n}\n\nasync function checkRemainingCorrections(results) {\n    await Word.run(async (context) => {\n        const body = context.document.body;\n        body.load(\"text\");\n        await context.sync();\n\n        const originalContent = body.text;\n\n        for (let result of results) {\n            if (result.can_edit) {\n                const ranges = body.search(result.text, { matchCase: true, matchWholeWord: false });\n                ranges.load(\"items\");\n                await context.sync();\n\n                if (ranges.items.length === 0) {\n                    result.can_edit = false;\n                    if (!result.originalComment) {\n                        result.originalComment = result.comment;\n                        result.originalSuggestion = result.suggestion;\n                        result.originalExample = result.example;\n                    }\n                    result.comment = \"Исправление невозможно, так как исходный текст был изменен другим исправлением.\";\n                }\n            }\n        }\n\n        // Перерисовываем список ошибок с обновленными данными\n        displayResultsGrammar(results);\n    });\n}\n\n\n\nfunction displayCorrectionHistory() {\n    const historyDiv = document.getElementById('grammar-history');\n    historyDiv.innerHTML = '';\n\n    if (appliedCorrections.length === 0) {\n        historyDiv.innerHTML = '<p class=\"text-info\">История исправлений пуста.</p>';\n        return;\n    }\n\n    // Группируем исправления по типам ошибок\n    const groupedCorrections = appliedCorrections.reduce((acc, correction) => {\n        const type = correction.errorType || 'Другие';\n        if (!acc[type]) {\n            acc[type] = [];\n        }\n        acc[type].push(correction);\n        return acc;\n    }, {});\n\n    let accordionHTML = `<div class=\"accordion\" id=\"historyAccordion\">`;\n\n    Object.keys(groupedCorrections).forEach((type, index) => {\n        const corrections = groupedCorrections[type];\n        const collapseId = `historyCollapse${index}`;\n\n        accordionHTML += `\n            <div class=\"card\">\n                <div class=\"card-header\" id=\"historyHeading${index}\">\n                    <h2 class=\"mb-0\">\n                        <button class=\"btn btn-link\" type=\"button\" data-toggle=\"collapse\" data-target=\"#${collapseId}\" aria-expanded=\"true\" aria-controls=\"${collapseId}\">\n                            ${type.charAt(0).toUpperCase() + type.slice(1)} исправления (<span class=\"correction-count\">${corrections.length}</span>)\n                        </button>\n                    </h2>\n                </div>\n                <div id=\"${collapseId}\" class=\"collapse show\" aria-labelledby=\"historyHeading${index}\" data-parent=\"#historyAccordion\">\n                    <div class=\"card-body\">\n                        ${corrections.map((correction, correctionIndex) => `\n                            <div class=\"mb-3 p-3 border correction-card ${correctionIndex < corrections.length - 1 ? 'border-bottom' : ''}\">\n                                <p><strong>Проблемный текст:</strong> <span class=\"text-danger\">${correction.text}</span></p>\n                                <p><strong>Комментарий:</strong> ${correction.comment}</p>\n                                ${correction.can_edit ?\n                                    `<p><strong>Исправление:</strong> <span class=\"text-success\">${correction.text_to_change}</span></p>` :\n                                    `<p><strong>Рекомендации:</strong> ${correction.suggestion}</p>\n                                     <p><strong>Пример улучшенного текста:</strong> <span class=\"text-info\">${correction.example}</span></p>`\n                                }\n                                ${correction.resolvedManually ?\n                                    `<p class=\"text-info\"><em>Отмечено как решенное вручную</em></p>` :\n                                    `<p class=\"text-success\"><em>Применено автоматически</em></p>`\n                                }\n                            </div>\n                        `).join('')}\n                    </div>\n                </div>\n            </div>\n        `;\n    });\n\n    accordionHTML += '</div>';\n    historyDiv.innerHTML = accordionHTML;\n\n    // Прокручиваем к последнему исправлению\n    const lastCorrectionCard = document.querySelector('.correction-card:last-child');\n    if (lastCorrectionCard) {\n        lastCorrectionCard.scrollIntoView({ behavior: 'smooth', block: 'center' });\n    }\n}\n\n\n\n\n\nfunction checkIfNoErrorsLeft() {\n    const accordion = document.getElementById('grammarAccordion');\n    if (!accordion || !accordion.children.length) {\n        // Если нет ошибок, выводим сообщение\n        const resultsDiv = document.getElementById('grammar-results');\n        resultsDiv.innerHTML = '<p class=\"text-success\">Все ошибки исправлены!</p>';\n        // Скрываем фильтр результатов\n        document.getElementById('filter-container').style.display = 'none';\n    }\n}\n\nfunction isSimpleReplacement(originalText, replacementText) {\n    // Проверяем, что исправление не содержит дополнительной информации\n    // Например, сравниваем количество предложений и длину текста\n    const originalSentences = (originalText.match(/[.!?]/g) || []).length;\n    const replacementSentences = (replacementText.match(/[.!?]/g) || []).length;\n\n    if (replacementSentences > originalSentences + 1) {\n        return false;\n    }\n\n    if (replacementText.length > originalText.length * 2) {\n        return false;\n    }\n\n    return true;\n}\n\nfunction displayErrorMessage(buttonElement, message) {\n    // Проверяем, что buttonElement существует\n    if (!buttonElement) return;\n\n    // Удаляем существующие сообщения об ошибке\n    const existingErrorMessage = buttonElement.parentElement.querySelector('.error-message');\n    if (existingErrorMessage) {\n        existingErrorMessage.remove();\n    }\n\n    // Создаем новый элемент для сообщения об ошибке\n    const errorMessageElement = document.createElement('div');\n    errorMessageElement.className = 'error-message text-danger mt-2';\n    errorMessageElement.textContent = message;\n\n    // Вставляем сообщение об ошибке после кнопки\n    buttonElement.parentElement.insertBefore(errorMessageElement, buttonElement.nextSibling);\n}\n\n\n\n// \n\n\n\nOffice.onReady((info) => {\n    if (info.host === Office.HostType.Word) {\n        initHome();\n        initPrompts();\n        initSettings();\n        // initTests();\n        initGrammar();\n    }\n});\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n    initHome();\n    initPrompts();\n    initSettings();\n    // initTests();\n    initGrammar();\n});\n\n","// Imports\nimport ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___ from \"../../node_modules/html-loader/dist/runtime/getUrl.js\";\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"./taskpane.js\", import.meta.url);\n// Module\nvar ___HTML_LOADER_REPLACEMENT_0___ = ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___(___HTML_LOADER_IMPORT_0___);\nvar code = \"<!DOCTYPE html> <html> <head> <meta charset=\\\"UTF-8\\\"/> <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=Edge\\\"/> <title>Замена текста</title> <link rel=\\\"stylesheet\\\" href=\\\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/css/bootstrap.min.css\\\"> <link rel=\\\"stylesheet\\\" href=\\\"https://cdn.jsdelivr.net/npm/bootstrap-icons@1.5.0/font/bootstrap-icons.css\\\"> <link href=\\\"https://cdn.jsdelivr.net/npm/select2@4.0.13/dist/css/select2.min.css\\\" rel=\\\"stylesheet\\\"/> </head> <body> <div class=\\\"container mt-3\\\"> <ul class=\\\"nav nav-tabs\\\" id=\\\"myTab\\\" role=\\\"tablist\\\"> <li class=\\\"nav-item\\\" role=\\\"presentation\\\"> <a class=\\\"nav-link active\\\" id=\\\"home-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#home\\\" role=\\\"tab\\\" aria-controls=\\\"home\\\" aria-selected=\\\"true\\\">Основное</a> </li> <li class=\\\"nav-item\\\" role=\\\"presentation\\\"> <a class=\\\"nav-link\\\" id=\\\"grammar-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#grammar\\\" role=\\\"tab\\\" aria-controls=\\\"grammar\\\" aria-selected=\\\"false\\\">Проверка на ошибки</a> </li> <li class=\\\"nav-item\\\" role=\\\"presentation\\\"> <a class=\\\"nav-link\\\" id=\\\"prompts-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#prompts\\\" role=\\\"tab\\\" aria-controls=\\\"prompts\\\" aria-selected=\\\"false\\\">Промпты</a> </li> <li class=\\\"nav-item\\\" role=\\\"presentation\\\"> <a class=\\\"nav-link\\\" id=\\\"settings-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#settings\\\" role=\\\"tab\\\" aria-controls=\\\"settings\\\" aria-selected=\\\"false\\\">Настройки</a> </li> </ul> <div class=\\\"tab-content\\\" id=\\\"myTabContent\\\"> <div class=\\\"tab-pane fade show active\\\" id=\\\"home\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"home-tab\\\"></div> <div class=\\\"tab-pane fade\\\" id=\\\"grammar\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"grammar-tab\\\"></div> <div class=\\\"tab-pane fade\\\" id=\\\"prompts\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"prompts-tab\\\"></div> <div class=\\\"tab-pane fade\\\" id=\\\"settings\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"settings-tab\\\"></div> </div> </div> <\" + \"script src=\\\"https://code.jquery.com/jquery-3.6.0.min.js\\\"><\" + \"/script> <link rel=\\\"stylesheet\\\" href=\\\"https://code.jquery.com/ui/1.13.1/themes/base/jquery-ui.css\\\"> <\" + \"script src=\\\"https://code.jquery.com/ui/1.13.1/jquery-ui.min.js\\\"><\" + \"/script> <\" + \"script src=\\\"https://cdn.jsdelivr.net/npm/select2@4.0.13/dist/js/select2.min.js\\\"><\" + \"/script> <\" + \"script src=\\\"https://cdnjs.cloudflare.com/ajax/libs/axios/0.21.1/axios.min.js\\\"><\" + \"/script> <\" + \"script src=\\\"https://appsforoffice.microsoft.com/lib/1/hosted/office.js\\\"><\" + \"/script> <\" + \"script src=\\\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/js/bootstrap.bundle.min.js\\\"><\" + \"/script> <\" + \"script src=\\\"\" + ___HTML_LOADER_REPLACEMENT_0___ + \"\\\"><\" + \"/script> </body> </html> \";\n// Exports\nexport default code;"],"names":["module","exports","url","options","String","__esModule","default","hash","maybeNeedQuotes","test","concat","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","m","n","getter","d","a","definition","key","o","Object","defineProperty","enumerable","get","g","globalThis","this","Function","e","window","obj","prop","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","document","currentScript","src","scripts","getElementsByTagName","length","i","Error","replace","p","b","baseURI","self","href","_regeneratorRuntime","t","r","value","Symbol","iterator","c","asyncIterator","u","toStringTag","define","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","v","values","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","PREFIX","getPrompts","JSON","parse","localStorage","getItem","savePrompts","prompts","setItem","stringify","getWordsInfo","_x","_x2","_getWordsInfo","_callee10","context","selection","ranges","wordsInfo","_iterator5","_step5","range","footnotes","footnoteText","footnote","_context10","getTextRanges","load","sync","console","log","_createForOfIteratorHelper","items","font","text","trim","body","bold","italic","underline","color","highlightColor","size","fontName","hyperlink","t0","applyFormattedText","_x3","_x4","_x5","_x6","_applyFormattedText","_callee11","newText","formattingDifferences","defaultFormatting","words","formattingMap","wordIndex","word","wordInfo","_context11","clear","split","Map","Array","isArray","item","index","set","warn","insertText","Word","InsertLocation","end","insertFootnote","start","displayWordsInfo","baseColor","baseFont","baseSize","infoDiv","getElementById","html","innerHTML","getSpecialFormattingWords","formattingInfo","map","differences","hasDifferences","filter","getUpdatedFormattingInfo","_x7","_x8","_x9","_x10","_x11","_x12","_x13","_getUpdatedFormattingInfo","_callee14","originalFormattingInfo","originalText","modifiedText","formattingModel","temperature","maxTokens","signal","apiKey","specialWords","userPrompt","requestBody","response","data","formattingResponse","updatedFormattingInfo","_context14","calculateDefaultFormatting","model","messages","role","content","max_tokens","fetch","headers","ok","status","json","choices","message","error","t1","counts","entries","reduce","parseFloat","lastSelectedPrompt","initHome","$","on","preventDefault","tab","select2","width","placeholder","templateResult","formatPrompt","templateSelection","formatPromptSelection","multiple","allowClear","sortable","update","event","ui","updateMultipromptFlowVisualization","saveHomeSettingsHome","onclick","processSelectedTextHome","cancelProcess","showSelectedTextInfoHome","processMultipromptText","cancelMultipromptProcess","showResetSettingsModal","onchange","loggerLevel","style","display","enableLogger","checked","editLoggerPrompts","defaultLoggerPrompts","saveLoggerPrompts","displayPromptMessage","updatePresetJSON","select","models","empty","option","Option","id","append","trigger","defaultModel","find","val","savedModel","some","loadModelsForFormattingSelect","loggerModel","loadModelsForLoggerSelectHome","updatePromptSelect","prompt","lastSelectedMultipromptIndices","updateSelectedPromptsList","off","updateMultipromptSelect","loadHomeSettingsHome","populatePresetSelect","setInterval","checkSelection","loadSelectedPreset","saveCurrentSettingsAsPreset","deleteSelectedPreset","copyPresetJSON","importPresetFromJSONHome","modelDiv","lastSelectedPromptIndex","promptIndex","textContent","disabled","newPromptIndex","mainSettings","promptData","modal","alertHtml","resetHomeSettings","remove","prepend","run","_ref","_callee","processButton","processMultipromptButton","selectedPromptIndices","_context","getSelection","_x14","selectedPromptsList","indexStr","parseInt","listItem","createElement","className","dataset","appendChild","querySelectorAll","btn","addEventListener","li","closest","previousElementSibling","parentNode","insertBefore","nextElementSibling","removeChild","updatedIndices","from","children","indices","multipromptFlowDiv","accordionId","accordionHTML","idx","collapseId","applyFormatting","collapse","splitIntoChunks","chunkSize","maxChars","formattingTemperature","formattingMaxTokens","customLoggerPrompt","loggerTemperature","loggerMaxTokens","loggerPrompts","minimal","medium","maximal","savedLoggerPrompts","_processSelectedTextHome","_callee16","selectionContext","loggerPromptMinimal","loggerPromptMedium","loggerPromptMaximal","generatedTexts","totalFormattingInfo","loggerOutputs","chunks","totalChunks","progressBar","progressText","currentStepText","chunk","_yield$processChunkWi","generatedText","loggerOutput","progressPercent","_yield$processChunkWi2","_generatedText","_formattingInfo","_loggerOutput","finalText","_context16","createSelectionMarkersHome","resetProgressBarHome","showLoadingHome","abortController","AbortController","splitTextIntoChunksHome","innerText","processChunkWithRetryHome","Math","round","join","_ref15","_callee15","startRange","endRange","fullRange","_context15","search","matchCase","getFirst","expandTo","delete","_x100","displayLoggerOutputs","cleanAllTimestampsHome","_processMultipromptText","_callee18","selectedItems","selectedPrompts","currentText","_yield$processChunkWi3","totalSteps","_context18","each","modalHtml","resetMultipromptProgressBar","showMultipromptLoading","_ref16","_callee17","_context17","_x101","showMultip","romptLoading","abort","_cleanAllTimestampsHome","_callee21","_context21","_ref17","_callee20","removeMarkers","_removeMarkers","_context20","_callee19","prefix","searchPattern","searchResults","_iterator6","_step6","_context19","matchWildcards","err","_x103","_x102","_createSelectionMarkersHome","_callee23","_context23","_ref18","_callee22","selectionText","startMarker","endMarker","_context22","before","after","_x104","currentStepSpinner","sentences","match","_x15","_x16","_x17","_x18","_x19","_x20","_x21","_x22","_x23","_x24","_x25","_x26","_x27","_x28","_x29","_x30","_processChunkWithRetryHome","_callee24","retryCount","isSinglePrompt","attempts","result","_args24","_context24","processChunkHome","_x31","_x32","_x33","_x34","_x35","_x36","_x37","_x38","_x39","_x40","_x41","_x42","_x43","_x44","_x45","_x46","_x47","_processChunkHome","_callee26","promptModel","promptText","_context26","Authorization","_ref19","_callee25","_context25","_x105","processLogger","_x60","_x61","_x62","_x63","_x64","_x65","_x66","_x67","_x68","_x69","_processLogger","_callee28","beforeText","afterText","stepDescription","loggerPromptText","loggerOutputRaw","_context28","level","promptName","containerId","loggerDiv","headerId","headerClass","iconClass","string","formattedLog","toUpperCase","details","examples","example","isLoading","useProgressBar","loadingElement","cancelButton","progressContainer","spinner","currentOption","presets","lastSelectedPreset","preset","isLoadingPreset","presetName","settings","presetNameInput","toLowerCase","getCurrentSettings","existingIndex","findIndex","showPresetConfirmation","displayPresetMessage","removeItem","presetJSON","execCommand","_objectWithoutProperties","_excluded","messageDiv","setTimeout","onConfirm","confirmationDiv","confirmationMessage","confirmYesButton","confirmNoButton","_showSelectedTextInfoHome","_callee30","_context30","_ref20","_callee29","colorCounts","fontCounts","sizeCounts","_context29","getMostCommonValueHome","_x106","initPrompts","insertAdjacentHTML","tags","tokenSeparators","createTag","params","term","newTag","minimumResultsForSearch","Infinity","populateTagsFilter","populatePresetSelectPrompts","populatePresetSelectInManage","savePrompt","addPresetToPrompts","replacePromptsWithPreset","deleteSelectedPresetPrompts","deleteAllPrompts","deleteAllPresets","saveCurrentPromptsAsPreset","PresetToJSON","importPresetFromJSONPrompts","clearPresetJSONField","clearInputFields","cancelEditPrompt","loadSelectedPresetPrompts","filterAndSortPrompts","updatePromptList","showAlertPrompt","showConfirm","reject","selectFilter","selectPromptTags","tagsMap","tag","has","sort","_ref2","_ref3","_slicedToArray","count","optionText","optionFilter","optionPromptTag","saveButton","_savePrompt","_callee31","now","_context31","Date","createdAt","toISOString","updatedAt","listContainer","filterTags","sortBy","filteredPrompts","originalIndex","_ref4","every","includes","promptA","promptB","localeCompare","_ref5","card","createPromptCard","buttons","eventHandlers","Number","_x71","_updatePrompt","updatePrompt","editPrompt","target","duplicatePrompt","_x70","_deletePrompt2","deletePrompt","promptLength","toLocaleString","dateInfo","buttonsHTML","dataAttributes","_ref6","_ref7","_ref8","_ref9","selector","handler","element","_callee32","_context32","splice","_callee33","_context33","_deleteAllPrompts","_callee34","_context34","_deleteAllPresets","_callee35","_context35","_saveCurrentPromptsAsPreset","_callee36","_context36","navigator","clipboard","writeText","confirmOverwrite","presetPrompt","_replacePromptsWithPreset","_callee37","_context37","_deleteSelectedPresetPrompts","_callee38","_context38","previewDiv","presetCountSpan","addSinglePromptFromPreset","initSettings","saveApiKey","initGrammar","focus","selectedModel","updatePresetJSONGrammar","populateGrammarModelSelect","populatePresetSelectGrammar","loadGrammarSettings","loadGrammarPrompts","checkGrammarGrammar","saveGrammarSettings","togglePromptsEditorGrammar","saveGrammarPrompts","defaultPrompts","displayPromptMessageGrammar","resetGrammarSettings","loadSelectedPresetGrammar","saveCurrentSettingsAsPresetGrammar","deleteSelectedPresetGrammar","copyPresetJSONGrammar","importPresetFromJSONGrammar","cancelCheckGrammar","displayResultsGrammar","grammarResults","selectCurrentText","finishCurrentFragment","cleanAllTimestampsGrammar","currentSelectionTimestamp","isGrammarCheckCompleted","appliedCorrections","savedSelection","onSettingsChange","_step","currentSettings","getCurrentSettingsGrammar","currentPrompts","getCurrentPromptsGrammar","matchedPresetName","_iterator","areSettingsEqual","setupSettingsChangeHandlersGrammar","_selectCurrentText","_callee43","_context43","_ref21","_callee42","startSearch","endSearch","_context42","_x107","getSavedSelectionRange","_x85","_getSavedSelectionRange","_callee46","_context46","_finishCurrentFragment","_callee47","_context47","removeHighlightOnFinish","removeAllHighlights","_removeAllHighlights","_callee49","_context49","_ref23","_callee48","fragments","_iterator7","_step7","fragment","_iterator8","_step8","_context48","getRange","splitLongText","matchWholeWord","_x109","addToHistory","correction","resolvedManually","can_edit","markAsResolved","errorIndex","results","buttonElement","displayCorrectionHistory","checkIfNoErrorsLeft","defaultModelId","getBooleanSettingGrammar","defaultValue","getNumericSettingGrammar","num","highlight","addComments","highlightCorrected","checkGrammatical","checkSyntactic","checkStylistic","checkLogical","responseFormat","retryOnError","editPrompts","promptRole","promptGrammatical","promptSyntactic","promptStylistic","promptLogical","promptTextNote","highlightErrors","grammarModel","showPresetConfirmationGrammar","displayPresetMessageGrammar","obj1","obj2","obj1Keys","obj2Keys","val1","val2","_cleanAllTimestampsGrammar","_callee52","_context52","_ref24","_callee51","_removeMarkers4","_context51","_callee50","_iterator9","_step9","_context50","_x111","_x110","_checkGrammarGrammar","_callee53","chunkResult","_chunkResult","_context53","createSelectionMarkersGrammar","resetProgressBarGrammar","showLoadingGrammar","splitTextIntoChunksGrammar","analyzeTextWithRetryGrammar","highlightTextGrammar","_cancelCheckGrammar","_callee54","_context54","_x86","_x87","_x88","_analyzeTextWithRetryGrammar","_callee55","lastError","_context55","analyzeTextGrammar","_x89","_x90","_x91","_analyzeTextGrammar","_callee56","errorTypes","errorTypesMap","errorTypesString","systemPrompt","jsonResponse","_context56","selectedErrorTypes","response_format","safeJsonParseGrammar","_x92","_safeJsonParseGrammar","_callee57","str","fixedStr","_context57","scrollPosition","resultsDiv","pageYOffset","filterValue","groupedResults","errorType","errors","comment","text_to_change","originalComment","suggestion","_step2","_iterator2","getElementsByClassName","applySuggestion","_step3","_iterator3","lastErrorCard","querySelector","scrollIntoView","behavior","block","_x93","_x94","_highlightTextGrammar","_callee59","_context59","_ref25","_callee58","_iterator10","_step10","_iterator11","_step11","_iterator12","_step12","commentText","_context58","timestamp","insertComment","t2","_x112","_createSelectionMarkersGrammar","_callee61","_context61","_ref26","_callee60","_context60","_x113","maxLength","_step4","currentFragment","_iterator4","checkButton","loggerPromptCustom","_objectSpread","_x95","_x96","_x97","_applySuggestion","_callee63","_context63","displayErrorMessage","_ref27","_callee62","_iterator13","_step13","_context62","checkRemainingCorrections","_x114","_x98","_checkRemainingCorrections","_callee65","_context65","_ref28","_callee64","_iterator14","_step14","_context64","originalSuggestion","originalExample","_x115","historyDiv","groupedCorrections","acc","corrections","correctionIndex","lastCorrectionCard","accordion","existingErrorMessage","parentElement","errorMessageElement","nextSibling","Office","onReady","info","host","HostType","___HTML_LOADER_IMPORT_0___","URL"],"sourceRoot":""}